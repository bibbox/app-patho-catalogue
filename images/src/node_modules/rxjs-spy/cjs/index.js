"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.operators = exports.plugins = void 0;
var detect_1 = require("./detect");
Object.defineProperty(exports, "detect", { enumerable: true, get: function () { return detect_1.detect; } });
__exportStar(require("./logger"), exports);
var match_1 = require("./match");
Object.defineProperty(exports, "matches", { enumerable: true, get: function () { return match_1.matches; } });
__exportStar(require("./plugin"), exports);
var spy_factory_1 = require("./spy-factory");
Object.defineProperty(exports, "create", { enumerable: true, get: function () { return spy_factory_1.create; } });
var util_1 = require("./util");
Object.defineProperty(exports, "inferPath", { enumerable: true, get: function () { return util_1.inferPath; } });
Object.defineProperty(exports, "inferType", { enumerable: true, get: function () { return util_1.inferType; } });
var operators_1 = require("./operators");
var plugin_1 = require("./plugin");
exports.plugins = {
    CyclePlugin: plugin_1.CyclePlugin,
    DebugPlugin: plugin_1.DebugPlugin,
    GraphPlugin: plugin_1.GraphPlugin,
    LetPlugin: plugin_1.LetPlugin,
    LogPlugin: plugin_1.LogPlugin,
    PausePlugin: plugin_1.PausePlugin,
    SnapshotPlugin: plugin_1.SnapshotPlugin,
    StackTracePlugin: plugin_1.StackTracePlugin,
    StatsPlugin: plugin_1.StatsPlugin
};
exports.operators = {
    hide: operators_1.hide,
    tag: operators_1.tag
};
