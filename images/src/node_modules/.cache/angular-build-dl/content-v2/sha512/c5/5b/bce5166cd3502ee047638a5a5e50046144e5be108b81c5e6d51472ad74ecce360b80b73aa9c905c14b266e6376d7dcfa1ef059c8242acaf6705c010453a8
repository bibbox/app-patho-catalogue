{"version":3,"sources":["webpack:///src/app/+item-page/full/full-item-page.component.ts","webpack:///src/app/+item-page/full/full-item-page.component.html","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/\\+item\\-page\\/simple\\/item\\-page\\.component$ namespace object","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/\\+item\\-page\\/full\\/full\\-item\\-page\\.component$ namespace object","webpack:///src/app/core/breadcrumbs/item-breadcrumb.resolver.ts","webpack:///src/app/+item-page/bitstreams/upload/upload-bitstream.component.html","webpack:///src/app/+item-page/bitstreams/upload/upload-bitstream.component.ts","webpack:///src/app/+item-page/simple/themed-item-page.component.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/+item-page/full/themed-full-item-page.component.ts","webpack:///src/app/+item-page/item-page-routing.module.ts","webpack:///src/app/+item-page/simple/item-types/untyped-item/untyped-item.component.html","webpack:///src/app/+item-page/simple/item-types/untyped-item/untyped-item.component.ts","webpack:///src/app/+item-page/item-page.module.ts","webpack:///src/app/+item-page/simple/item-page.component.ts","webpack:///src/app/+item-page/simple/item-page.component.html","webpack:///src/app/+item-page/full/field-components/file-section/full-file-section.component.ts","webpack:///src/app/+item-page/full/field-components/file-section/full-file-section.component.html","webpack:///src/app/+item-page/simple/field-components/specific-field/title/item-page-title-field.component.ts","webpack:///src/app/+item-page/simple/field-components/specific-field/title/item-page-title-field.component.html"],"names":["FullItemPageComponent","route","router","items","metadataService","authService","super","this","metadata$","itemRD$","pipe","rd","payload","item","metadata","ItemPageComponent","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ItemBreadcrumbResolver","breadcrumbService","dataService","UploadBitstreamComponent","itemService","bundleService","notificationsService","translate","requestService","uploadFilesOptions","assign","url","authToken","disableMultipart","itemAlias","NOTIFICATIONS_PREFIX","subs","itemId","snapshot","params","entityType","data","dso","bundlesRD$","switchMap","itemRD","bundles","selectedBundleId","queryParams","bundle","findById","subscribe","selectedBundleName","name","setUploadUrl","createBundle","success","instant","getBitstreamsEndpoint","take","href","buildAuthHeader","uploaderComponent","ngOnInit","ngAfterViewInit","bitstream","removeByHrefSubstring","navigate","error","get","filter","subscription","forEach","unsubscribe","ThemedItemPageComponent","themeName","ThemedFullItemPageComponent","ItemPageRoutingModule","forChild","path","breadcrumb","runGuardsAndResolvers","children","component","pathMatch","loadChildren","m","EditItemPageModule","canActivate","menu","public","active","visible","model","type","LINK","text","link","UntypedItemComponent","ItemPageModule","StandalonePage","ENTRY_COMPONENTS","ngModule","providers","provide","withEntryComponents","forRoot","viewMode","processRemoteData","itemPageRoute$","FullFileSectionComponent","bitstreamDataService","translateService","paginationService","pageSize","originalOptions","currentPage","licenseOptions","initialize","originals$","getCurrentPagination","options","findAllByItemAndBundleName","elementsPerPage","errorMessage","statusCode","licenses$","page","clearPagination","ItemPageTitleFieldComponent","fields"],"mappings":"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","file":"x","sourcesContent":["import {filter, map} from 'rxjs/operators';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable ,  BehaviorSubject } from 'rxjs';\n\nimport { ItemPageComponent } from '../simple/item-page.component';\nimport { MetadataMap } from '../../core/shared/metadata.models';\nimport { ItemDataService } from '../../core/data/item-data.service';\n\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Item } from '../../core/shared/item.model';\n\nimport { MetadataService } from '../../core/metadata/metadata.service';\n\nimport { fadeInOut } from '../../shared/animations/fade';\nimport { hasValue } from '../../shared/empty.util';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * This component renders a full item page.\n * The route parameter 'id' is used to request the item it represents.\n */\n\n@Component({\n  selector: 'ds-full-item-page',\n  styleUrls: ['./full-item-page.component.scss'],\n  templateUrl: './full-item-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [fadeInOut]\n})\nexport class FullItemPageComponent extends ItemPageComponent implements OnInit {\n\n  itemRD$: BehaviorSubject<RemoteData<Item>>;\n\n  metadata$: Observable<MetadataMap>;\n\n  constructor(route: ActivatedRoute, router: Router, items: ItemDataService, metadataService: MetadataService, authService: AuthService) {\n    super(route, router, items, metadataService, authService);\n  }\n\n  /*** AoT inheritance fix, will hopefully be resolved in the near future **/\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.metadata$ = this.itemRD$.pipe(\n      map((rd: RemoteData<Item>) => rd.payload),\n      filter((item: Item) => hasValue(item)),\n      map((item: Item) => item.metadata),);\n  }\n}\n","<div class=\"container\" *ngVar=\"(itemRD$ | async) as itemRD\">\n  <div class=\"item-page\" *ngIf=\"itemRD?.hasSucceeded\" @fadeInOut>\n    <div *ngIf=\"itemRD?.payload as item\">\n      <ds-item-alerts [item]=\"item\"></ds-item-alerts>\n      <ds-item-versions-notice [item]=\"item\"></ds-item-versions-notice>\n      <ds-view-tracker [object]=\"item\"></ds-view-tracker>\n      <div class=\"d-flex flex-row\">\n        <ds-item-page-title-field class=\"mr-auto\" [item]=\"item\"></ds-item-page-title-field>\n        <div class=\"pl-2\">\n          <ds-dso-page-edit-button [pageRoute]=\"itemPageRoute$ | async\" [dso]=\"item\" [tooltipMsg]=\"'item.page.edit'\"></ds-dso-page-edit-button>\n        </div>\n      </div>\n      <div class=\"simple-view-link my-3\">\n        <a class=\"btn btn-outline-primary\" [routerLink]=\"[(itemPageRoute$ | async)]\">\n          {{\"item.page.link.simple\" | translate}}\n        </a>\n      </div>\n      <table class=\"table table-responsive table-striped\">\n        <tbody>\n          <ng-container *ngFor=\"let mdEntry of (metadata$ | async) | keyvalue\">\n            <tr *ngFor=\"let mdValue of mdEntry.value\">\n              <td>{{mdEntry.key}}</td>\n              <td>{{mdValue.value}}</td>\n              <td>{{mdValue.language}}</td>\n            </tr>\n          </ng-container>\n        </tbody>\n      </table>\n      <ds-item-page-full-file-section [item]=\"item\"></ds-item-page-full-file-section>\n      <ds-item-page-collections [item]=\"item\"></ds-item-page-collections>\n      <ds-item-versions class=\"mt-2\" [item]=\"item\"></ds-item-versions>\n    </div>\n  </div>\n  <ds-error *ngIf=\"itemRD?.hasFailed\" message=\"{{'error.item' | translate}}\"></ds-error>\n  <ds-loading *ngIf=\"itemRD?.isLoading\" message=\"{{'loading.item' | translate}}\"></ds-loading>\n</div>\n","var map = {\n\t\"./custom/app/+item-page/simple/item-page.component\": [\n\t\t\"iNcH\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"2mKD\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./custom/app/+item-page/full/full-item-page.component\": [\n\t\t\"CfG0\",\n\t\t46\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"ALbi\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { DSOBreadcrumbsService } from './dso-breadcrumbs.service';\nimport { ItemDataService } from '../data/item-data.service';\nimport { Item } from '../shared/item.model';\nimport { DSOBreadcrumbResolver } from './dso-breadcrumb.resolver';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { ITEM_PAGE_LINKS_TO_FOLLOW } from '../../+item-page/item.resolver';\n\n/**\n * The class that resolves the BreadcrumbConfig object for an Item\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemBreadcrumbResolver extends DSOBreadcrumbResolver<Item> {\n  constructor(protected breadcrumbService: DSOBreadcrumbsService, protected dataService: ItemDataService) {\n    super(breadcrumbService, dataService);\n  }\n\n  /**\n   * Method that returns the follow links to already resolve\n   * The self links defined in this list are expected to be requested somewhere in the near future\n   * Requesting them as embeds will limit the number of requests\n   */\n  get followLinks(): FollowLinkConfig<Item>[] {\n    return ITEM_PAGE_LINKS_TO_FOLLOW;\n  }\n}\n","<div class=\"container\" *ngVar=\"(bundlesRD$ | async)?.payload?.page as bundles\">\n  <ng-container *ngIf=\"bundles\">\n    <div class=\"row\">\n      <div class=\"col-12 mb-4\">\n        <h2>{{'item.bitstreams.upload.title' | translate}}</h2>\n        <ng-container *ngVar=\"(itemRD$ | async)?.payload as item\">\n          <div *ngIf=\"item\">\n            <span class=\"font-weight-bold\">{{'item.bitstreams.upload.item' | translate}}</span>\n            <span>{{item.name}}</span>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"col-12\">\n        <label class=\"font-weight-bold\">{{'item.bitstreams.upload.bundle' | translate}}</label>\n        <ds-dso-input-suggestions #f id=\"search-form\"\n                                  [suggestions]=\"bundles\"\n                                  [placeholder]=\"'item.bitstreams.upload.bundle.placeholder' | translate\"\n                                  [action]=\"getCurrentUrl()\"\n                                  [name]=\"'bundle-select'\"\n                                  [debounceTime]=\"50\"\n                                  [(ngModel)]=\"selectedBundleName\"\n                                  (typeSuggestion)=\"bundleNameChange()\"\n                                  (clickSuggestion)=\"onClick($event)\"\n                                  (click)=\"f.open()\"\n                                  ngDefaultControl>\n        </ds-dso-input-suggestions>\n        <button *ngIf=\"!selectedBundleId && selectedBundleName?.length > 0\" class=\"btn btn-success\" (click)=\"createBundle()\">\n          <i class=\"fa fa-plus\"></i> {{ 'item.bitstreams.upload.bundle.new' | translate }}\n        </button>\n        <ds-uploader  class=\"w-100\" *ngIf=\"selectedBundleId\"\n                      [dropMsg]=\"'item.bitstreams.upload.drop-message'\"\n                      [dropOverDocumentMsg]=\"'item.bitstreams.upload.drop-message'\"\n                      [enableDragOverDocument]=\"true\"\n                      [uploadFilesOptions]=\"uploadFilesOptions\"\n                      (onCompleteItem)=\"onCompleteItem($event)\"\n                      (onUploadError)=\"onUploadError()\"></ds-uploader>\n        <button class=\"btn btn-outline-secondary\" (click)=\"onCancel()\">{{'item.bitstreams.upload.cancel' | translate}}</button>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UploaderOptions } from '../../../shared/uploader/uploader-options.model';\nimport { hasValue, isEmpty, isNotEmpty } from '../../../shared/empty.util';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { Bundle } from '../../../core/shared/bundle.model';\nimport { BundleDataService } from '../../../core/data/bundle-data.service';\nimport { getFirstSucceededRemoteDataPayload } from '../../../core/shared/operators';\nimport { UploaderComponent } from '../../../shared/uploader/uploader.component';\nimport { RequestService } from '../../../core/data/request.service';\nimport { getBitstreamModuleRoute } from '../../../app-routing-paths';\nimport { getEntityEditRoute } from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-upload-bitstream',\n  templateUrl: './upload-bitstream.component.html'\n})\n/**\n * Page component for uploading a bitstream to an item\n */\nexport class UploadBitstreamComponent implements OnInit, OnDestroy {\n  /**\n   * The file uploader component\n   */\n  @ViewChild(UploaderComponent) uploaderComponent: UploaderComponent;\n\n  /**\n   * The ID of the item to upload a bitstream to\n   */\n  itemId: string;\n\n  /**\n   * The entity type of the item\n   * This is fetched from the current URL and will determine the item's page route\n   */\n  entityType: string;\n\n  /**\n   * The item to upload a bitstream to\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The item's bundles\n   */\n  bundlesRD$: Observable<RemoteData<PaginatedList<Bundle>>>;\n\n  /**\n   * The ID of the currently selected bundle to upload a bitstream to\n   */\n  selectedBundleId: string;\n\n  /**\n   * The name of the currently selected bundle to upload a bitstream to\n   */\n  selectedBundleName: string;\n\n  /**\n   * The uploader configuration options\n   * @type {UploaderOptions}\n   */\n  uploadFilesOptions: UploaderOptions = Object.assign(new UploaderOptions(), {\n    // URL needs to contain something to not produce any errors. This will be replaced once a bundle has been selected.\n    url: 'placeholder',\n    authToken: null,\n    disableMultipart: false,\n    itemAlias: null\n  });\n\n  /**\n   * The prefix for all i18n notification messages within this component\n   */\n  NOTIFICATIONS_PREFIX = 'item.bitstreams.upload.notifications.';\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  subs: Subscription[] = [];\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected itemService: ItemDataService,\n              protected bundleService: BundleDataService,\n              protected authService: AuthService,\n              protected notificationsService: NotificationsService,\n              protected translate: TranslateService,\n              protected requestService: RequestService) {\n  }\n\n  /**\n   * Initialize component properties:\n   * itemRD$          Fetched from the current route data (populated by BitstreamPageResolver)\n   * bundlesRD$       List of bundles on the item\n   * selectedBundleId Starts off by checking if the route's queryParams contain a \"bundle\" parameter. If none is found,\n   *                  the ID of the first bundle in the list is selected.\n   * Calls setUploadUrl after setting the selected bundle\n   */\n  ngOnInit(): void {\n    this.itemId = this.route.snapshot.params.id;\n    this.entityType = this.route.snapshot.params['entity-type'];\n    this.itemRD$ = this.route.data.pipe(map((data) => data.dso));\n    this.bundlesRD$ = this.itemRD$.pipe(\n      switchMap((itemRD: RemoteData<Item>) => itemRD.payload.bundles)\n    );\n    this.selectedBundleId = this.route.snapshot.queryParams.bundle;\n    if (isNotEmpty(this.selectedBundleId)) {\n      this.bundleService.findById(this.selectedBundleId).pipe(\n        getFirstSucceededRemoteDataPayload()\n      ).subscribe((bundle: Bundle) => {\n        this.selectedBundleName = bundle.name;\n      });\n      this.setUploadUrl();\n    }\n  }\n\n  /**\n   * Create a new bundle with the filled in name on the current item\n   */\n  createBundle() {\n    this.itemService.createBundle(this.itemId, this.selectedBundleName).pipe(\n      getFirstSucceededRemoteDataPayload()\n    ).subscribe((bundle: Bundle) => {\n      this.selectedBundleId = bundle.id;\n      this.notificationsService.success(\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'bundle.created.title'),\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'bundle.created.content')\n      );\n      this.setUploadUrl();\n    });\n  }\n\n  /**\n   * The user changed the bundle name\n   * Reset the bundle ID\n   */\n  bundleNameChange() {\n    this.selectedBundleId = undefined;\n  }\n\n  /**\n   * Set the upload url to match the selected bundle ID\n   */\n  setUploadUrl() {\n    this.bundleService.getBitstreamsEndpoint(this.selectedBundleId).pipe(take(1)).subscribe((href: string) => {\n      this.uploadFilesOptions.url = href;\n      if (isEmpty(this.uploadFilesOptions.authToken)) {\n        this.uploadFilesOptions.authToken = this.authService.buildAuthHeader();\n      }\n      // Re-initialize the uploader component to ensure the latest changes to the options are applied\n      if (this.uploaderComponent) {\n        this.uploaderComponent.ngOnInit();\n        this.uploaderComponent.ngAfterViewInit();\n      }\n    });\n  }\n\n  /**\n   * The request was successful, redirect the user to the new bitstream's edit page\n   * @param bitstream\n   */\n  public onCompleteItem(bitstream) {\n    // Clear cached requests for this bundle's bitstreams to ensure lists on all pages are up-to-date\n    this.bundleService.getBitstreamsEndpoint(this.selectedBundleId).pipe(take(1)).subscribe((href: string) => {\n      this.requestService.removeByHrefSubstring(href);\n    });\n\n    // Bring over the item ID as a query parameter\n    const queryParams = { itemId: this.itemId, entityType: this.entityType };\n    this.router.navigate([getBitstreamModuleRoute(), bitstream.id, 'edit'], { queryParams: queryParams });\n  }\n\n  /**\n   * The request was unsuccessful, display an error notification\n   */\n  public onUploadError() {\n    this.notificationsService.error(null, this.translate.get(this.NOTIFICATIONS_PREFIX + 'upload.failed'));\n  }\n\n  /**\n   * The user selected a bundle from the input suggestions\n   * Set the bundle ID and Name properties, as well as the upload URL\n   * @param bundle\n   */\n  onClick(bundle: Bundle) {\n    this.selectedBundleId = bundle.id;\n    this.selectedBundleName = bundle.name;\n    this.setUploadUrl();\n  }\n\n  /**\n   * When cancel is clicked, navigate back to the item's edit bitstreams page\n   */\n  onCancel() {\n    this.router.navigate([getEntityEditRoute(this.entityType, this.itemId), 'bitstreams']);\n  }\n\n  /**\n   * @returns {string} the current URL\n   */\n  getCurrentUrl() {\n    return this.router.url;\n  }\n\n  /**\n   * Unsubscribe from all open subscriptions when the component is destroyed\n   */\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ItemPageComponent } from './item-page.component';\n\n/**\n * Themed wrapper for ItemPageComponent\n */\n@Component({\n  selector: 'ds-themed-item-page',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n})\n\nexport class ThemedItemPageComponent extends ThemedComponent<ItemPageComponent> {\n  protected getComponentName(): string {\n    return 'ItemPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/+item-page/simple/item-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./item-page.component`);\n  }\n\n}\n","<ng-template #vcr></ng-template>\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { FullItemPageComponent } from './full-item-page.component';\n\n/**\n * Themed wrapper for FullItemPageComponent\n */\n@Component({\n  selector: 'ds-themed-full-item-page',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n})\nexport class ThemedFullItemPageComponent extends ThemedComponent<FullItemPageComponent> {\n  protected getComponentName(): string {\n    return 'FullItemPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/+item-page/full/full-item-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./full-item-page.component`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ItemPageResolver } from './item-page.resolver';\nimport { AuthenticatedGuard } from '../core/auth/authenticated.guard';\nimport { ItemBreadcrumbResolver } from '../core/breadcrumbs/item-breadcrumb.resolver';\nimport { DSOBreadcrumbsService } from '../core/breadcrumbs/dso-breadcrumbs.service';\nimport { LinkService } from '../core/cache/builders/link.service';\nimport { UploadBitstreamComponent } from './bitstreams/upload/upload-bitstream.component';\nimport { ITEM_EDIT_PATH, UPLOAD_BITSTREAM_PATH } from './item-page-routing-paths';\nimport { ItemPageAdministratorGuard } from './item-page-administrator.guard';\nimport { MenuItemType } from '../shared/menu/initial-menus-state';\nimport { LinkMenuItemModel } from '../shared/menu/menu-item/models/link.model';\nimport { ThemedItemPageComponent } from './simple/themed-item-page.component';\nimport { ThemedFullItemPageComponent } from './full/themed-full-item-page.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: ':id',\n        resolve: {\n          dso: ItemPageResolver,\n          breadcrumb: ItemBreadcrumbResolver\n        },\n        runGuardsAndResolvers: 'always',\n        children: [\n          {\n            path: '',\n            component: ThemedItemPageComponent,\n            pathMatch: 'full',\n          },\n          {\n            path: 'full',\n            component: ThemedFullItemPageComponent,\n          },\n          {\n            path: ITEM_EDIT_PATH,\n            loadChildren: () => import('./edit-item-page/edit-item-page.module')\n              .then((m) => m.EditItemPageModule),\n          },\n          {\n            path: UPLOAD_BITSTREAM_PATH,\n            component: UploadBitstreamComponent,\n            canActivate: [AuthenticatedGuard]\n          }\n        ],\n        data: {\n          menu: {\n            public: [{\n              id: 'statistics_item_:id',\n              active: true,\n              visible: true,\n              model: {\n                type: MenuItemType.LINK,\n                text: 'menu.section.statistics',\n                link: 'statistics/items/:id/',\n              } as LinkMenuItemModel,\n            }],\n          },\n        },\n      }\n    ])\n  ],\n  providers: [\n    ItemPageResolver,\n    ItemBreadcrumbResolver,\n    DSOBreadcrumbsService,\n    LinkService,\n    ItemPageAdministratorGuard,\n  ]\n\n})\nexport class ItemPageRoutingModule {\n\n}\n","<div class=\"d-flex flex-row\">\n  <h2 class=\"item-page-title-field mr-auto\">\n    <ds-metadata-values [mdValues]=\"object?.allMetadata(['dc.title'])\"></ds-metadata-values>\n  </h2>\n  <div class=\"pl-2\">\n    <ds-dso-page-edit-button [pageRoute]=\"itemPageRoute\" [dso]=\"object\" [tooltipMsg]=\"'item.page.edit'\"></ds-dso-page-edit-button>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-md-4\">\n    <ng-container *ngIf=\"!mediaViewer.image\">\n      <ds-metadata-field-wrapper>\n        <ds-thumbnail [thumbnail]=\"getThumbnail() | async\"></ds-thumbnail>\n      </ds-metadata-field-wrapper>\n    </ng-container>\n    <ng-container *ngIf=\"mediaViewer.image\">\n      <ds-media-viewer [item]=\"object\" [videoOptions]=\"mediaViewer.video\"></ds-media-viewer>\n    </ng-container>\n    <ds-item-page-file-section [item]=\"object\"></ds-item-page-file-section>\n    <ds-item-page-date-field [item]=\"object\"></ds-item-page-date-field>\n    <ds-item-page-author-field [item]=\"object\"></ds-item-page-author-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['journal.title']\"\n      [label]=\"'item.page.journal-title'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['journal.identifier.issn']\"\n      [label]=\"'item.page.journal-issn'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['journalvolume.identifier.name']\"\n      [label]=\"'item.page.volume-title'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.publisher']\"\n      [label]=\"'item.page.publisher'\">\n    </ds-generic-item-page-field>\n  </div>\n  <div class=\"col-xs-12 col-md-6\">\n    <ds-metadata-representation-list\n      [parentItem]=\"object\"\n      [itemType]=\"'Person'\"\n      [metadataField]=\"'dc.contributor.author'\"\n      [label]=\"'relationships.isAuthorOf' | translate\">\n    </ds-metadata-representation-list>\n    <ds-item-page-abstract-field [item]=\"object\"></ds-item-page-abstract-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.description']\"\n      [label]=\"'item.page.description'\">\n    </ds-generic-item-page-field>\n\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.subject']\"\n      [separator]=\"','\"\n      [label]=\"'item.page.subject'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.identifier.citation']\"\n      [label]=\"'item.page.citation'\">\n    </ds-generic-item-page-field>\n    <ds-item-page-uri-field [item]=\"object\"\n      [fields]=\"['dc.identifier.uri']\"\n      [label]=\"'item.page.uri'\">\n    </ds-item-page-uri-field>\n    <ds-item-page-collections [item]=\"object\"></ds-item-page-collections>\n    <div>\n      <a class=\"btn btn-outline-primary\" [routerLink]=\"[itemPageRoute + '/full']\" role=\"button\">\n        <i class=\"fas fa-info-circle\"></i> {{\"item.page.link.full\" | translate}}\n      </a>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Item } from '../../../../core/shared/item.model';\nimport { ItemComponent } from '../shared/item.component';\nimport { ViewMode } from '../../../../core/shared/view-mode.model';\nimport { listableObjectComponent } from '../../../../shared/object-collection/shared/listable-object/listable-object.decorator';\n\n/**\n * Component that represents a publication Item page\n */\n\n@listableObjectComponent(Item, ViewMode.StandalonePage)\n@Component({\n  selector: 'ds-untyped-item',\n  styleUrls: ['./untyped-item.component.scss'],\n  templateUrl: './untyped-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UntypedItemComponent extends ItemComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ItemPageComponent } from './simple/item-page.component';\nimport { ItemPageRoutingModule } from './item-page-routing.module';\nimport { MetadataUriValuesComponent } from './field-components/metadata-uri-values/metadata-uri-values.component';\nimport { ItemPageAuthorFieldComponent } from './simple/field-components/specific-field/author/item-page-author-field.component';\nimport { ItemPageDateFieldComponent } from './simple/field-components/specific-field/date/item-page-date-field.component';\nimport { ItemPageAbstractFieldComponent } from './simple/field-components/specific-field/abstract/item-page-abstract-field.component';\nimport { ItemPageUriFieldComponent } from './simple/field-components/specific-field/uri/item-page-uri-field.component';\nimport { ItemPageTitleFieldComponent } from './simple/field-components/specific-field/title/item-page-title-field.component';\nimport { ItemPageFieldComponent } from './simple/field-components/specific-field/item-page-field.component';\nimport { FileSectionComponent } from './simple/field-components/file-section/file-section.component';\nimport { CollectionsComponent } from './field-components/collections/collections.component';\nimport { FullItemPageComponent } from './full/full-item-page.component';\nimport { FullFileSectionComponent } from './full/field-components/file-section/full-file-section.component';\nimport { PublicationComponent } from './simple/item-types/publication/publication.component';\nimport { ItemComponent } from './simple/item-types/shared/item.component';\nimport { EditItemPageModule } from './edit-item-page/edit-item-page.module';\nimport { UploadBitstreamComponent } from './bitstreams/upload/upload-bitstream.component';\nimport { StatisticsModule } from '../statistics/statistics.module';\nimport { AbstractIncrementalListComponent } from './simple/abstract-incremental-list/abstract-incremental-list.component';\nimport { UntypedItemComponent } from './simple/item-types/untyped-item/untyped-item.component';\nimport { JournalEntitiesModule } from '../entity-groups/journal-entities/journal-entities.module';\nimport { ResearchEntitiesModule } from '../entity-groups/research-entities/research-entities.module';\nimport { ThemedItemPageComponent } from './simple/themed-item-page.component';\nimport { ThemedFullItemPageComponent } from './full/themed-full-item-page.component';\nimport { MediaViewerComponent } from './media-viewer/media-viewer.component';\nimport { MediaViewerVideoComponent } from './media-viewer/media-viewer-video/media-viewer-video.component';\nimport { MediaViewerImageComponent } from './media-viewer/media-viewer-image/media-viewer-image.component';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\n\nconst ENTRY_COMPONENTS = [\n  // put only entry components that use custom decorator\n  PublicationComponent,\n  UntypedItemComponent\n];\n\nconst DECLARATIONS = [\n  ItemPageComponent,\n  ThemedItemPageComponent,\n  FullItemPageComponent,\n  ThemedFullItemPageComponent,\n  MetadataUriValuesComponent,\n  ItemPageAuthorFieldComponent,\n  ItemPageDateFieldComponent,\n  ItemPageAbstractFieldComponent,\n  ItemPageUriFieldComponent,\n  ItemPageTitleFieldComponent,\n  ItemPageFieldComponent,\n  FileSectionComponent,\n  CollectionsComponent,\n  FullFileSectionComponent,\n  PublicationComponent,\n  UntypedItemComponent,\n  ItemComponent,\n  UploadBitstreamComponent,\n  AbstractIncrementalListComponent,\n  MediaViewerComponent,\n  MediaViewerVideoComponent,\n  MediaViewerImageComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule.withEntryComponents(),\n    ItemPageRoutingModule,\n    EditItemPageModule,\n    StatisticsModule.forRoot(),\n    JournalEntitiesModule.withEntryComponents(),\n    ResearchEntitiesModule.withEntryComponents(),\n     NgxGalleryModule,\n  ],\n  declarations: [\n    ...DECLARATIONS\n  ],\n  exports: [\n    ...DECLARATIONS\n  ]\n})\nexport class ItemPageModule {\n  /**\n   * NOTE: this method allows to resolve issue with components that using a custom decorator\n   * which are not loaded during CSR otherwise\n   */\n  static withEntryComponents() {\n    return {\n      ngModule: ItemPageModule,\n      providers: ENTRY_COMPONENTS.map((component) => ({provide: component}))\n    };\n  }\n\n}\n","import { map } from 'rxjs/operators';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { ItemDataService } from '../../core/data/item-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\n\nimport { Item } from '../../core/shared/item.model';\n\nimport { MetadataService } from '../../core/metadata/metadata.service';\n\nimport { fadeInOut } from '../../shared/animations/fade';\nimport { getAllSucceededRemoteDataPayload, redirectOn4xx } from '../../core/shared/operators';\nimport { ViewMode } from '../../core/shared/view-mode.model';\nimport { AuthService } from '../../core/auth/auth.service';\nimport { getItemPageRoute } from '../item-page-routing-paths';\n\n/**\n * This component renders a simple item page.\n * The route parameter 'id' is used to request the item it represents.\n * All fields of the item that should be displayed, are defined in its template.\n */\n@Component({\n  selector: 'ds-item-page',\n  styleUrls: ['./item-page.component.scss'],\n  templateUrl: './item-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [fadeInOut]\n})\nexport class ItemPageComponent implements OnInit {\n\n  /**\n   * The item's id\n   */\n  id: number;\n\n  /**\n   * The item wrapped in a remote-data object\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The view-mode we're currently on\n   */\n  viewMode = ViewMode.StandalonePage;\n\n  /**\n   * Route to the item's page\n   */\n  itemPageRoute$: Observable<string>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private items: ItemDataService,\n    private metadataService: MetadataService,\n    private authService: AuthService,\n  ) { }\n\n  /**\n   * Initialize instance variables\n   */\n  ngOnInit(): void {\n    this.itemRD$ = this.route.data.pipe(\n      map((data) => data.dso as RemoteData<Item>),\n      redirectOn4xx(this.router, this.authService)\n    );\n    this.metadataService.processRemoteData(this.itemRD$);\n    this.itemPageRoute$ = this.itemRD$.pipe(\n      getAllSucceededRemoteDataPayload(),\n      map((item) => getItemPageRoute(item))\n    );\n  }\n}\n","<div class=\"container\" *ngVar=\"(itemRD$ | async) as itemRD\">\n  <div class=\"item-page\" *ngIf=\"itemRD?.hasSucceeded\" @fadeInOut>\n    <div *ngIf=\"itemRD?.payload as item\">\n      <ds-item-alerts [item]=\"item\"></ds-item-alerts>\n      <ds-item-versions-notice [item]=\"item\"></ds-item-versions-notice>\n      <ds-view-tracker [object]=\"item\"></ds-view-tracker>\n      <ds-listable-object-component-loader [object]=\"item\" [viewMode]=\"viewMode\"></ds-listable-object-component-loader>\n      <ds-item-versions class=\"mt-2\" [item]=\"item\"></ds-item-versions>\n    </div>\n  </div>\n  <ds-error *ngIf=\"itemRD?.hasFailed\" message=\"{{'error.item' | translate}}\"></ds-error>\n  <ds-loading *ngIf=\"itemRD?.isLoading\" message=\"{{'loading.item' | translate}}\"></ds-loading>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BitstreamDataService } from '../../../../core/data/bitstream-data.service';\n\nimport { Bitstream } from '../../../../core/shared/bitstream.model';\nimport { Item } from '../../../../core/shared/item.model';\nimport { followLink } from '../../../../shared/utils/follow-link-config.model';\nimport { FileSectionComponent } from '../../../simple/field-components/file-section/file-section.component';\nimport { PaginationComponentOptions } from '../../../../shared/pagination/pagination-component-options.model';\nimport { PaginatedList } from '../../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../../core/data/remote-data';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { NotificationsService } from '../../../../shared/notifications/notifications.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { hasValue, isEmpty } from '../../../../shared/empty.util';\nimport { PaginationService } from '../../../../core/pagination/pagination.service';\n\n/**\n * This component renders the file section of the item\n * inside a 'ds-metadata-field-wrapper' component.\n */\n\n@Component({\n  selector: 'ds-item-page-full-file-section',\n  styleUrls: ['./full-file-section.component.scss'],\n  templateUrl: './full-file-section.component.html'\n})\nexport class FullFileSectionComponent extends FileSectionComponent implements OnInit {\n\n  @Input() item: Item;\n\n  label: string;\n\n  originals$: Observable<RemoteData<PaginatedList<Bitstream>>>;\n  licenses$: Observable<RemoteData<PaginatedList<Bitstream>>>;\n\n  pageSize = 5;\n  originalOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'obo',\n    currentPage: 1,\n    pageSize: this.pageSize\n  });\n\n  licenseOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'lbo',\n    currentPage: 1,\n    pageSize: this.pageSize\n  });\n\n  constructor(\n    bitstreamDataService: BitstreamDataService,\n    protected notificationsService: NotificationsService,\n    protected translateService: TranslateService,\n    protected paginationService: PaginationService\n  ) {\n    super(bitstreamDataService, notificationsService, translateService);\n  }\n\n  ngOnInit(): void {\n    this.initialize();\n  }\n\n  initialize(): void {\n    this.originals$ = this.paginationService.getCurrentPagination(this.originalOptions.id, this.originalOptions).pipe(\n      switchMap((options: PaginationComponentOptions) => this.bitstreamDataService.findAllByItemAndBundleName(\n        this.item,\n        'ORIGINAL',\n        {elementsPerPage: options.pageSize, currentPage: options.currentPage},\n        true,\n        true,\n        followLink('format')\n      )),\n      tap((rd: RemoteData<PaginatedList<Bitstream>>) => {\n          if (hasValue(rd.errorMessage)) {\n            this.notificationsService.error(this.translateService.get('file-section.error.header'), `${rd.statusCode} ${rd.errorMessage}`);\n          }\n        }\n      )\n    );\n\n    this.licenses$ = this.paginationService.getCurrentPagination(this.licenseOptions.id, this.licenseOptions).pipe(\n      switchMap((options: PaginationComponentOptions) => this.bitstreamDataService.findAllByItemAndBundleName(\n        this.item,\n        'LICENSE',\n        {elementsPerPage: options.pageSize, currentPage: options.currentPage},\n        true,\n        true,\n        followLink('format')\n      )),\n      tap((rd: RemoteData<PaginatedList<Bitstream>>) => {\n          if (hasValue(rd.errorMessage)) {\n            this.notificationsService.error(this.translateService.get('file-section.error.header'), `${rd.statusCode} ${rd.errorMessage}`);\n          }\n        }\n      )\n    );\n\n  }\n\n  hasValuesInBundle(bundle: PaginatedList<Bitstream>) {\n    return hasValue(bundle) && !isEmpty(bundle.page);\n  }\n\n  ngOnDestroy(): void {\n    this.paginationService.clearPagination(this.originalOptions.id);\n    this.paginationService.clearPagination(this.licenseOptions.id);\n  }\n\n}\n","<ds-metadata-field-wrapper [label]=\"label | translate\">\n    <div *ngVar=\"(originals$ | async)?.payload as originals\">\n        <div *ngIf=\"hasValuesInBundle(originals)\">\n            <h5 class=\"simple-view-element-header\">{{\"item.page.filesection.original.bundle\" | translate}}</h5>\n            <ds-pagination *ngIf=\"originals?.page?.length > 0\"\n                           [hideGear]=\"true\"\n                           [hidePagerWhenSinglePage]=\"true\"\n                           [paginationOptions]=\"originalOptions\"\n                           [pageInfoState]=\"originals\"\n                           [collectionSize]=\"originals?.totalElements\"\n                           [retainScrollPosition]=\"true\">\n\n\n                <div class=\"file-section row\" *ngFor=\"let file of originals?.page;\">\n                    <div class=\"col-3\">\n                        <ds-thumbnail [thumbnail]=\"(file.thumbnail | async)?.payload\"></ds-thumbnail>\n                    </div>\n                    <div class=\"col-7\">\n                        <dl class=\"row\">\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.name\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.name}}</dd>\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.size\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.sizeBytes) | dsFileSize }}</dd>\n\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.format\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.format | async)?.payload?.description}}</dd>\n\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.description\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.firstMetadataValue(\"dc.description\")}}</dd>\n                        </dl>\n                    </div>\n                    <div class=\"col-2\">\n                        <ds-file-download-link [bitstream]=\"file\">\n                            {{\"item.page.filesection.download\" | translate}}\n                        </ds-file-download-link>\n                    </div>\n                </div>\n            </ds-pagination>\n        </div>\n    </div>\n    <div *ngVar=\"(licenses$ | async)?.payload as licenses\">\n        <div *ngIf=\"hasValuesInBundle(licenses)\">\n            <h5 class=\"simple-view-element-header\">{{\"item.page.filesection.license.bundle\" | translate}}</h5>\n            <ds-pagination *ngIf=\"licenses?.page?.length > 0\"\n                           [hideGear]=\"true\"\n                           [hidePagerWhenSinglePage]=\"true\"\n                           [paginationOptions]=\"licenseOptions\"\n                           [pageInfoState]=\"licenses\"\n                           [collectionSize]=\"licenses?.totalElements\"\n                           [retainScrollPosition]=\"true\">\n\n\n                <div class=\"file-section row\" *ngFor=\"let file of licenses?.page;\">\n                    <div class=\"col-3\">\n                        <ds-thumbnail [thumbnail]=\"(file.thumbnail | async)?.payload\"></ds-thumbnail>\n                    </div>\n                    <div class=\"col-7\">\n                        <dl class=\"row\">\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.name\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.name}}</dd>\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.size\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.sizeBytes) | dsFileSize }}</dd>\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.format\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.format | async)?.payload?.description}}</dd>\n\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.description\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.firstMetadataValue(\"dc.description\")}}</dd>\n                        </dl>\n                    </div>\n                    <div class=\"col-2\">\n                        <ds-file-download-link [bitstream]=\"file\">\n                            {{\"item.page.filesection.download\" | translate}}\n                        </ds-file-download-link>\n                    </div>\n                </div>\n            </ds-pagination>\n        </div>\n    </div>\n</ds-metadata-field-wrapper>\n","import { Component, Input } from '@angular/core';\n\nimport { Item } from '../../../../../core/shared/item.model';\nimport { ItemPageFieldComponent } from '../item-page-field.component';\n\n@Component({\n    selector: 'ds-item-page-title-field',\n    templateUrl: './item-page-title-field.component.html'\n})\n/**\n * This component is used for displaying the title (dc.title) of an item\n */\nexport class ItemPageTitleFieldComponent extends ItemPageFieldComponent {\n\n    /**\n     * The item to display metadata for\n     */\n    @Input() item: Item;\n\n    /**\n     * Separator string between multiple values of the metadata fields defined\n     * @type {string}\n     */\n    separator: string;\n\n    /**\n     * Fields (schema.element.qualifier) used to render their values.\n     * In this component, we want to display values for metadata 'dc.title'\n     */\n    fields: string[] = [\n        'dc.title'\n    ];\n\n}\n","<h2 class=\"item-page-title-field\">\n  <div *ngIf=\"item.firstMetadataValue('dspace.entity.type') as type\">\n    {{ type.toLowerCase() + '.page.titleprefix' | translate }}\n  </div>\n  <ds-metadata-values [mdValues]=\"item?.allMetadata(fields)\"></ds-metadata-values>\n</h2>\n"]}