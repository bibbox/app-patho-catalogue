{"version":3,"sources":["webpack:///src/app/+login-page/themed-login-page.component.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/+login-page/login-page-routing.module.ts","webpack:///src/app/+login-page/login-page.module.ts","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/\\+login\\-page\\/login\\-page\\.component$ namespace object","webpack:///src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","webpack:///src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","webpack:///src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts"],"names":["ThemedLoginPageComponent","themeName","LoginPageRoutingModule","forChild","path","pathMatch","component","resolve","breadcrumb","data","breadcrumbKey","title","LoginPageModule","map","webpackAsyncContext","req","__webpack_require__","o","Promise","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","I18nBreadcrumbResolver","breadcrumbService","route","state","key","url","fullPath","provider","this","I18nBreadcrumbsService","Breadcrumb","text"],"mappings":"iQAYO,Y,MAAMA,UAAiC,IAClC,mBACR,MAAO,qBAGC,sBAAsBC,GAC9B,OAAO,UAAO,KAAgBA,0CAGtB,0BACR,OAAO,kC,2CAVED,I,mDAAAA,EAAwB,0JCZrC,8FACA,gC,qBDWO,G,6CAAM,GEKN,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAsB,UALtB,CACT,IACA,KACD,SARQ,CACP,IAAaC,SAAS,CACpB,CAAEC,KAAM,GAAIC,UAAW,OAAQC,UAAW,EAA0BC,QAAS,CAAEC,WAAY,KAA0BC,KAAM,CAAEC,cAAe,QAASC,MAAO,sB,GAQ3J,GCCA,Q,MAAMC,G,yDAAAA,I,+EAAAA,IAAe,SAVjB,CACP,EACA,IACA,Q,GAOG,I,uBClBP,IAAIC,EAAM,CACT,gDAAiD,CAChD,OACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQX,UAAUY,MAAKA,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMV,EAAIE,GAAMS,EAAKD,EAAI,GAC7B,OAAOL,QAAQO,IAAIF,EAAIG,MAAM,GAAGb,IAAIG,EAAoBI,IAAID,MAAKA,WAChE,OAAOH,EAAoBQ,MAG7BV,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBU,GAAK,OACzBK,EAAOC,QAAUhB,G,kCCrBjB,sFASO,Y,MAAMiB,EACX,YAAsBC,GAAA,KAAAA,oBAStB,QAAQC,EAA+BC,GACrC,MAAMC,EAAMF,EAAMxB,KAAKC,cACvB,GAAI,YAAWyB,GACb,MAAM,IAAId,MAAM,mDAAsDY,EAAMG,IAAM,+CAEpF,MAAMC,EAAW,YAAwBJ,GACzC,MAAO,CAAEK,SAAUC,KAAKP,kBAAmBG,IAAKA,EAAKC,IAAKC,I,6CAhBjDN,GAAsB,+B,sDAAtBA,EAAsB,QAAtBA,EAAsB,qBAFrB,S,GAEP,I,kCCbP,0EAgBO,Y,MAAMS,EAOX,eAAeL,EAAaC,GAC1B,OAAO,YAAa,CAAC,IAAI,IAAWD,EAhBE,eAgBgCC,M,6CAR7DI,I,sDAAAA,EAAsB,QAAtBA,EAAsB,qBAFrB,S,GAEP,I,oCChBP,kCAGO,MAAMC,EACX,YAISC,EAIAN,GAJA,KAAAM,OAIA,KAAAN","file":"x","sourcesContent":["import { Component } from '@angular/core';\nimport { ThemedComponent } from '../shared/theme-support/themed.component';\nimport { LoginPageComponent } from './login-page.component';\n\n/**\n * Themed wrapper for LoginPageComponent\n */\n@Component({\n  selector: 'ds-themed-login-page',\n  styleUrls: [],\n  templateUrl: './../shared/theme-support/themed.component.html'\n})\nexport class ThemedLoginPageComponent extends ThemedComponent<LoginPageComponent> {\n  protected getComponentName(): string {\n    return 'LoginPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../themes/${themeName}/app/+login-page/login-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./login-page.component`);\n  }\n}\n","<ng-template #vcr></ng-template>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { I18nBreadcrumbsService } from '../core/breadcrumbs/i18n-breadcrumbs.service';\nimport { ThemedLoginPageComponent } from './themed-login-page.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      { path: '', pathMatch: 'full', component: ThemedLoginPageComponent, resolve: { breadcrumb: I18nBreadcrumbResolver }, data: { breadcrumbKey: 'login', title: 'login.title' } }\n    ])\n  ],\n  providers: [\n    I18nBreadcrumbResolver,\n    I18nBreadcrumbsService\n  ]\n})\nexport class LoginPageRoutingModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginPageComponent } from './login-page.component';\nimport { LoginPageRoutingModule } from './login-page-routing.module';\nimport { ThemedLoginPageComponent } from './themed-login-page.component';\n\n@NgModule({\n  imports: [\n    LoginPageRoutingModule,\n    CommonModule,\n    SharedModule,\n  ],\n  declarations: [\n    LoginPageComponent,\n    ThemedLoginPageComponent\n  ]\n})\nexport class LoginPageModule {\n\n}\n","var map = {\n\t\"./custom/app/+login-page/login-page.component\": [\n\t\t\"QrkZ\",\n\t\t0,\n\t\t48\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"3Rdy\";\nmodule.exports = webpackAsyncContext;","import { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\n\n/**\n * The class that resolves a BreadcrumbConfig object with an i18n key string for a route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbResolver implements Resolve<BreadcrumbConfig<string>> {\n  constructor(protected breadcrumbService: I18nBreadcrumbsService) {\n  }\n\n  /**\n   * Method for resolving an I18n breadcrumb configuration object\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns BreadcrumbConfig object\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BreadcrumbConfig<string> {\n    const key = route.data.breadcrumbKey;\n    if (hasNoValue(key)) {\n      throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n    }\n    const fullPath = currentPathFromSnapshot(route);\n    return { provider: this.breadcrumbService, key: key, url: fullPath };\n  }\n}\n","import { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n"]}