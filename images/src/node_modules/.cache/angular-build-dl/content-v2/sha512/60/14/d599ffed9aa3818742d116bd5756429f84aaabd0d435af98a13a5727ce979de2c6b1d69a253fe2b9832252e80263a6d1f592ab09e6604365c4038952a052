{"version":3,"sources":["webpack:///src/themes lazy ^\\.\\/.*\\/app\\/\\+collection\\-page\\/collection\\-page\\.component$ namespace object","webpack:///src/app/+collection-page/collection-form/collection-form.component.ts","webpack:///src/app/shared/comcol-forms/comcol-form/comcol-form.component.html","webpack:///src/app/+collection-page/collection-form/collection-form.module.ts","webpack:///src/app/+collection-page/create-collection-page/create-collection-page.component.ts","webpack:///src/app/+collection-page/create-collection-page/create-collection-page.component.html","webpack:///src/app/+collection-page/create-collection-page/create-collection-page.guard.ts","webpack:///src/app/+collection-page/delete-collection-page/delete-collection-page.component.html","webpack:///src/app/+collection-page/delete-collection-page/delete-collection-page.component.ts","webpack:///src/app/+collection-page/edit-item-template-page/edit-item-template-page.component.html","webpack:///src/app/+collection-page/edit-item-template-page/edit-item-template-page.component.ts","webpack:///src/app/+collection-page/edit-item-template-page/item-template-page.resolver.ts","webpack:///src/app/core/breadcrumbs/collection-breadcrumb.resolver.ts","webpack:///src/app/+collection-page/collection-page-administrator.guard.ts","webpack:///src/app/+collection-page/themed-collection-page.component.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/+collection-page/collection-page-routing.module.ts","webpack:///src/app/+collection-page/collection-page.module.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","back","CollectionFormComponent","formService","translate","notificationsService","authService","dsoService","requestService","objectCache","super","dso","type","formModel","name","required","validators","errorMessages","CollectionFormModule","CreateCollectionPageComponent","communityDataService","collectionDataService","routeService","router","frontendURL","onSubmit","navigateToHome","navigateToNewPage","CreateCollectionPageGuard","communityService","route","state","parentID","queryParams","parent","this","navigate","findById","pipe","g","communityRD","hasSucceeded","payload","tap","isValid","DeleteCollectionPageComponent","dsoDataService","notifications","EditItemTemplatePageComponent","itemTemplateService","AlertTypeEnum","collectionRD$","data","first","itemRD$","switchMap","collection","findByCollectionID","uuid","ItemTemplatePageResolver","params","CollectionBreadcrumbResolver","breadcrumbService","dataService","CollectionPageAdministratorGuard","resolver","authorizationService","next","AdministratorOf","ThemedCollectionPageComponent","themeName","CollectionPageRoutingModule","forChild","path","component","canActivate","breadcrumb","runGuardsAndResolvers","children","loadChildren","m","EditCollectionPageModule","pathMatch","item","title","breadcrumbKey","menu","public","active","visible","model","LINK","text","link","CollectionPageModule","forRoot","EditItemPageModule"],"mappings":"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","file":"x","sourcesContent":["var map = {\n\t\"./custom/app/+collection-page/collection-page.component\": [\n\t\t\"i1B+\",\n\t\t0,\n\t\t43\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"CrS0\";\nmodule.exports = webpackAsyncContext;","import { Component, Input } from '@angular/core';\nimport {\n  DynamicFormControlModel,\n  DynamicFormService,\n  DynamicInputModel,\n  DynamicTextAreaModel\n} from '@ng-dynamic-forms/core';\nimport { Collection } from '../../core/shared/collection.model';\nimport { ComColFormComponent } from '../../shared/comcol-forms/comcol-form/comcol-form.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { CommunityDataService } from '../../core/data/community-data.service';\nimport { AuthService } from '../../core/auth/auth.service';\nimport { RequestService } from '../../core/data/request.service';\nimport { ObjectCacheService } from '../../core/cache/object-cache.service';\n\n/**\n * Form used for creating and editing collections\n */\n@Component({\n  selector: 'ds-collection-form',\n  styleUrls: ['../../shared/comcol-forms/comcol-form/comcol-form.component.scss'],\n  templateUrl: '../../shared/comcol-forms/comcol-form/comcol-form.component.html'\n})\nexport class CollectionFormComponent extends ComColFormComponent<Collection> {\n  /**\n   * @type {Collection} A new collection when a collection is being created, an existing Input collection when a collection is being edited\n   */\n  @Input() dso: Collection = new Collection();\n\n  /**\n   * @type {Collection.type} This is a collection-type form\n   */\n  type = Collection.type;\n\n  /**\n   * The dynamic form fields used for creating/editing a collection\n   * @type {(DynamicInputModel | DynamicTextAreaModel)[]}\n   */\n  formModel: DynamicFormControlModel[] = [\n    new DynamicInputModel({\n      id: 'title',\n      name: 'dc.title',\n      required: true,\n      validators: {\n        required: null\n      },\n      errorMessages: {\n        required: 'Please enter a name for this title'\n      },\n    }),\n    new DynamicTextAreaModel({\n      id: 'description',\n      name: 'dc.description',\n    }),\n    new DynamicTextAreaModel({\n      id: 'abstract',\n      name: 'dc.description.abstract',\n    }),\n    new DynamicTextAreaModel({\n      id: 'rights',\n      name: 'dc.rights',\n    }),\n    new DynamicTextAreaModel({\n      id: 'tableofcontents',\n      name: 'dc.description.tableofcontents',\n    }),\n    new DynamicTextAreaModel({\n      id: 'license',\n      name: 'dc.rights.license',\n    }),\n    new DynamicTextAreaModel({\n      id: 'provenance',\n      name: 'dc.description.provenance',\n    }),\n  ];\n\n  public constructor(protected formService: DynamicFormService,\n                     protected translate: TranslateService,\n                     protected notificationsService: NotificationsService,\n                     protected authService: AuthService,\n                     protected dsoService: CommunityDataService,\n                     protected requestService: RequestService,\n                     protected objectCache: ObjectCacheService) {\n    super(formService, translate, notificationsService, authService, requestService, objectCache);\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12 d-inline-block\">\n      <label>{{type.value + '.edit.logo.label' | translate}}</label>\n    </div>\n    <ng-container *ngVar=\"(dso?.logo | async)?.payload as logo\">\n      <div class=\"col-12 d-inline-block alert\" [ngClass]=\"{'alert-danger': markLogoForDeletion}\" id=\"logo-section\" *ngIf=\"logo\">\n        <div class=\"row\">\n          <div class=\"col-8 d-inline-block\">\n            <ds-comcol-page-logo [logo]=\"logo\"></ds-comcol-page-logo>\n          </div>\n          <div class=\"col-4 d-inline-block\">\n            <div *ngIf=\"logo\" class=\"btn-group btn-group-sm float-right\" role=\"group\">\n              <button *ngIf=\"!markLogoForDeletion\" type=\"button\" class=\"btn btn-danger\"\n                      title=\"{{type.value + '.edit.logo.delete.title' | translate}}\"\n                      (click)=\"deleteLogo()\">\n                <i class=\"fas fa-trash\" aria-hidden=\"true\"></i>\n              </button>\n              <button *ngIf=\"markLogoForDeletion\" type=\"button\" class=\"btn btn-warning\"\n                      title=\"{{type.value + '.edit.logo.delete-undo.title' | translate}}\"\n                      (click)=\"undoDeleteLogo()\">\n                <i class=\"fas fa-undo\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"!logo\" class=\"col-12 d-inline-block\">\n        <ds-uploader  *ngIf=\"initializedUploaderOptions | async\"\n                      [dropMsg]=\"type.value + '.edit.logo.upload'\"\n                      [dropOverDocumentMsg]=\"type.value + '.edit.logo.upload'\"\n                      [enableDragOverDocument]=\"true\"\n                      [uploadFilesOptions]=\"uploadFilesOptions\"\n                      (onCompleteItem)=\"onCompleteItem()\"\n                      (onUploadError)=\"onUploadError()\"></ds-uploader>\n      </div>\n    </ng-container>\n  </div>\n</div>\n<ds-form *ngIf=\"formModel\"\n         [formId]=\"'comcol-form-id'\"\n         [formModel]=\"formModel\"\n         [displayCancel]=\"false\"\n         (submitForm)=\"onSubmit()\">\n  <button before (click)=\"back.emit()\" class=\"btn btn-outline-secondary\">\n    <i class=\"fas fa-arrow-left\"></i> {{ type.value + '.edit.return' | translate }}\n  </button>\n</ds-form>\n","import { NgModule } from '@angular/core';\n\nimport { CollectionFormComponent } from './collection-form.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    CollectionFormComponent,\n  ],\n  exports: [\n    CollectionFormComponent\n  ]\n})\nexport class CollectionFormModule {\n\n}\n","import { Component } from '@angular/core';\nimport { CommunityDataService } from '../../core/data/community-data.service';\nimport { RouteService } from '../../core/services/route.service';\nimport { Router } from '@angular/router';\nimport { CreateComColPageComponent } from '../../shared/comcol-forms/create-comcol-page/create-comcol-page.component';\nimport { Collection } from '../../core/shared/collection.model';\nimport { CollectionDataService } from '../../core/data/collection-data.service';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport {RequestService} from '../../core/data/request.service';\n\n/**\n * Component that represents the page where a user can create a new Collection\n */\n@Component({\n  selector: 'ds-create-collection',\n  styleUrls: ['./create-collection-page.component.scss'],\n  templateUrl: './create-collection-page.component.html'\n})\nexport class CreateCollectionPageComponent extends CreateComColPageComponent<Collection> {\n  protected frontendURL = '/collections/';\n  protected type = Collection.type;\n\n  public constructor(\n    protected communityDataService: CommunityDataService,\n    protected collectionDataService: CollectionDataService,\n    protected routeService: RouteService,\n    protected router: Router,\n    protected notificationsService: NotificationsService,\n    protected translate: TranslateService,\n    protected requestService: RequestService\n  ) {\n    super(collectionDataService, communityDataService, routeService, router, notificationsService, translate, requestService);\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12 pb-4\">\n            <h2 id=\"sub-header\" class=\"border-bottom pb-2\">{{'collection.create.sub-head' | translate:{ parent: (parentRD$| async)?.payload.name } }}</h2>\n        </div>\n    </div>\n    <ds-collection-form (submitForm)=\"onSubmit($event)\"\n                        (back)=\"navigateToHome()\"\n                        (finish)=\"navigateToNewPage()\"></ds-collection-form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { hasNoValue, hasValue } from '../../shared/empty.util';\nimport { CommunityDataService } from '../../core/data/community-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Community } from '../../core/shared/community.model';\nimport { map, tap } from 'rxjs/operators';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\n\n/**\n * Prevent creation of a collection without a parent community provided\n * @class CreateCollectionPageGuard\n */\n@Injectable()\nexport class CreateCollectionPageGuard implements CanActivate {\n  public constructor(private router: Router, private communityService: CommunityDataService) {\n  }\n\n  /**\n   * True when either a parent ID query parameter has been provided and the parent ID resolves to a valid parent community\n   * Reroutes to a 404 page when the page cannot be activated\n   * @method canActivate\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    const parentID = route.queryParams.parent;\n    if (hasNoValue(parentID)) {\n      this.router.navigate(['/404']);\n      return observableOf(false);\n    }\n    return this.communityService.findById(parentID)\n      .pipe(\n        getFirstCompletedRemoteData(),\n        map((communityRD: RemoteData<Community>) => hasValue(communityRD) && communityRD.hasSucceeded && hasValue(communityRD.payload)),\n        tap((isValid: boolean) => {\n          if (!isValid) {\n            this.router.navigate(['/404']);\n          }\n        })\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <ng-container *ngVar=\"(dsoRD$ | async)?.payload as dso\">\n            <div class=\"col-12 pb-4\">\n                <h2 id=\"header\" class=\"border-bottom pb-2\">{{ 'community.delete.head' | translate}}</h2>\n                <p class=\"pb-2\">{{ 'community.delete.text' | translate:{ dso: dso.name } }}</p>\n                <div class=\"form-group row\">\n                  <div class=\"col text-right\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"onCancel(dso)\">\n                      <i class=\"fas fa-times\"></i> {{'community.delete.cancel' | translate}}\n                    </button>\n                    <button class=\"btn btn-danger mr-2\" (click)=\"onConfirm(dso)\">\n                      <i class=\"fas fa-trash\"></i> {{'community.delete.confirm' | translate}}\n                    </button>\n                  </div>\n                </div>\n            </div>\n        </ng-container>\n\n    </div>\n\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DeleteComColPageComponent } from '../../shared/comcol-forms/delete-comcol-page/delete-comcol-page.component';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { CollectionDataService } from '../../core/data/collection-data.service';\nimport { Collection } from '../../core/shared/collection.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport {RequestService} from '../../core/data/request.service';\n\n/**\n * Component that represents the page where a user can delete an existing Collection\n */\n@Component({\n  selector: 'ds-delete-collection',\n  styleUrls: ['./delete-collection-page.component.scss'],\n  templateUrl: './delete-collection-page.component.html'\n})\nexport class DeleteCollectionPageComponent extends DeleteComColPageComponent<Collection> {\n  protected frontendURL = '/collections/';\n\n  public constructor(\n    protected dsoDataService: CollectionDataService,\n    protected router: Router,\n    protected route: ActivatedRoute,\n    protected notifications: NotificationsService,\n    protected translate: TranslateService,\n    protected requestService: RequestService\n  ) {\n    super(dsoDataService, router, route, notifications, translate, requestService);\n  }\n}\n","<div class=\"container\" *ngVar=\"(collectionRD$ | async)?.payload as collection\">\n  <div class=\"row\">\n    <div class=\"col-12\" *ngVar=\"(itemRD$ | async) as itemRD\">\n      <ng-container *ngIf=\"itemRD?.hasSucceeded\">\n        <h2 class=\"border-bottom\">{{ 'collection.edit.template.head' | translate:{ collection: collection?.name } }}</h2>\n        <ds-item-metadata [updateService]=\"itemTemplateService\" [item]=\"itemRD?.payload\"></ds-item-metadata>\n        <button [routerLink]=\"getCollectionEditUrl(collection)\" class=\"btn btn-outline-secondary\">{{ 'collection.edit.template.cancel' | translate }}</button>\n      </ng-container>\n      <ds-loading *ngIf=\"itemRD?.isLoading\" [message]=\"'collection.edit.template.loading' | translate\"></ds-loading>\n      <ds-alert *ngIf=\"itemRD?.hasFailed\" [type]=\"AlertTypeEnum.Error\" [content]=\"'collection.edit.template.error' | translate\"></ds-alert>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Collection } from '../../core/shared/collection.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { ItemTemplateDataService } from '../../core/data/item-template-data.service';\nimport { getCollectionEditRoute } from '../collection-page-routing-paths';\nimport { Item } from '../../core/shared/item.model';\nimport { getFirstSucceededRemoteDataPayload } from '../../core/shared/operators';\nimport { AlertType } from '../../shared/alert/aletr-type';\n\n@Component({\n  selector: 'ds-edit-item-template-page',\n  templateUrl: './edit-item-template-page.component.html',\n})\n/**\n * Component for editing the item template of a collection\n */\nexport class EditItemTemplatePageComponent implements OnInit {\n\n  /**\n   * The collection to edit the item template for\n   */\n  collectionRD$: Observable<RemoteData<Collection>>;\n\n  /**\n   * The template item\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  AlertTypeEnum = AlertType;\n\n  constructor(protected route: ActivatedRoute,\n              public itemTemplateService: ItemTemplateDataService) {\n  }\n\n  ngOnInit(): void {\n    this.collectionRD$ = this.route.parent.data.pipe(first(), map((data) => data.dso));\n    this.itemRD$ = this.collectionRD$.pipe(\n      getFirstSucceededRemoteDataPayload(),\n      switchMap((collection) => this.itemTemplateService.findByCollectionID(collection.id)),\n    );\n  }\n\n  /**\n   * Get the URL to the collection's edit page\n   * @param collection\n   */\n  getCollectionEditUrl(collection: Collection): string {\n    if (collection) {\n      return getCollectionEditRoute(collection.uuid);\n    } else {\n      return '';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Item } from '../../core/shared/item.model';\nimport { ItemTemplateDataService } from '../../core/data/item-template-data.service';\nimport { Observable } from 'rxjs';\nimport { followLink } from '../../shared/utils/follow-link-config.model';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\n\n/**\n * This class represents a resolver that requests a specific collection's item template before the route is activated\n */\n@Injectable()\nexport class ItemTemplatePageResolver implements Resolve<RemoteData<Item>> {\n  constructor(private itemTemplateService: ItemTemplateDataService) {\n  }\n\n  /**\n   * Method for resolving a collection's item template based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns Observable<<RemoteData<Collection>> Emits the found item template based on the parameters in the current route,\n   * or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RemoteData<Item>> {\n    return this.itemTemplateService.findByCollectionID(route.params.id, true, false, followLink('templateItemOf')).pipe(\n      getFirstCompletedRemoteData(),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DSOBreadcrumbsService } from './dso-breadcrumbs.service';\nimport { DSOBreadcrumbResolver } from './dso-breadcrumb.resolver';\nimport { Collection } from '../shared/collection.model';\nimport { CollectionDataService } from '../data/collection-data.service';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { COLLECTION_PAGE_LINKS_TO_FOLLOW } from '../../+collection-page/collection-page.resolver';\n\n/**\n * The class that resolves the BreadcrumbConfig object for a Collection\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectionBreadcrumbResolver extends DSOBreadcrumbResolver<Collection> {\n  constructor(protected breadcrumbService: DSOBreadcrumbsService, protected dataService: CollectionDataService) {\n    super(breadcrumbService, dataService);\n  }\n\n  /**\n   * Method that returns the follow links to already resolve\n   * The self links defined in this list are expected to be requested somewhere in the near future\n   * Requesting them as embeds will limit the number of requests\n   */\n  get followLinks(): FollowLinkConfig<Collection>[] {\n    return COLLECTION_PAGE_LINKS_TO_FOLLOW;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Collection } from '../core/shared/collection.model';\nimport { CollectionPageResolver } from './collection-page.resolver';\nimport { AuthorizationDataService } from '../core/data/feature-authorization/authorization-data.service';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { DsoPageSingleFeatureGuard } from '../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../core/data/feature-authorization/feature-id';\nimport { AuthService } from '../core/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Guard for preventing unauthorized access to certain {@link Collection} pages requiring administrator rights\n */\nexport class CollectionPageAdministratorGuard extends DsoPageSingleFeatureGuard<Collection> {\n  constructor(protected resolver: CollectionPageResolver,\n              protected authorizationService: AuthorizationDataService,\n              protected router: Router,\n              protected authService: AuthService) {\n    super(resolver, authorizationService, router, authService);\n  }\n\n  /**\n   * Check administrator authorization rights\n   */\n  getFeatureID(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureID> {\n    return observableOf(FeatureID.AdministratorOf);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../shared/theme-support/themed.component';\nimport { CollectionPageComponent } from './collection-page.component';\n\n/**\n * Themed wrapper for CollectionPageComponent\n */\n@Component({\n  selector: 'ds-themed-community-page',\n  styleUrls: [],\n  templateUrl: '../shared/theme-support/themed.component.html',\n})\nexport class ThemedCollectionPageComponent extends ThemedComponent<CollectionPageComponent> {\n  protected getComponentName(): string {\n    return 'CollectionPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../themes/${themeName}/app/+collection-page/collection-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./collection-page.component`);\n  }\n\n}\n","<ng-template #vcr></ng-template>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { CollectionPageResolver } from './collection-page.resolver';\nimport { CreateCollectionPageComponent } from './create-collection-page/create-collection-page.component';\nimport { AuthenticatedGuard } from '../core/auth/authenticated.guard';\nimport { CreateCollectionPageGuard } from './create-collection-page/create-collection-page.guard';\nimport { DeleteCollectionPageComponent } from './delete-collection-page/delete-collection-page.component';\nimport { EditItemTemplatePageComponent } from './edit-item-template-page/edit-item-template-page.component';\nimport { ItemTemplatePageResolver } from './edit-item-template-page/item-template-page.resolver';\nimport { CollectionBreadcrumbResolver } from '../core/breadcrumbs/collection-breadcrumb.resolver';\nimport { DSOBreadcrumbsService } from '../core/breadcrumbs/dso-breadcrumbs.service';\nimport { LinkService } from '../core/cache/builders/link.service';\nimport { I18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport {\n  ITEMTEMPLATE_PATH,\n  COLLECTION_EDIT_PATH,\n  COLLECTION_CREATE_PATH\n} from './collection-page-routing-paths';\nimport { CollectionPageAdministratorGuard } from './collection-page-administrator.guard';\nimport { MenuItemType } from '../shared/menu/initial-menus-state';\nimport { LinkMenuItemModel } from '../shared/menu/menu-item/models/link.model';\nimport { ThemedCollectionPageComponent } from './themed-collection-page.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: COLLECTION_CREATE_PATH,\n        component: CreateCollectionPageComponent,\n        canActivate: [AuthenticatedGuard, CreateCollectionPageGuard]\n      },\n      {\n        path: ':id',\n        resolve: {\n          dso: CollectionPageResolver,\n          breadcrumb: CollectionBreadcrumbResolver\n        },\n        runGuardsAndResolvers: 'always',\n        children: [\n          {\n            path: COLLECTION_EDIT_PATH,\n            loadChildren: () => import('./edit-collection-page/edit-collection-page.module')\n              .then((m) => m.EditCollectionPageModule),\n            canActivate: [CollectionPageAdministratorGuard]\n          },\n          {\n            path: 'delete',\n            pathMatch: 'full',\n            component: DeleteCollectionPageComponent,\n            canActivate: [AuthenticatedGuard],\n          },\n          {\n            path: ITEMTEMPLATE_PATH,\n            component: EditItemTemplatePageComponent,\n            canActivate: [AuthenticatedGuard],\n            resolve: {\n              item: ItemTemplatePageResolver,\n              breadcrumb: I18nBreadcrumbResolver\n            },\n            data: { title: 'collection.edit.template.title', breadcrumbKey: 'collection.edit.template' }\n          },\n          {\n            path: '',\n            component: ThemedCollectionPageComponent,\n            pathMatch: 'full',\n          }\n        ],\n        data: {\n          menu: {\n            public: [{\n              id: 'statistics_collection_:id',\n              active: true,\n              visible: true,\n              model: {\n                type: MenuItemType.LINK,\n                text: 'menu.section.statistics',\n                link: 'statistics/collections/:id/',\n              } as LinkMenuItemModel,\n            }],\n          },\n        },\n      },\n    ])\n  ],\n  providers: [\n    CollectionPageResolver,\n    ItemTemplatePageResolver,\n    CollectionBreadcrumbResolver,\n    DSOBreadcrumbsService,\n    LinkService,\n    CreateCollectionPageGuard,\n    CollectionPageAdministratorGuard\n  ]\n})\nexport class CollectionPageRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { CollectionPageComponent } from './collection-page.component';\nimport { CollectionPageRoutingModule } from './collection-page-routing.module';\nimport { CreateCollectionPageComponent } from './create-collection-page/create-collection-page.component';\nimport { DeleteCollectionPageComponent } from './delete-collection-page/delete-collection-page.component';\nimport { EditItemTemplatePageComponent } from './edit-item-template-page/edit-item-template-page.component';\nimport { EditItemPageModule } from '../+item-page/edit-item-page/edit-item-page.module';\nimport { CollectionItemMapperComponent } from './collection-item-mapper/collection-item-mapper.component';\nimport { SearchService } from '../core/shared/search/search.service';\nimport { StatisticsModule } from '../statistics/statistics.module';\nimport { CollectionFormModule } from './collection-form/collection-form.module';\nimport { ThemedCollectionPageComponent } from './themed-collection-page.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    CollectionPageRoutingModule,\n    StatisticsModule.forRoot(),\n    EditItemPageModule,\n    CollectionFormModule\n  ],\n  declarations: [\n    CollectionPageComponent,\n    ThemedCollectionPageComponent,\n    CreateCollectionPageComponent,\n    DeleteCollectionPageComponent,\n    EditItemTemplatePageComponent,\n    CollectionItemMapperComponent\n  ],\n  providers: [\n    SearchService,\n  ]\n})\nexport class CollectionPageModule {\n\n}\n"]}