{"version":3,"sources":["webpack:///src/app/+submit-page/submit-page-routing.module.ts","webpack:///src/app/+submit-page/submit-page.module.ts","webpack:///src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","webpack:///src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","webpack:///src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts"],"names":["SubmitPageRoutingModule","SubmitPageModule","forChild","canActivate","path","pathMatch","component","resolve","breadcrumb","data","title","breadcrumbKey","I18nBreadcrumbResolver","breadcrumbService","route","state","key","Error","url","fullPath","provider","this","I18nBreadcrumbsService","Breadcrumb","text"],"mappings":"seA0BaA,ECTAC,E,oFDSN,IAAMD,EAAN,yB,gDAAMA,I,+EAAAA,IAAuB,SAlBzB,CACP,IAAaE,SAAS,CACpB,CACEC,YAAa,CAAC,KACdC,KAAM,GACNC,UAAW,OACXC,UAAW,IACXC,QAAS,CACPC,WAAY,KAEdC,KAAM,CAAEC,MAAO,0BAA2BC,cAAe,4B,eCD1D,IAAMV,EAAN,yB,gDAAMA,I,+EAAAA,IAAgB,SAVlB,CACP,EACA,IACA,IACA,Q,sCCPJ,sFASO,iBAAMW,EAAN,WACL,WAAsBC,aAAA,KAAAA,oBADjB,0CAUGC,EAA+BC,GACrC,IAAMC,EAAMF,EAAML,KAAKE,cACvB,GAAI,YAAWK,GACb,MAAM,IAAIC,MAAM,mDAAsDH,EAAMI,IAAM,+CAEpF,IAAMC,EAAW,YAAwBL,GACzC,MAAO,CAAEM,SAAUC,KAAKR,kBAAmBG,IAAKA,EAAKE,IAAKC,OAhBvD,K,6CAAMP,GAAsB,+B,sDAAtBA,EAAsB,QAAtBA,EAAsB,qBAFrB,S,EAEP,I,kCCbP,0EAgBO,iBAAMU,EAAN,mFAOUN,EAAaE,GAC1B,OAAO,YAAa,CAAC,IAAI,IAAWF,EAhBE,eAgBgCE,SARnE,K,6CAAMI,I,sDAAAA,EAAsB,QAAtBA,EAAsB,qBAFrB,S,EAEP,I,oCChBP,kC,IAGaC,EACX,WAISC,EAIAN,aAJA,KAAAM,OAIA,KAAAN,W","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticatedGuard } from '../core/auth/authenticated.guard';\nimport { ThemedSubmissionSubmitComponent } from '../submission/submit/themed-submission-submit.component';\nimport { I18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        canActivate: [AuthenticatedGuard],\n        path: '',\n        pathMatch: 'full',\n        component: ThemedSubmissionSubmitComponent,\n        resolve: {\n          breadcrumb: I18nBreadcrumbResolver\n        },\n        data: { title: 'submission.submit.title', breadcrumbKey: 'submission.submit' }\n      }\n    ])\n  ]\n})\n/**\n * This module defines the default component to load when navigating to the submit page path.\n */\nexport class SubmitPageRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { SubmitPageRoutingModule } from './submit-page-routing.module';\nimport { SubmissionModule } from '../submission/submission.module';\n\n@NgModule({\n  imports: [\n    SubmitPageRoutingModule,\n    CommonModule,\n    SharedModule,\n    SubmissionModule,\n  ],\n})\n/**\n * This module handles all modules that need to access the submit page.\n */\nexport class SubmitPageModule {\n\n}\n","import { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\n\n/**\n * The class that resolves a BreadcrumbConfig object with an i18n key string for a route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbResolver implements Resolve<BreadcrumbConfig<string>> {\n  constructor(protected breadcrumbService: I18nBreadcrumbsService) {\n  }\n\n  /**\n   * Method for resolving an I18n breadcrumb configuration object\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns BreadcrumbConfig object\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BreadcrumbConfig<string> {\n    const key = route.data.breadcrumbKey;\n    if (hasNoValue(key)) {\n      throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n    }\n    const fullPath = currentPathFromSnapshot(route);\n    return { provider: this.breadcrumbService, key: key, url: fullPath };\n  }\n}\n","import { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n"]}