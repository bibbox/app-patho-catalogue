{"version":3,"sources":["webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/collection\\-statistics\\-page\\/collection\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/statistics-page/item-statistics-page/item-statistics-page.component.ts","webpack:///src/app/statistics-page/statistics-page/statistics-page.component.html","webpack:///src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","webpack:///src/app/statistics-page/collection-statistics-page/collection-statistics-page.component.ts","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/item\\-statistics\\-page\\/item\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/statistics-page/community-statistics-page/community-statistics-page.component.ts","webpack:///src/app/core/statistics/usage-report-data.service.ts","webpack:///src/app/statistics-page/statistics-table/statistics-table.component.ts","webpack:///src/app/statistics-page/statistics-table/statistics-table.component.html","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/community\\-statistics\\-page\\/community\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/statistics-page/site-statistics-page/site-statistics-page.component.ts","webpack:///src/app/statistics-page/collection-statistics-page/themed-collection-statistics-page.component.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/statistics-page/community-statistics-page/themed-community-statistics-page.component.ts","webpack:///src/app/statistics-page/item-statistics-page/themed-item-statistics-page.component.ts","webpack:///src/app/statistics-page/site-statistics-page/themed-site-statistics-page.component.ts","webpack:///src/app/statistics-page/statistics-page.module.ts","webpack:///src/app/statistics-page/statistics-page-routing.module.ts","webpack:///src/app/statistics-page/statistics-page/statistics-page.component.ts","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/site\\-statistics\\-page\\/site\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","webpack:///src/app/+item-page/item.resolver.ts","webpack:///src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ItemStatisticsPageComponent","route","router","usageReportService","nameService","authService","super","types","I18nBreadcrumbResolver","breadcrumbService","state","key","data","breadcrumbKey","url","fullPath","provider","this","CollectionStatisticsPageComponent","CommunityStatisticsPageComponent","UsageReportService","comparator","halService","http","notificationsService","objectCache","rdbService","requestService","store","linkPath","scope","type","findById","pipe","uri","page","size","searchBy","searchParams","fieldName","fieldValue","currentPage","elementsPerPage","list","d","StatisticsTableComponent","dsoService","hasData","report","points","length","headers","values","point","reportType","item","getName","label","SiteStatisticsPageComponent","siteService","find","scope$","searchStatistics","_links","self","href","ThemedCollectionStatisticsPageComponent","themeName","ThemedCommunityStatisticsPageComponent","ThemedItemStatisticsPageComponent","ThemedSiteStatisticsPageComponent","StatisticsPageModule","StatisticsPageRoutingModule","forRoot","forChild","path","breadcrumb","title","children","component","StatisticsPageComponent","getScope$","reports$","getReports$","hasData$","reports","some","getStatistic","I18nBreadcrumbsService","ITEM_PAGE_LINKS_TO_FOLLOW","undefined","ItemResolver","itemService","itemRD$","params","g","subscribe","itemRD","dispatch","payload","Breadcrumb","text"],"mappings":"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","file":"x","sourcesContent":["var map = {\n\t\"./custom/app/statistics-page/collection-statistics-page/collection-statistics-page.component\": [\n\t\t\"q828\",\n\t\t70\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"2HC7\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Item } from '../../core/shared/item.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the statistics page for an item.\n */\n@Component({\n  selector: 'ds-item-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./item-statistics-page.component.scss']\n})\nexport class ItemStatisticsPageComponent extends StatisticsPageComponent<Item> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n    'TotalVisitsPerMonth',\n    'TotalDownloads',\n    'TopCountries',\n    'TopCities',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n}\n","<div class=\"container\">\n\n  <ng-container *ngVar=\"(scope$ | async) as scope\">\n    <h2 *ngIf=\"scope\"\n        class=\"header\"\n        id=\"{{ scope.id }}\">\n      {{ 'statistics.header' | translate: { scope: getName(scope) } }}\n    </h2>\n  </ng-container>\n\n  <ng-container *ngVar=\"reports$ | async as reports\">\n\n    <ng-container *ngIf=\"!reports\">\n      <ds-loading></ds-loading>\n    </ng-container>\n\n    <ng-container *ngIf=\"reports\">\n      <ds-statistics-table *ngFor=\"let report of reports\"\n                           [report]=\"report\"\n                           class=\"m-2 {{ report.id }}\">\n      </ds-statistics-table>\n      <div *ngIf=\"!(hasData$ | async)\">\n        {{ 'statistics.page.no-data' | translate }}\n      </div>\n    </ng-container>\n\n  </ng-container>\n\n</div>\n","import { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\n\n/**\n * The class that resolves a BreadcrumbConfig object with an i18n key string for a route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbResolver implements Resolve<BreadcrumbConfig<string>> {\n  constructor(protected breadcrumbService: I18nBreadcrumbsService) {\n  }\n\n  /**\n   * Method for resolving an I18n breadcrumb configuration object\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns BreadcrumbConfig object\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BreadcrumbConfig<string> {\n    const key = route.data.breadcrumbKey;\n    if (hasNoValue(key)) {\n      throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n    }\n    const fullPath = currentPathFromSnapshot(route);\n    return { provider: this.breadcrumbService, key: key, url: fullPath };\n  }\n}\n","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute , Router} from '@angular/router';\nimport { Collection } from '../../core/shared/collection.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the statistics page for a collection.\n */\n@Component({\n  selector: 'ds-collection-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./collection-statistics-page.component.scss']\n})\nexport class CollectionStatisticsPageComponent extends StatisticsPageComponent<Collection> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n    'TotalVisitsPerMonth',\n    'TopCountries',\n    'TopCities',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n}\n","var map = {\n\t\"./custom/app/statistics-page/item-statistics-page/item-statistics-page.component\": [\n\t\t\"u0ua\",\n\t\t72\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"CCQ4\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Community } from '../../core/shared/community.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the statistics page for a community.\n */\n@Component({\n  selector: 'ds-community-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./community-statistics-page.component.scss']\n})\nexport class CommunityStatisticsPageComponent extends StatisticsPageComponent<Community> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n    'TotalVisitsPerMonth',\n    'TopCountries',\n    'TopCities',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService,\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { dataService } from '../cache/builders/build-decorators';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { CoreState } from '../core.reducers';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { DataService } from '../data/data.service';\nimport { RequestService } from '../data/request.service';\nimport { DefaultChangeAnalyzer } from '../data/default-change-analyzer.service';\nimport { USAGE_REPORT } from './models/usage-report.resource-type';\nimport { UsageReport } from './models/usage-report.model';\nimport { Observable } from 'rxjs';\nimport { getRemoteDataPayload, getFirstSucceededRemoteData } from '../shared/operators';\nimport { map } from 'rxjs/operators';\n\n/**\n * A service to retrieve {@link UsageReport}s from the REST API\n */\n@Injectable()\n@dataService(USAGE_REPORT)\nexport class UsageReportService extends DataService<UsageReport> {\n\n  protected linkPath = 'usagereports';\n\n  constructor(\n    protected comparator: DefaultChangeAnalyzer<UsageReport>,\n    protected halService: HALEndpointService,\n    protected http: HttpClient,\n    protected notificationsService: NotificationsService,\n    protected objectCache: ObjectCacheService,\n    protected rdbService: RemoteDataBuildService,\n    protected requestService: RequestService,\n    protected store: Store<CoreState>,\n  ) {\n    super();\n  }\n\n  getStatistic(scope: string, type: string): Observable<UsageReport> {\n    return this.findById(`${scope}_${type}`).pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    );\n  }\n\n  searchStatistics(uri: string, page: number, size: number): Observable<UsageReport[]> {\n    return this.searchBy('object', {\n      searchParams: [{\n        fieldName: `uri`,\n        fieldValue: uri,\n      }],\n      currentPage: page,\n      elementsPerPage: size,\n    }, true, false).pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      map((list) => list.page),\n    );\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Point, UsageReport } from '../../core/statistics/models/usage-report.model';\nimport { Observable, of } from 'rxjs';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { map } from 'rxjs/operators';\nimport { getRemoteDataPayload, getFirstSucceededRemoteData } from '../../core/shared/operators';\nimport { DSpaceObjectDataService } from '../../core/data/dspace-object-data.service';\n\n/**\n * Component representing a statistics table for a given usage report.\n */\n@Component({\n  selector: 'ds-statistics-table',\n  templateUrl: './statistics-table.component.html',\n  styleUrls: ['./statistics-table.component.scss']\n})\nexport class StatisticsTableComponent implements OnInit {\n\n  /**\n   * The usage report to display a statistics table for\n   */\n  @Input()\n  report: UsageReport;\n\n  /**\n   * Boolean indicating whether the usage report has data\n   */\n  hasData: boolean;\n\n  /**\n   * The table headers\n   */\n  headers: string[];\n\n  constructor(\n    protected dsoService: DSpaceObjectDataService,\n    protected nameService: DSONameService,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.hasData = this.report.points.length > 0;\n    if (this.hasData) {\n      this.headers = Object.keys(this.report.points[0].values);\n    }\n  }\n\n  /**\n   * Get the row label to display for a statistics point.\n   * @param point the statistics point to get the label for\n   */\n  getLabel(point: Point): Observable<string> {\n    switch (this.report.reportType) {\n      case 'TotalVisits':\n        return this.dsoService.findById(point.id).pipe(\n          getFirstSucceededRemoteData(),\n          getRemoteDataPayload(),\n          map((item) => this.nameService.getName(item)),\n        );\n      case 'TopCities':\n      case 'topCountries':\n      default:\n        return of(point.label);\n    }\n  }\n}\n","<div *ngIf=\"hasData\"\n     class=\"m-1\">\n\n  <h3 class=\"m-1\">\n    {{ 'statistics.table.title.' + report.reportType | translate }}\n  </h3>\n\n  <table class=\"table table-striped\">\n\n    <tbody>\n\n    <tr>\n      <th scope=\"col\"></th>\n      <th scope=\"col\"\n          *ngFor=\"let header of headers\"\n          class=\"{{header}}-header\">\n        {{ header }}\n      </th>\n    </tr>\n\n    <tr *ngFor=\"let point of report.points\"\n        class=\"{{point.id}}-data\">\n      <th scope=\"row\">\n        {{ getLabel(point) | async }}\n      </th>\n      <td *ngFor=\"let header of headers\"\n          class=\"{{point.id}}-{{header}}-data\">\n        {{ point.values[header] }}\n      </td>\n    </tr>\n\n    </tbody>\n\n  </table>\n\n</div>\n","var map = {\n\t\"./custom/app/statistics-page/community-statistics-page/community-statistics-page.component\": [\n\t\t\"rc4Z\",\n\t\t71\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"PkBe\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { SiteDataService } from '../../core/data/site-data.service';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Site } from '../../core/shared/site.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { switchMap } from 'rxjs/operators';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the site-wide statistics page.\n */\n@Component({\n  selector: 'ds-site-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./site-statistics-page.component.scss']\n})\nexport class SiteStatisticsPageComponent extends StatisticsPageComponent<Site> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected siteService: SiteDataService,\n    protected authService: AuthService,\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n\n  protected getScope$() {\n    return this.siteService.find();\n  }\n\n  protected getReports$() {\n    return this.scope$.pipe(\n      switchMap((scope) =>\n        this.usageReportService.searchStatistics(scope._links.self.href, 0, 10),\n      ),\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { CollectionStatisticsPageComponent } from './collection-statistics-page.component';\n\n/**\n * Themed wrapper for CollectionStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-collection-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedCollectionStatisticsPageComponent extends ThemedComponent<CollectionStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'CollectionStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/collection-statistics-page/collection-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./collection-statistics-page.component`);\n  }\n\n}\n","<ng-template #vcr></ng-template>\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { CommunityStatisticsPageComponent } from './community-statistics-page.component';\n\n/**\n * Themed wrapper for CommunityStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-collection-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedCommunityStatisticsPageComponent extends ThemedComponent<CommunityStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'CommunityStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/community-statistics-page/community-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./community-statistics-page.component`);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ItemStatisticsPageComponent } from './item-statistics-page.component';\n\n/**\n * Themed wrapper for ItemStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-item-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedItemStatisticsPageComponent extends ThemedComponent<ItemStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'ItemStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/item-statistics-page/item-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./item-statistics-page.component`);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { SiteStatisticsPageComponent } from './site-statistics-page.component';\n\n/**\n * Themed wrapper for SiteStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-site-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedSiteStatisticsPageComponent extends ThemedComponent<SiteStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'SiteStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/site-statistics-page/site-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./site-statistics-page.component`);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreModule } from '../core/core.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { StatisticsModule } from '../statistics/statistics.module';\nimport { UsageReportService } from '../core/statistics/usage-report-data.service';\nimport { SiteStatisticsPageComponent } from './site-statistics-page/site-statistics-page.component';\nimport { StatisticsTableComponent } from './statistics-table/statistics-table.component';\nimport { ItemStatisticsPageComponent } from './item-statistics-page/item-statistics-page.component';\nimport { CollectionStatisticsPageComponent } from './collection-statistics-page/collection-statistics-page.component';\nimport { CommunityStatisticsPageComponent } from './community-statistics-page/community-statistics-page.component';\nimport { ThemedCollectionStatisticsPageComponent } from './collection-statistics-page/themed-collection-statistics-page.component';\nimport { ThemedCommunityStatisticsPageComponent } from './community-statistics-page/themed-community-statistics-page.component';\nimport { ThemedItemStatisticsPageComponent } from './item-statistics-page/themed-item-statistics-page.component';\nimport { ThemedSiteStatisticsPageComponent } from './site-statistics-page/themed-site-statistics-page.component';\n\nconst components = [\n  StatisticsTableComponent,\n  SiteStatisticsPageComponent,\n  ItemStatisticsPageComponent,\n  CollectionStatisticsPageComponent,\n  CommunityStatisticsPageComponent,\n  ThemedCollectionStatisticsPageComponent,\n  ThemedCommunityStatisticsPageComponent,\n  ThemedItemStatisticsPageComponent,\n  ThemedSiteStatisticsPageComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    CoreModule.forRoot(),\n    StatisticsModule.forRoot()\n  ],\n  declarations: components,\n  providers: [\n    UsageReportService,\n  ],\n  exports: components\n})\n\n/**\n * This module handles all components and pipes that are necessary for the search page\n */\nexport class StatisticsPageModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { I18nBreadcrumbsService } from '../core/breadcrumbs/i18n-breadcrumbs.service';\nimport { StatisticsPageModule } from './statistics-page.module';\nimport { CollectionPageResolver } from '../+collection-page/collection-page.resolver';\nimport { CommunityPageResolver } from '../+community-page/community-page.resolver';\nimport { ThemedCollectionStatisticsPageComponent } from './collection-statistics-page/themed-collection-statistics-page.component';\nimport { ThemedCommunityStatisticsPageComponent } from './community-statistics-page/themed-community-statistics-page.component';\nimport { ThemedItemStatisticsPageComponent } from './item-statistics-page/themed-item-statistics-page.component';\nimport { ThemedSiteStatisticsPageComponent } from './site-statistics-page/themed-site-statistics-page.component';\nimport { ItemResolver } from '../+item-page/item.resolver';\n\n@NgModule({\n  imports: [\n    StatisticsPageModule,\n    RouterModule.forChild([\n        {\n          path: '',\n          resolve: {\n            breadcrumb: I18nBreadcrumbResolver\n          },\n          data: {\n            title: 'statistics.title',\n            breadcrumbKey: 'statistics'\n          },\n          children: [\n            {\n              path: '',\n              component: ThemedSiteStatisticsPageComponent,\n            },\n          ]\n        },\n        {\n          path: `items/:id`,\n          resolve: {\n            scope: ItemResolver,\n            breadcrumb: I18nBreadcrumbResolver\n          },\n          data: {\n            title: 'statistics.title',\n            breadcrumbKey: 'statistics'\n          },\n          component: ThemedItemStatisticsPageComponent,\n        },\n        {\n          path: `collections/:id`,\n          resolve: {\n            scope: CollectionPageResolver,\n            breadcrumb: I18nBreadcrumbResolver\n          },\n          data: {\n            title: 'statistics.title',\n            breadcrumbKey: 'statistics'\n          },\n          component: ThemedCollectionStatisticsPageComponent,\n        },\n        {\n          path: `communities/:id`,\n          resolve: {\n            scope: CommunityPageResolver,\n            breadcrumb: I18nBreadcrumbResolver\n          },\n          data: {\n            title: 'statistics.title',\n            breadcrumbKey: 'statistics'\n          },\n          component: ThemedCommunityStatisticsPageComponent,\n        },\n      ]\n    )\n  ],\n  providers: [\n    I18nBreadcrumbResolver,\n    I18nBreadcrumbsService,\n    CollectionPageResolver,\n    CommunityPageResolver,\n    ItemResolver\n  ]\n})\nexport class StatisticsPageRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport { UsageReport } from '../../core/statistics/models/usage-report.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport {\n  getRemoteDataPayload,\n  getFirstSucceededRemoteData,\n  redirectOn4xx\n} from '../../core/shared/operators';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Class representing an abstract statistics page component.\n */\n@Component({\n  selector: 'ds-statistics-page',\n  template: ''\n})\nexport abstract class StatisticsPageComponent<T extends DSpaceObject> implements OnInit {\n\n  /**\n   * The scope dso for this statistics page, as an Observable.\n   */\n  scope$: Observable<DSpaceObject>;\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[];\n\n  /**\n   * The usage report types to show on this statistics page, as an Observable list.\n   */\n  reports$: Observable<UsageReport[]>;\n\n  hasData$: Observable<boolean>;\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.scope$ = this.getScope$();\n    this.reports$ = this.getReports$();\n    this.hasData$ = this.reports$.pipe(\n      map((reports) => reports.some(\n        (report) => report.points.length > 0\n      )),\n    );\n  }\n\n  /**\n   * Get the scope dso for this statistics page, as an Observable.\n   */\n  protected getScope$(): Observable<DSpaceObject> {\n    return this.route.data.pipe(\n      map((data) => data.scope as RemoteData<T>),\n      redirectOn4xx(this.router, this.authService),\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    );\n  }\n\n  /**\n   * Get the usage reports for this statistics page, as an Observable list\n   */\n  protected getReports$(): Observable<UsageReport[]> {\n    return this.scope$.pipe(\n      switchMap((scope) =>\n        combineLatest(\n          this.types.map((type) => this.usageReportService.getStatistic(scope.id, type))\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Get the name of the scope dso.\n   * @param scope the scope dso to get the name for\n   */\n  getName(scope: DSpaceObject): string {\n    return this.nameService.getName(scope);\n  }\n}\n","var map = {\n\t\"./custom/app/statistics-page/site-statistics-page/site-statistics-page.component\": [\n\t\t\"tHLB\",\n\t\t73\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"hsTn\";\nmodule.exports = webpackAsyncContext;","import { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RemoteData } from '../core/data/remote-data';\nimport { ItemDataService } from '../core/data/item-data.service';\nimport { Item } from '../core/shared/item.model';\nimport { followLink, FollowLinkConfig } from '../shared/utils/follow-link-config.model';\nimport { FindListOptions } from '../core/data/request.models';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport { Store } from '@ngrx/store';\nimport { ResolvedAction } from '../core/resolving/resolver.actions';\n\n/**\n * The self links defined in this list are expected to be requested somewhere in the near future\n * Requesting them as embeds will limit the number of requests\n */\nexport const ITEM_PAGE_LINKS_TO_FOLLOW: FollowLinkConfig<Item>[] = [\n  followLink('owningCollection', undefined, true, true, true,\n    followLink('parentCommunity', undefined, true, true, true,\n      followLink('parentCommunity'))\n  ),\n  followLink('bundles', new FindListOptions(), true, true, true, followLink('bitstreams')),\n  followLink('relationships'),\n  followLink('version', undefined, true, true, true, followLink('versionhistory')),\n];\n\n/**\n * This class represents a resolver that requests a specific item before the route is activated\n */\n@Injectable()\nexport class ItemResolver implements Resolve<RemoteData<Item>> {\n  constructor(\n    protected itemService: ItemDataService,\n    protected store: Store<any>,\n    protected router: Router\n  ) {\n  }\n\n  /**\n   * Method for resolving an item based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n   * or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RemoteData<Item>> {\n    const itemRD$ = this.itemService.findById(route.params.id,\n      true,\n      false,\n      ...ITEM_PAGE_LINKS_TO_FOLLOW\n    ).pipe(\n      getFirstCompletedRemoteData(),\n    );\n\n    itemRD$.subscribe((itemRD: RemoteData<Item>) => {\n      this.store.dispatch(new ResolvedAction(state.url, itemRD.payload));\n    });\n\n    return itemRD$;\n  }\n}\n","/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n"]}