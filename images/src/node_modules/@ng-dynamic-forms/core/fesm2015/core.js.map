{"version":3,"file":"core.js","sources":["../../../../projects/ng-dynamic-forms/core/src/lib/utils/core.utils.ts","../../../../projects/ng-dynamic-forms/core/src/lib/component/dynamic-form-control.component.ts","../../../../projects/ng-dynamic-forms/core/src/lib/component/dynamic-form-array.component.ts","../../../../projects/ng-dynamic-forms/core/src/lib/component/dynamic-form-group.component.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form-component.service.ts","../../../../projects/ng-dynamic-forms/core/src/lib/component/dynamic-form.component.ts","../../../../projects/ng-dynamic-forms/core/src/lib/component/dynamic-form-control-event.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/misc/dynamic-form-control-validation.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/decorator/serializable.decorator.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/dynamic-form-control.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/dynamic-form-value-control.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/form-array/dynamic-form-array.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/dynamic-check-control.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/checkbox/dynamic-checkbox.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/dynamic-input-control.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/utils/json.utils.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/input/dynamic-input.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/directive/dynamic-template.directive.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form-layout.service.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form-validators.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form-validation-matchers.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form-validation.service.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/form-group/dynamic-form-group.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/checkbox/dynamic-checkbox-group.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/colorpicker/dynamic-colorpicker.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/dynamic-date-control.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/datepicker/dynamic-datepicker.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/editor/dynamic-editor.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/dynamic-file-control.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/file-upload/dynamic-file-upload.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/dynamic-option-control.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/radio/dynamic-radio-group.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/rating/dynamic-rating.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/select/dynamic-select.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/slider/dynamic-slider.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/switch/dynamic-switch.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/textarea/dynamic-textarea.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/model/timepicker/dynamic-timepicker.model.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form.service.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form-relation-matchers.ts","../../../../projects/ng-dynamic-forms/core/src/lib/service/dynamic-form-relation.service.ts","../../../../projects/ng-dynamic-forms/core/src/lib/component/dynamic-form-control-container.component.ts","../../../../projects/ng-dynamic-forms/core/src/lib/component/dynamic-form-control-with-template.component.ts","../../../../projects/ng-dynamic-forms/core/src/lib/directive/dynamic-list.directive.ts","../../../../projects/ng-dynamic-forms/core/src/lib/utils/autofill.utils.ts","../../../../projects/ng-dynamic-forms/core/src/lib/core.module.ts","../../../../projects/ng-dynamic-forms/core/src/core.ts"],"names":[],"mappings":";;;;;;;;;SAAgB,SAAS,CAAC,KAAU;AAAI,IACpC,OAAO,OAAO,KAAK,KAAK,SAAS,CAAC;AACtC,CAAC;AAED;AACA,SAAgB,UAAU,CAAC,KAAU;AAAI,IACrC,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;AACvC,CAAC;AACD,SACgB,QAAQ,CAAC,KAAU;AAAI,IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;AACD,SACgB,QAAQ,CAAC,KAAU;AAAI,IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC;AACvD,CAAC;AACD,SACgB,QAAQ,CAAC,KAAU;AAAI,IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC;AACA;AAAC,MCFqB,2BAA2B;AAAG,IAehD,YAAgC,aAAuC,EACvC,iBAA+C;AACnF,QAFoC,kBAAa,GAAb,aAAa,CAA0B;AAAC,QACxC,sBAAiB,GAAjB,iBAAiB,CAA8B;AAAC,QAdxE,cAAS,GAAG,KAAK,CAAC;AAC9B,KAcK;AACL,IACI,IAAI,OAAO;AAAK,QAEZ,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACtD,QACQ,IAAI,OAAO,KAAK,IAAI,EAAE;AAC9B,YAAY,MAAM,IAAI,KAAK,CAAC,2DAA2D,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;AACxG,SAAS;AACT,QACQ,OAAO,OAA0B,CAAC;AAC1C,KAAK;AACL,IACI,IAAI,EAAE;AAAK,QACP,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3D,KAAK;AACL,IACI,IAAI,QAAQ;AAAK,QACb,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL,IACI,IAAI,SAAS;AAAK,QACd,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;AACpC,KAAK;AACL,IACI,IAAI,OAAO;AAAK,QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AAClC,KAAK;AACL,IACI,IAAI,aAAa;AAAK,QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACpF,KAAK;AACL,IACI,IAAI,iBAAiB;AAAK,QACtB,OAAO,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjG,KAAK;AACL,IACI,QAAQ,CAAC,OAAwC,EAAE,KAAoC,EAC9E,QAAiC,IAAI,CAAC,KAAK;AAAI;AAErD,QAAC,MAAM,aAAa,GAAG,KAAK,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,SACpD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,mCAAI,KAAK,CAAC,MAAkC,CAAC;AAC/G,QACQ,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC1E,KAAK;AACL,IACI,MAAM,CAAC,MAAW;AACtB,QACQ,IAAI,MAAM,YAAY,KAAK,EAAE;AACrC,YAAY,MAAM,CAAC,eAAe,EAAE,CAAC;AACrC,SAAS;AACT,QACQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/B,KAAK;AACL,IACI,QAAQ,CAAC,MAAW;AACxB,QACQ,IAAI,MAAM,YAAY,KAAK,EAAE;AACrC,YAAY,MAAM,CAAC,eAAe,EAAE,CAAC;AACrC,SAAS;AACT,QACQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,KAAK;AACL,IACI,aAAa,CAAC,MAAW,EAAE,OAAsB,IAAI,EAAE,SAAkB,KAAK;AAClF,QACQ,IAAI,MAAM,EAAE;AACpB,YACY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,SACS;AAAC,aAAK,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACnC,YACY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,WAAW,EAAE,MAAM,EAAE,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;AAChF,SAAS;AACT,KAAK;AACL,IACI,OAAO,CAAC,MAAW;AACvB,QACQ,IAAI,MAAM,YAAY,KAAK,EAAE;AACrC,YAAY,MAAM,CAAC,eAAe,EAAE,CAAC;AACrC,SAAS;AACT,QACQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,KAAK;AACL;AACA;AAAC,MCnHqB,yBAA0B,SAAQ,2BAA2B;AACnF,IAKI,IAAI,KAAK;AAAK,QACV,OAAO,IAAI,CAAC,OAAoB,CAAC;AACzC,KAAK;AACL,IACI,IAAI,aAAa;AAAK,QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/E,KAAK;AACL,IACI,IAAI,WAAW;AAAK,QAChB,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7E,KAAK;AACL,IACI,YAAY;AAChB,QAAQ,IAAI,IAAI,CAAC,UAAU,YAAY,SAAS,EAAE;AAClD,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAI,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC3E,SAAS;AACT,KAAK;AACL;AACA;AAAC,MC1BqB,yBAA0B,SAAQ,2BAA2B;AACnF,IAII,YAAY;AAChB,QAAQ,IAAI,IAAI,CAAC,UAAU,YAAY,SAAS,EAAE;AAClD,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAI,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC3E,SAAS;AACT,KAAK;AACL;AACA;AAAC,MCPY,2BAA2B,GAAG,IAAI,cAAc,CAA0B,6BAA6B,EAAE;AACtH,MAIa,2BAA2B;AACxC,IAII,YAA8E,2BAAgC;AAClH,QADkF,gCAA2B,GAA3B,2BAA2B,CAAK;AAAC,QAHvG,UAAK,GAA2B,EAAE,CAAC;AAC/C,QAAY,iBAAY,GAAuE,EAAE,CAAC;AAClG,QAEQ,IAAI,CAAC,2BAA2B,GAAG,2BAAsD,CAAC;AAClG,KAAK;AACL,IACI,QAAQ;AAAK,QACT,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AACnC,KAAK;AACL,IACI,YAAY,CAAC,SAA+B;AAAI,QAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnC,KAAK;AACL,IACI,cAAc,CAAC,SAA+B;AAAI,QAE9C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACtD,QACQ,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;AAC5B,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC1C,SAAS;AACT,KAAK;AACL,IACI,iBAAiB,CAAC,OAAe,EAAE,KAAc;AAAI,QAEjD,MAAM,GAAG,GAAoD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAChG,QACQ,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC7B,YACY,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;AAC/D,SACS;AAAC,aAAK;AACf,YAAY,OAAO,GAA4B,CAAC;AAChD,SAAS;AACT,KAAK;AACL,IACI,mBAAmB,CAAC,KAA8B,EAAE,GAA0B,EAAE,KAAc;AAAI,QAE9F,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC7B,YACY,MAAM,QAAQ,GAA4B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAA4B,IAAI,EAAE,CAAC;AACnH,YACY,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AACzC,gBACgB,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/C,gBAAgB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;AACvD,aACa;AAAC,iBAAK;AACnB,gBAAgB,OAAO,CAAC,IAAI,CAAC,6EAA6E,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;AACtH,aAAa;AACb,SACS;AAAC,aAAK;AACf,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AAC9C,SAAS;AACT,KAAK;AACL,IACI,qBAAqB,CAAC,OAAe,EAAE,KAAc;AAAI,QAErD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxD,QACQ,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC7B,YACY,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;AAClF,gBAAgB,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC9C,aAAa;AACb,SACS;AAAC,aAAK,IAAI,YAAY,KAAK,SAAS,EAAE;AAC/C,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAC9C,SAAS;AACT,KAAK;AACL,IACI,sBAAsB,CAAC,KAA8B;AAAI,QACrD,OAAO,UAAU,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;AAC7G,KAAK;AACL;uLAAC;AACD,kQA9EK;AAAC;EAHL,UAAU,SAAC,kBACR,UAAU,EAAE,MAAM,cACrB,vEAGc,4CAGE,MAAM,SAAC,2BAA2B,cAAG,QAAQ;AAAM;AAAG;AAAC,MCRlD,oBAAoB;AAAG,IAazC,YAAgC,iBAAoC,EACpC,gBAA6C;AACjF,QAFoC,sBAAiB,GAAjB,iBAAiB,CAAmB;AAAC,QACrC,qBAAgB,GAAhB,gBAAgB,CAA6B;AAAC,KAC7E;AACL,IACI,QAAQ;AAAK,QACT,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACjD,KAAK;AACL,IACI,WAAW;AAAK,QACZ,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACnD,KAAK;AACL,IACI,SAAS,CAAC,MAAc,EAAE,KAA8B;AAAI,QACxD,OAAO,KAAK,CAAC,EAAE,CAAC;AACxB,KAAK;AACL,IACI,YAAY;AAAK,QACb,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;AAC9C,QACQ,IAAI,IAAI,CAAC,UAAU,YAAY,SAAS,EAAE;AAClD,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAI,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAC3E,SAAS;AACT,KAAK;AACL,IACI,aAAa;AAAK,QACd,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;AAC/C,KAAK;AACL,IACI,MAAM,CAAC,MAA+B;AAC1C,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/B,KAAK;AACL,IACI,QAAQ,CAAC,MAA+B;AAC5C,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,KAAK;AACL,IACI,OAAO,CAAC,MAA+B;AAC3C,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,KAAK;AACL,IACI,aAAa,CAAC,MAA+B,EAAE,kBAAyD;AAC5G,QAAQ,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxC,KAAK;AACL;gDAzDC,SAAS;qFACR;AAAC;AAA8C,YAXxC,iBAAiB;AAAI,YAQrB,2BAA2B;AAAG;AAAG;AAAC,ICH/B;AAAZ,WAAY,2BAA2B;AACtC,IAAG,4CAAa,CAAA;AAAC,IACd,gDAAiB,CAAA;AAAC,IAClB,8CAAe,CAAA;AACnB,CAAC,EAJW,2BAA2B,KAA3B,2BAA2B,QAItC;AACD,SAiBgB,yBAAyB,CAAC,MAAW;AAAI,IACrD,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC/D;AACA;AAAC,ICvBW;AAAZ,WAAY,eAAe;AAC1B,IAAG,gCAAa,CAAA;AAAC,IACd,oCAAiB,CAAA;AAAC,IAClB,oCAAiB,CAAA;AACrB,CAAC,EAJW,eAAe,KAAf,eAAe;AACrB;AAAC,MCJM,yBAAyB,GAAG,eAAe;AACxD,SAOgB,YAAY,CAAC,IAAa;AAAI,IAE1C,OAAO,CAAC,MAAM,EAAE,GAAG;AACvB,QAAQ,OAAO,CAAC,cAAc,CAAC,yBAAyB,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,IAAI,GAAG,EAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACjG,KAAK,CAAC;AACN,CAAC;AACD,SACgB,gBAAgB,CAAC,MAAW;AAAI,IAE5C,MAAM,aAAa,GAAG,EAAE,CAAC;AAC7B,IACI,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;AAC9B,QACQ,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,yBAAyB,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACrF,QACQ,IAAI,QAAQ,EAAE;AACtB,YAAY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,SAAS;AACT,KAAK;AACL,IACI,OAAO,aAAa,CAAC;AACzB,CAAC;AACD,SACgB,SAAS,CAAC,MAAW,EAAE,SAAe;AAAI,IAEtD,OAAO,gBAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,IAA0B;AAC9F,QACQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3C,QACQ,OAAO,IAAI,CAAC;AACpB,KACK,EAAE,EAAE,CAAC,CAAC;AACX;AACA;AAAC,MCrBqB,uBAAuB;AAAG,IAuB5C,YAAsB,MAAqC,EAAE,SAA0C,IAAI;AAC/G;AACuC,QAbnC,WAAM,GAA2B,IAAI,CAAC;AAC1C,QAYQ,IAAI,CAAC,eAAe,SAAG,MAAM,CAAC,eAAe,mCAAI,IAAI,CAAC;AAC9D,QAAQ,IAAI,CAAC,aAAa,SAAG,MAAM,CAAC,aAAa,mCAAI,IAAI,CAAC;AAC1D,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AACvE,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;AAC5B,QAAQ,IAAI,CAAC,KAAK,SAAG,MAAM,CAAC,KAAK,mCAAI,IAAI,CAAC;AAC1C,QAAQ,IAAI,CAAC,YAAY,SAAG,MAAM,CAAC,YAAY,mCAAI,IAAI,CAAC;AACxD,QAAQ,IAAI,CAAC,cAAc,SAAG,MAAM,CAAC,cAAc,mCAAI,IAAI,CAAC;AAC5D,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,SAAG,MAAM,CAAC,IAAI,mCAAI,MAAM,CAAC,EAAE,CAAC;AAC7C,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;AACjF,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3E,QAAQ,IAAI,CAAC,UAAU,SAAG,MAAM,CAAC,UAAU,mCAAI,IAAI,CAAC;AACpD,QACQ,IAAI,CAAC,SAAS,GAAG,IAAI,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;AACnG,QAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC;AACxE,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;AAC7D,KAAK;AACL,IACI,IAAI,QAAQ;AAAK,QACb,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACzC,KAAK;AACL,IACI,IAAI,QAAQ,CAAC,QAAiB;AAClC,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtC,KAAK;AACL,IACI,IAAI,gBAAgB;AAAK,QACrB,OAAO,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC5C,KAAK;AACL,IACI,MAAM;AACV,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/B,KAAK;AACL,CAAC;AAxDmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,gEAAS;AACtC;AAAa,IAAtC,YAAY,CAAC,UAAU,CAAC;AAAE;AACX,0DAD6B;AAC7B;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,8DAAO;AAC9C;AAAa,IAA5B,YAAY,EAAE;AAAE;AACE,uDADa;AAChB;AACnB,IADI,YAAY,EAAE;AAAE;AACM,mDADI;AACX;AAAa,IAA5B,YAAY,EAAE;AAAE;AACJ,sDADwB;AACrB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACX,6DADsC;AAC5B;AAAa,IAA5B,YAAY,EAAE;AAAE;AACb,+DAD0C;AAC9B;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,uDAAC;AACxC;AAAa,IAA5B,YAAY,EAAE;AAAE;AACI,qDADQ;AAEb;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAqC,0DAAE;AACxC;AAAa,IAA5B,YAAY,EAAE;AAAE;AAChB,yDADgD;AACjC;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,2DAAI;AAE/D;AAAC,MC1BqB,4BAAgC,SAAQ,uBAAuB;AACrF,IAWI,YAAsB,MAA6C,EAAE,MAAiC;AAC1G;AACuB,QAAf,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QACQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;AACjF,QAAQ,IAAI,CAAC,IAAI,SAAG,MAAM,CAAC,IAAI,mCAAI,IAAI,CAAC;AACxC,QAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,QAAQ,IAAI,CAAC,QAAQ,SAAG,MAAM,CAAC,QAAQ,mCAAI,IAAI,CAAC;AAChD,QACQ,IAAI,CAAC,MAAM,GAAG,IAAI,eAAe,OAAC,MAAM,CAAC,KAAK,mCAAI,IAAI,CAAC,CAAC;AAChE,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;AACvD,KAAK;AACL,IACI,IAAI,KAAK;AAAK,QACV,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AACtC,KAAK;AACL,IACI,IAAI,KAAK,CAAC,KAAe;AAC7B,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,KAAK;AACL,IACI,aAAa,CAAC,GAAW,EAAE,YAAyB;AAAI,QACpD,OAAO,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;AACrH,KAAK;AACL,CAAC;AAnCmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,gEAAG;AAC1C;AAAa,IAA5B,YAAY,EAAE;AAAE;AACH,0DADsB;AACpB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACA,8DADiB;AAClB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACP,8DAD8B;AACjB;AAAa,IAAnC,YAAY,CAAC,OAAO,CAAC;AAAE;AAEhB,4DAFwC;AAEpD;AAAC,MCfY,0BAA0B;AAAG,IAOtC,YAAY,OAA8B,EAAE,QAA0B,EAAE,EAAE,QAAgB,CAAC,CAAC;AAChG,QACQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,KAAK;AACL,IACI,IAAI,MAAM;AAAK,QACX,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,KAAK;AACL,IACI,GAAG,CAAC,KAAa;AAAI,QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACjC,KAAK;AACL,IACI,MAAM;AACV,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/B,KAAK;AACL,CAAC;AAtBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACR,yDAD+B;AACxB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEE,yDAFW;AAElC,MAqBa,+BAA+B,GAAG,QAAQ;AACvD,MAUa,qBAAsB,SAAQ,uBAAuB;AAClE,IAUI,YAAY,MAAmC,EAAE,MAAiC;AACtF;AACmB,QAAX,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAToB,WAAM,GAAiC,EAAE,CAAC;AAC9D,QAG6B,SAAI,GAAW,+BAA+B,CAAC;AAC5E,QAKQ,IAAI,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;AAC7C,YAAY,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AACpD,SAAS;AAAC,aAAK;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;AAClG,SAAS;AACT,QACQ,IAAI,CAAC,oBAAoB,SAAG,MAAM,CAAC,oBAAoB,mCAAI,IAAI,CAAC;AACxE,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AAClD,QAAQ,IAAI,CAAC,eAAe,SAAG,MAAM,CAAC,eAAe,mCAAI,IAAI,CAAC;AAC9D,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;AACpF,QACQ,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AAC1C,YACY,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,KAAK;AACpD;AAAwB,gBAAR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,0BAA0B,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,QAAE,UAAU,CAAC,KAAK,mCAAI,KAAK,CAAC,CAAC,CAAC;AACpH,aAAa,CAAC,CAAC;AACf,SACS;AAAC,aAAK;AACf,YACY,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,EAAE;AACpE,gBAAgB,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChC,aAAa;AACb,SAAS;AACT,KAAK;AACL,IACY,gBAAgB;AAAK,QACzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AACnE,KAAK;AACL,IACI,IAAI,IAAI;AAAK,QACT,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAClC,KAAK;AACL,IACI,GAAG,CAAC,KAAa;AAAI,QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAClC,KAAK;AACL,IACI,QAAQ;AAAK,QACT,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACpD,KAAK;AACL,IACI,WAAW,CAAC,KAAa;AAAI,QAEzB,IAAI,KAAK,GAAG,IAAI,0BAA0B,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;AAC9E,QACQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,QACQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IACI,SAAS,CAAC,KAAa,EAAE,IAAY;AAAI,QAErC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7E,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,KAAK;AACL,IACI,WAAW,CAAC,KAAa;AAAI,QAEzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,KAAK;AACL,IACI,KAAK;AAAK,QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9B,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,KAAK;AACL,CAAC;AAhFmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,mEAAc;AAErD;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,8DAAS;AAChD;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAqC,qDAAI;AAC1C;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEL,2DAFyB;AAErB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAqC,6DAAI;AAC1C;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,mDAAiB;AAE5E;AAAC,MChDqB,wBAAyB,SAAQ,4BAAqC;AAC5F,IAGI,YAAsB,MAAsC,EAAE,MAAiC;AACnG;AACe,QAAP,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QACQ,IAAI,CAAC,aAAa,SAAG,MAAM,CAAC,aAAa,mCAAI,IAAI,CAAC;AAC1D,QAAQ,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAClE,KAAK;AACL,IACI,IAAI,OAAO;AAAK,QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL,IACI,IAAI,OAAO,CAAC,OAAgB;AAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;AAC7B,KAAK;AACL,IACI,MAAM;AAAK,QACP,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;AACrC,KAAK;AACL,CAAC;AArBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEb,+DAFyC;AAEjD;AAAC,MCTY,kCAAkC,GAAG,WAAW;AAC7D,MAMa,oBAAqB,SAAQ,wBAAwB;AAClE,IAKI,YAAY,MAAkC,EAAE,MAAiC;AACrF,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,kCAAkC,CAAC;AAC/E,QAKQ,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;AAC5F,KAAK;AACL,CAAC;AAVmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEN,2DAF4B;AAEvB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,kDAAoB;AAE/E;AAAC,MCAqB,wBAA4B,SAAQ,4BAA+B;AACzF,IAWI,YAAsB,MAAyC,EAAE,MAAiC;AACtG;AAC2B,QAAnB,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QACQ,IAAI,CAAC,YAAY,SAAG,MAAM,CAAC,YAAY,mCAAI,IAAI,CAAC;AACxD,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AAChF,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9E,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9E,QAAQ,IAAI,CAAC,WAAW,SAAG,MAAM,CAAC,WAAW,mCAAI,EAAE,CAAC;AACpD,QAAQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,QAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,QAAQ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;AACnF,QAAQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,KAAK;AACL,CAAC;AAxBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACJ,8DADwB;AACrB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACD,2DADmB;AACnB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACR,2DADgC;AACzB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACR,2DADgC;AACzB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACH,6DADsB;AACpB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACL,wDAD0B;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACA,0DADiB;AAClB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACF,4DADqB;AACpB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEN,wDAF2B;AAE1C;AAAC,SC5Be,YAAY,CAAC,IAA2C;AAAI,IAExE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACxB,QACQ,OAAO,IAAc,CAAC;AAC9B,KACK;AAAC,SAAK,IAAI,IAAI,YAAY,MAAM,EAAE;AACvC,QACQ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC/B,KACK;AAAC,SAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACpC,QACQ,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK,CAAC,CAAa,CAAC;AAClE,KAAK;AACL,IACI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD,SACgB,cAAc,CAAC,IAAuB;AAAI,IAEtD,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACxB,QACQ,MAAM,QAAQ,GAAI,IAAe,CAAC,UAAU,CAAC,GAAG,CAAC,IAAK,IAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC5F,QACQ,OAAO,QAAQ,GAAG,IAAI,MAAM,CAAE,IAAe,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACxF,KACK;AAAC,SAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACpC,QACQ,OAAQ,IAAiB,CAAC,GAAG,CAAC,KAAK,IAAI,cAAc,CAAC,KAAK,CAAC,CAAa,CAAC;AAClF,KAAK;AACL,IACI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD,SACgB,YAAY,CAAC,IAAY,EAAE,KAAU;AAAI,IAErD,MAAM,YAAY,GAAG,mFAAmF,CAAC;AAC7G,IACI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AACjF;AACA;AAAC,MClCY,+BAA+B,GAAG,QAAQ;AACvD,MACa,qCAAqC,GAAG,QAAQ;AAC7D,MAAa,oCAAoC,GAAG,OAAO;AAC3D;AACA,MAAa,8CAA8C,GAAG,iBAAiB;AAC/E,MAAa,qCAAqC,GAAG,QAAQ;AAC7D,MAAa,oCAAoC,GAAG,OAAO;AAC3D,MAAa,qCAAqC,GAAG,QAAQ;AAC7D,MAAa,sCAAsC,GAAG,SAAS;AAC/D,MAAa,wCAAwC,GAAG,WAAW;AACnE,MAAa,qCAAqC,GAAG,QAAQ;AAC7D,MAAa,sCAAsC,GAAG,SAAS;AAC/D,MAAa,mCAAmC,GAAG,MAAM;AACzD,MAAa,oCAAoC,GAAG,OAAO;AAC3D,MAAa,oCAAoC,GAAG,OAAO;AAC3D,MAAa,mCAAmC,GAAG,MAAM;AACzD,MAAa,oCAAoC,GAAG,OAAO;AAC3D,MAca,iBAAkB,SAAQ,wBAA2D;AAClG,IAiBI,YAAY,MAA+B,EAAE,MAAiC;AAClF;AAC2B,QAAnB,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAjBI,UAAK,GAAoB,IAAI,CAAC;AAClC,QAAI,UAAK,GAA6B,IAAI,CAAC;AAC3C,QAOkC,UAAK,GAAiB,IAAI,CAAC;AAC7D,QAAqB,YAAO,GAAkB,IAAI,CAAC;AACnD,QAC6B,SAAI,GAAW,+BAA+B,CAAC;AAC5E,QAKQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,QAAQ,IAAI,CAAC,SAAS,SAAG,MAAM,CAAC,SAAS,mCAAI,oCAAoC,CAAC;AAClF,QAAQ,IAAI,CAAC,IAAI,SAAG,MAAM,CAAC,IAAI,mCAAI,IAAI,CAAC;AACxC,QAAQ,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,KAAK,SAAS,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC;AAChE,QAAQ,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,KAAK,SAAS,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC;AAChE,QAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5E,QAAQ,IAAI,CAAC,OAAO,SAAG,MAAM,CAAC,OAAO,mCAAI,IAAI,CAAC;AAC9C,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AAC/D,QACQ,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;AACvC,YACY,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACpC,YAAY,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC;AAC5C,SAAS;AACT,KAAK;AACL,IACI,IAAI,MAAM;AAAK,QACX,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,KAAK;AACL,IACI,IAAI,OAAO;AAAK,QACZ,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,KAAK;AACL,IACI,IAAI,IAAI,CAAC,IAAsC;AACnD,QACQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACjC,YACY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,YAAY,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,SACS;AAAC,aAAK,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;AACvC,YACY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACnE,SACS;AAAC,aAAK;AACf,YACY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,SAAS;AACT,KAAK;AACL,IACI,MAAM;AACV,QACQ,MAAM,IAAI,GAAQ,KAAK,CAAC,MAAM,EAAE,CAAC;AACzC,QACQ,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AAChC,YAAY,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpF,SAAS;AACT,QACQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,CAAC;AAxEmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACL,iDAD0B;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACD,oDADkB;AAGlB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,+CAAuB;AAC9D;AAAa,IAA5B,YAAY,EAAE;AAAE;AAClB,8CADoD;AACnC;AAAa,IAA5B,YAAY,EAAE;AAAE;AAClB,8CADoD;AACnC;AAAa,IAA5B,YAAY,EAAE;AAAE;AACP,mDAD+B;AACzB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACN,kDAD4B;AACvB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEJ,+CAFuB;AAEd;AAAa,IAAlC,YAAY,CAAC,MAAM,CAAC;AAAE;AACzB,gDAD2D;AAGzC;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,+CAAiB;AAE5E;AAAC,ICxDW;AAAZ,WAAY,oCAAoC;AAC/C,IAAG,uDAAe,CAAA;AAAC,IAChB,mDAAW,CAAA;AACf,CAAC,EAHW,oCAAoC,KAApC,oCAAoC,QAG/C;AACD,MAIa,wBAAwB;AACrC,IAOI,YAAmB,WAA6B;AACpD,QADuB,gBAAW,GAAX,WAAW,CAAkB;AAAC,QANxC,UAAK,GAAW,oCAAoC,CAAC,GAAG,CAAC;AACtE,QAAa,OAAE,GAAkB,IAAI,CAAC;AACtC,KAKK;AACL;oDAbC,SAAS,SAAC,kBACP,QAAQ,EAAE,6CAA6C,cAC1D;8QACI;AAAC;AAES,YAZY,WAAW;AAAG;AAAG;AAEpB,oBAUnB,KAAK;AAAK,iBACV,KAAK;AAAK,oBACV,KAAK;AAAK,sBACV,KAAK;AAAK,wBACV,KAAK;AAAI;AAAG;AAAC,MCML,wBAAwB;AACrC,IACI,QAAQ,CAAC,EAAU,EAAE,UAAoC;AAAI,QAEzD,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;AAClC,YACY,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACvD,gBACgB,IAAI,GAAG,KAAK,EAAE,EAAE;AAChC,oBAAoB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;AAC3C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QACQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACI,WAAW,CAAC,KAA8B,EAAE,UAAoC;AAAI,QAEhF,IAAI,aAAa,GAA6B,IAAI,CAAC;AAC3D,QACQ,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;AAClC,YACY,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACvD,gBACgB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS;AAChD,oBACoB,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;AACtD,oBACoB,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE,IAAI,QAAQ,KAAK,KAAK,CAAC,IAAI,EAAE;AAC1E,wBAAwB,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AACxD,qBAAqB;AACrB,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,SAAS;AACT,QACQ,OAAO,aAAa,CAAC;AAC7B,KAAK;AACL,IACI,sBAAsB,CAAC,KAA8B,EAAE,SAAsC;AAAI,QAE7F,MAAM,cAAc,GAAoD,CAAC,QAAkC;AACnH,YAAY,OAAO,QAAQ,CAAC,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,QAAQ,CAAC,SAAS,KAAK,KAAK,CAAC,IAAI,CAAC;AACtF,SAAS,CAAC;AACV,QACQ,IAAI,SAAS,YAAY,SAAS,EAAE;AAC5C,YAAY,OAAO,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACpD,SACS;AAAC,aAAK,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AAC7C,YAAY,OAAO,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACpD,SAAS;AACT,QACQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL,IACI,kBAAkB,CAAC,KAA8B,EAAE,SAAsC,EACtE,SAA+C;AAAI,QAElE,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,SAAS,CAAC;AAC5D,aAAa,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;AACpF,KAAK;AACL;AACM;AACmI;AACnC;AACjG;AACC,IACF,gBAAgB,CAAC,KAA8B,EAAE,SAAsC;AAAI,QACvF,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,SAAS,EAAE,oCAAoC,CAAC,KAAK,CAAC,CAAC;AACrG,KAAK;AACL,IACI,cAAc,CAAC,KAA8B,EAAE,SAAsC;AAAI,QACrF,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,SAAS,EAAE,oCAAoC,CAAC,GAAG,CAAC,CAAC;AACnG,KAAK;AACL,IACI,QAAQ,CAAC,MAAmD,EAAE,OAAwC,EAC7F,KAAoC;AAAI,QAE7C,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;AAChE,YACY,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAmC,CAAC;AAC7E,YACY,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AAC9C,gBAAgB,OAAO,MAAM,CAAC,KAAK,CAAW,CAAC;AAC/C,aAAa;AACb,SAAS;AACT,QACQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL,IACI,YAAY,CAAC,MAAmD;AAAI,QAEhE,MAAM,IAAI,GAAuC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAC7E,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;AACrB,QACQ,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;AAC9B,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG;AAC5B,gBAAgB,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;AACzE,oBAAoB,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACvD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QACQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL,IACI,YAAY,CAAC,KAA8B;AAAI,QAE3C,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;AAC1B,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAClC,QACQ,OAAO,MAAM,KAAK,IAAI,EAAE;AAChC,YACY,IAAI,MAAM,YAAY,0BAA0B,EAAE;AAC9D,gBACgB,EAAE,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,EAAE,EAAE,CAAC;AACxE,gBAAgB,MAAM;AACtB,aAAa;AACb,YACY,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACnC,SAAS;AACT,QACQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL;+HAAC;AACD,8MA7HK;AAAC;mDAHL,UAAU,7DAGJ,MCXM,kBAAkB,GAAG,IAAI,cAAc,CAAgB,oBAAoB;AACxF;ADOY,kBACR,UAAU,EAAE,MAAM,cACrB,lDCTA,MCLY,2BAA2B,GACpC,CAAC,OAAwB,EAAE,KAA8B,EAAE,QAAiB;AAChF,IAAQ,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC;AACxC,EAAE;AACN,MACa,0BAA0B,GACnC,CAAC,OAAwB,EAAE,KAA8B,EAAE,QAAiB;AAChF,IAAQ,OAAO,CAAC,KAAK,CAAC,QAAQ,KAAK,eAAe,CAAC,MAAM,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC;AACjI,EAAE;AACN,MACa,8BAA8B,GAAG,IAAI,cAAc,CAA8B,gCAAgC;AAC9H;AAAC,MCQY,4BAA4B;AACzC,IACI,YAAuD,cAA6B,EACvB,oBAAwC,EACzC,mBAA8D,EAClD,+BAA4D;AACxI,QAJ2D,mBAAc,GAAd,cAAc,CAAe;AAAC,QACxB,yBAAoB,GAApB,oBAAoB,CAAoB;AAAC,QAC1C,wBAAmB,GAAnB,mBAAmB,CAA2C;AAAC,QACnD,oCAA+B,GAA/B,+BAA+B,CAA6B;AAAC,KACpI;AACL,IACY,cAAc,CAAC,aAAqB,EAAE,gBAAqB,IAAI,EAChD,kBAAmC,IAAI,CAAC,cAAc;AAAI,QAE7E,IAAI,WAAqD,CAAC;AAClE,QACQ,IAAI,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;AACtD,YACY,WAAW,GAAI,UAAkB,CAAC,aAAa,CAAC,CAAC;AAC7D,SACS;AAAC,aAAK;AACf,YACY,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;AACzF,gBAAgB,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC1E,aACa;AAAC,iBAAK,IAAI,eAAe,EAAE;AACxC,gBAAgB,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC;AAClG,aAAa;AACb,SAAS;AACT,QACQ,IAAI,WAAW,KAAK,SAAS,EAAE;AACvC,YAAY,MAAM,IAAI,KAAK,CACX,cAAc,aAAa,qFAAqF,CAAC,CAAC;AAClI,SAAS;AACT,QACQ,IAAI,aAAa,KAAK,IAAI,EAAE;AACpC,YAAY,OAAQ,WAAgC,CAAC,aAAa,CAAC,CAAC;AACpE,SAAS;AACT,QACQ,OAAO,WAAwB,CAAC;AACxC,KAAK;AACL,IACY,eAAe,CAAC,gBAAyC,EACzC,kBAAmC,IAAI,CAAC,cAAc;AAAI,QAE9E,IAAI,YAAY,GAAgB,EAAE,CAAC;AAC3C,QACQ,IAAI,QAAQ,CAAC,gBAAgB,CAAC,EAAE;AACxC,YACY,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,kBAAkB;AAC/E,gBACgB,MAAM,oBAAoB,GAAI,gBAA4C,CAAC,kBAAkB,CAAC,CAAC;AAC/G,gBACgB,IAAI,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,EAAE;AACtE,oBACoB,MAAM,UAAU,GAAG,oBAAkD,CAAC;AAC1F,oBACoB,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AAClG,iBAAiB;AACjB,gBACgB,OAAO,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,oBAAoB,EAAE,eAAe,CAAC,CAAC;AACtG,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QACQ,OAAO,YAAY,CAAC;AAC5B,KAAK;AACL,IACI,YAAY,CAAC,aAAqB,EAAE,gBAAqB,IAAI;AAAI,QAC7D,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,aAAa,CAAgB,CAAC;AAChF,KAAK;AACL,IACI,iBAAiB,CAAC,aAAqB,EAAE,gBAAqB,IAAI;AAAI,QAClE,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,oBAAoB,CAAqB,CAAC;AAChH,KAAK;AACL,IACI,aAAa,CAAC,gBAAyC;AAAI,QACvD,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAkB,CAAC;AACvE,KAAK;AACL,IACI,kBAAkB,CAAC,qBAA8C;AAAI,QACjE,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,IAAI,CAAC,oBAAoB,CAAuB,CAAC;AAC5G,KAAK;AACL,IACI,gBAAgB,CAAC,gBAAgD,EAAE,OAAwB,EAC1E,KAA8B;AAAI,QAE/C,KAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC;AAC5C,QACQ,IAAI,gBAAgB,KAAK,IAAI,EAAE;AACvC,YACY,OAAO,CAAC,eAAe,EAAE,CAAC;AACtC,SACS;AAAC,aAAK;AACf,YAAY,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACxE,SAAS;AACT,QACQ,OAAO,CAAC,sBAAsB,EAAE,CAAC;AACzC,KAAK;AACL,IACI,qBAAqB,CAAC,qBAAqD,EAAE,OAAwB,EAC/E,KAA8B;AAAI,QAEpD,KAAK,CAAC,eAAe,GAAG,qBAAqB,CAAC;AACtD,QACQ,IAAI,qBAAqB,KAAK,IAAI,EAAE;AAC5C,YACY,OAAO,CAAC,oBAAoB,EAAE,CAAC;AAC3C,SACS;AAAC,aAAK;AACf,YAAY,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACvF,SAAS;AACT,QACQ,OAAO,CAAC,sBAAsB,EAAE,CAAC;AACzC,KAAK;AACL,IACI,iBAAiB,CAAC,OAAwB,EAAE,KAA8B,EAAE,QAAiB;AAAI,QAE7F,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC,gBAAgB,CAAC;AACvE,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,+BAA+B,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;AAC7H,YAAY,2BAA2B,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAClE,QACQ,OAAO,YAAY,IAAI,OAAO,CAAC;AACvC,KAAK;AACL,IACI,uBAAuB,CAAC,QAAgB,EAAE,KAA8B,EAAE,QAAa,IAAI;AAAI,QAE3F,OAAO,QAAQ,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,MAAc,EAAE,UAAkB;AACxF,YACY,IAAI,cAAc,GAAQ,KAAK,CAAC;AAC5C,YAAY,IAAI,YAAY,GAAW,UAAU,CAAC;AAClD,YACY,IAAI,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE;AAChE,gBACgB,cAAc,GAAG,KAAK,CAAC;AACvC,gBAAgB,YAAY,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AACpE,aAAa;AACb,YACY,OAAO,cAAc,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,cAAc,CAAC,YAAY,CAAC,KAAK,SAAS;AACtG,gBAAgB,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;AACpD,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,mBAAmB,CAAC,OAAwB,EAAE,KAA8B;AAAI,QAE5E,MAAM,QAAQ,GAAa,EAAE,CAAC;AACtC,QACQ,IAAI,KAAK,CAAC,gBAAgB,EAAE;AACpC,YACY,MAAM,cAAc,GAAG,KAAK,CAAC,aAAwC,CAAC;AAClF,YACY,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,kBAAkB;AACxE,gBACgB,IAAI,UAAU,GAAG,kBAAkB,CAAC;AACpD,gBACgB,IAAI,kBAAkB,KAAK,WAAW,IAAI,kBAAkB,KAAK,WAAW,EAAE;AAC9F,oBAAoB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACxE,iBAAiB;AACjB,gBACgB,IAAI,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;AAC/D,oBACoB,MAAM,eAAe,GAAG,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;AACjF,oBAAoB,MAAM,eAAe,GAAG,cAAc,CAAC,UAAU,CAAW,CAAC;AACjF,oBACoB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;AACzG,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QACQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL,IACI,UAAU,CAAC,KAAU;AAAI,QACrB,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAK,MAAM,CAAC,MAAM,CAAC,eAAe,CAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC/F,KAAK;AACL,IACI,qBAAqB,CAAC,KAAU;AAAI,QAEhC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC7B,YAAY,OAAO,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AAChF,SAAS;AACT,QACQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;iTAAC;AACD,wWArLK;AAAC;EAHL,UAAU,SAAC,kBACR,UAAU,EAAE,MAAM,cACrB,vEAGc,wCAAE,QAAQ,YAAI,MAAM,SAAC,aAAa;AAAS,wCACzC,QAAQ,YAAI,MAAM,SAAC,mBAAmB;AAAS,YACqB,GAAG,uBAAvE,QAAQ,YAAI,MAAM,SAAC,kBAAkB;AAAS,4CAC9C,QAAQ,YAAI,MAAM,SAAC,8BAA8B;AAAQ;AAAG;AAAC,MC1BjE,+BAA+B,GAAG,QAAQ;AACvD,MAOa,qBAAsB,SAAQ,uBAAuB;AAClE,IAMI,YAAY,MAAmC,EAAE,MAAiC;AACtF;AACe,QAAP,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QARoB,UAAK,GAAqB,EAAE,CAAC;AACjD,QAE6B,SAAI,GAAW,+BAA+B,CAAC;AAC5E,QAKQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;AACrE,QAAQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,KAAK;AACL,IACI,GAAG,CAAC,KAAa;AAAI,QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACjC,KAAK;AACL,IACI,GAAG,CAAC,KAAa,EAAE,YAAqC;AAAI,QACxD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;AACzC,KAAK;AACL,IACI,GAAG,CAAC,YAAqC;AAAI,QACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACtC,KAAK;AACL,IACI,MAAM,CAAC,KAAa,EAAE,YAAqC;AAAI,QAC3D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;AAClD,KAAK;AACL,IACI,IAAI,CAAC,KAAa,EAAE,IAAY;AAAI,QAChC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,KAAK;AACL,IACI,MAAM,CAAC,KAAa;AACxB,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACpC,KAAK;AACL,IACI,IAAI;AAAK,QACL,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACjC,KAAK;AACL,CAAC;AAxCmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACb,oDADyC;AAC7B;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEN,qDAF2B;AAEtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,mDAAiB;AAE5E;AAAC,MCfY,wCAAwC,GAAG,iBAAiB;AACzE,MACa,yBAA0B,SAAQ,qBAAqB;AACpE,IAKI,YAAY,MAAmC,EAAE,MAAiC;AACtF,QAAQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAJ6B,SAAI,GAAW,wCAAwC,CAAC;AACrF,KAGK;AACL,IACI,KAAK,CAAC,GAAG,OAAiB;AAAI,QAC1B,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;AACnE,KAAK;AACL,IACI,OAAO,CAAC,GAAG,OAAiB;AAAI,QAC5B,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;AACpE,KAAK;AACL,IACI,QAAQ;AAAK,QACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;AAC1D,KAAK;AACL,IACI,UAAU;AAAK,QACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;AAC3D,KAAK;AACL,CAAC;AAvBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEf,wDAF4C;AAE9B;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,uDAA0B;AAErF;AAAC,MCRY,qCAAqC,GAAG,cAAc;AACnE,MAOa,uBAAwB,SAAQ,4BAA6C;AAC1F,IAMI,YAAY,MAAqC,EAAE,MAAiC;AACxF,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,qCAAqC,CAAC;AAClF,QAKQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AACrE,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AACvE,KAAK;AACL,CAAC;AAZmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACL,uDAD0B;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEC,uDAFc;AAEhB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,qDAAuB;AAElF;AAAC,MCNqB,uBAAwB,SAAQ,4BAAqD;AAC3G,IAMI,YAAsB,MAAqC,EAAE,MAAiC;AAClG;AAC2B,QAAnB,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QACQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,QAAQ,IAAI,CAAC,GAAG,SAAG,MAAM,CAAC,GAAG,mCAAI,IAAI,CAAC;AACtC,QAAQ,IAAI,CAAC,GAAG,SAAG,MAAM,CAAC,GAAG,mCAAI,IAAI,CAAC;AACtC,QAAQ,IAAI,CAAC,WAAW,SAAG,MAAM,CAAC,WAAW,mCAAI,IAAI,CAAC;AACtD,KAAK;AACL,CAAC;AAdmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACL,uDAD0B;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACnB,oDADsD;AACpC;AAAa,IAA5B,YAAY,EAAE;AAAE;AACnB,oDADsD;AACpC;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEX,4DAFqC;AAE/C;AAAC,MCZY,oCAAoC,GAAG,aAAa;AACjE,MAaa,sBAAuB,SAAQ,uBAAuB;AACnE,IAYI,YAAY,MAAoC,EAAE,MAAiC;AACvF;AACuB,QAAf,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,oCAAoC,CAAC;AACjF,QAKQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AAChF,QAAQ,IAAI,CAAC,WAAW,SAAG,MAAM,CAAC,WAAW,mCAAI,IAAI,CAAC;AACtD,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AACvE,QAAQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,QAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;AACjF,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;AACpF,QAAQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,KAAK;AACL,CAAC;AAxBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACD,yDADmB;AACnB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,2DAAK;AAC5C;AAAa,IAA5B,YAAY,EAAE;AAAE;AACE,sDADa;AAChB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACL,sDAD0B;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACA,wDADiB;AAClB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACL,sDAD0B;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACT,0DADkC;AAC1B;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEX,2DAFqC;AAE3B;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,oDAAsB;AAEjF;AAAC,MChCY,gCAAgC,GAAG,SAAS;AACzD,MAIa,kBAAmB,SAAQ,wBAAgC;AACxE,IAGI,YAAY,MAAgC,EAAE,MAAiC;AACnF,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,gCAAgC,CAAC;AAC7E,KAIK;AACL,CAAC;AANmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,gDAAkB;AAE7E;AAAC,MCHqB,uBAAwB,SAAQ,4BAA2C;AACjG,IAGI,YAAsB,MAAqC,EAAE,MAAiC;AAClG,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QACQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,KAAK;AACL,CAAC;AARmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAED,yDAFkB;AAEtC;AAAC,MCTY,qCAAqC,GAAG,cAAc;AACnE,MAYa,sBAAuB,SAAQ,uBAAuB;AACnE,IAWI,YAAY,MAAoC,EAAE,MAAiC;AACvF;AACmB,QAAX,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,qCAAqC,CAAC;AAClF,QAKQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AAC1E,QAAQ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;AAClF,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AACxE,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AACxE,QAAQ,IAAI,CAAC,SAAS,SAAG,MAAM,CAAC,SAAS,mCAAI,IAAI,CAAC;AAClD,QAAQ,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;AACxF,QAAQ,IAAI,CAAC,GAAG,SAAG,MAAM,CAAC,GAAG,mCAAI,IAAI,CAAC;AACtC,KAAK;AACL,CAAC;AAtBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACR,sDAD+B;AACxB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACF,0DADqB;AACpB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACN,uDAD4B;AACvB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACN,uDAD4B;AACvB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACR,yDADgC;AACzB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACJ,4DADyB;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEH,mDAFqB;AAEnB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,oDAAuB;AAElF;AAAC,MChBY,iBAAiB;AAAG,IAM7B,YAAY,MAAkC;AAClD;AACe,QAAP,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,QAAQ,IAAI,CAAC,KAAK,SAAG,MAAM,CAAC,KAAK,mCAAI,IAAI,CAAC;AAC1C,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAClC,KAAK;AACL,IACI,IAAI,IAAI;AACZ,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL,IACI,IAAI,IAAI,CAAC,IAAmB;AAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,KAAK;AACL,IACI,MAAM;AACV,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/B,KAAK;AACL,CAAC;AAtBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACA,mDADiB;AAClB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACJ,gDADwB;AACrB;AAElB,IAFG,YAAY,EAAE;AAAE;AAEO,gDAFC;AAE7B,MAyBsB,yBAA6B,SAAQ,4BAAqC;AAChG,IAII,YAAsB,MAA0C,EAAE,MAAiC;AACvG,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QANqC,aAAQ,GAA2B,EAAE,CAAC;AAC3E,QAMQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AACtC,KAAK;AACL,IACY,cAAc;AAAK,QACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzC,KAAK;AACL,IACI,IAAI,OAAO,CAAC,OAAY;AAC5B,QACQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACpC,YACY,IAAI,CAAC,QAAQ,GAAI,OAAwC,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI,iBAAiB,CAAI,YAAY,CAAC,CAAC,CAAC;AAClI,YACY,IAAI,CAAC,cAAc,EAAE,CAAC;AAClC,SACS;AAAC,aAAK,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE;AAC1C,YACY,IAAI,CAAC,QAAQ,GAAI,OAAoD,CAAC,IAAI,CACtE,GAAG,CAAC,aAAa;AACjC,gBACoB,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI,iBAAiB,CAAI,YAAY,CAAC,CAAC,CAAC;AAC9G,gBACoB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzC,aAAiB,CAAC,CAAC,CAAC;AACpB,SACS;AAAC,aAAK;AACf,YACY,IAAI,CAAC,cAAc,EAAE,CAAC;AAClC,SAAS;AACT,KAAK;AACL,IACI,IAAI,OAAO;AAAK,QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC;AAC7B,KAAK;AACL,IACI,GAAG,CAAC,YAAwC;AAAI,QAC5C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AAC9D,KAAK;AACL,IACI,GAAG,CAAC,KAAa;AAAI,QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACnC,KAAK;AACL,IACI,MAAM,CAAC,KAAa,EAAE,YAAwC;AAAI,QAE9D,MAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC,YAAY,CAAC,CAAC;AAC3D,QACQ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC9C,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;AAC9B,QACQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IACI,MAAM,CAAC,GAAG,OAAiB;AAAI,QAE3B,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAChE,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;AAC9B,KAAK;AACL,CAEC;AAnE4B;AAAa,IAArC,YAAY,CAAC,SAAS,CAAC;AAAE;AAAqC,2DAAQ;AAC1E;AAAC,MC5CW,qCAAqC,GAAG,cAAc;AACnE,MAMa,sBAA0B,SAAQ,yBAA4B;AAC3E,IAKI,YAAY,MAAuC,EAAE,MAAiC;AAC1F;AACe,QAAP,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,qCAAqC,CAAC;AAClF,QAKQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,KAAK;AACL,IACI,MAAM,CAAC,KAAa;AAAI,QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;AAC3C,KAAK;AACL,CAAC;AAdmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEN,sDAF2B;AAEtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,oDAAuB;AAElF;AAAC,MCZY,gCAAgC,GAAG,SAAS;AACzD,MAMa,kBAAmB,SAAQ,4BAAoC;AAC5E,IAKI,YAAY,MAAgC,EAAE,MAAiC;AACnF,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,gCAAgC,CAAC;AAC7E,QAKQ,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1D,KAAK;AACL,CAAC;AAVmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEH,+CAFqB;AAEnB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,gDAAkB;AAE7E;AAAC,MCbY,gCAAgC,GAAG,SAAS;AACzD,MAWa,kBAAsB,SAAQ,yBAA4B;AACvE,IAUI,YAAY,MAAmC,EAAE,MAAiC;AACtF;AACuB,QAAf,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,gCAAgC,CAAC;AAC7E,QAKQ,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC;AACjG,QAAQ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;AACnF,QAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,QAAQ,IAAI,CAAC,WAAW,SAAG,MAAM,CAAC,WAAW,mCAAI,EAAE,CAAC;AACpD,QAAQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,QAAQ,IAAI,CAAC,MAAM,SAAG,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC;AAC5C,KAAK;AACL,IACI,MAAM,CAAC,GAAG,OAAiB;AAAI,QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC9G,KAAK;AACL,CAAC;AAvBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACF,sDADqB;AACpB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACA,oDADiB;AAClB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACH,uDADsB;AACpB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACL,kDAD0B;AACtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEN,kDAF2B;AAEtB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,gDAAkB;AAE7E;AAAC,MCvBY,gCAAgC,GAAG,SAAS;AACzD,MASa,kBAAmB,SAAQ,4BAAoC;AAC5E,IAQI,YAAY,MAAgC,EAAE,MAAiC;AACnF,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,gCAAgC,CAAC;AAC7E,QAKQ,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1D,QAAQ,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;AACzD,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,KAAK;AACL,CAAC;AAhBmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACF,+CADoB;AACnB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACF,+CADoB;AACnB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACH,gDADsB;AACpB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAED,oDAFkB;AAElB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,gDAAkB;AAE7E;AAAC,MCpBY,gCAAgC,GAAG,SAAS;AACzD,MAOa,kBAAmB,SAAQ,wBAAwB;AAChE,IAMI,YAAY,MAAgC,EAAE,MAAiC;AACnF;AACmB,QAAX,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,gCAAgC,CAAC;AAC7E,QAKQ,IAAI,CAAC,QAAQ,SAAG,MAAM,CAAC,QAAQ,mCAAI,IAAI,CAAC;AAChD,QAAQ,IAAI,CAAC,OAAO,SAAG,MAAM,CAAC,OAAO,mCAAI,IAAI,CAAC;AAC9C,KAAK;AACL,CAAC;AAZmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACP,oDAD8B;AACxB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEP,mDAF6B;AAEvB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,gDAAkB;AAE7E;AAAC,MCdY,kCAAkC,GAAG,WAAW;AAC7D,MACa,+BAA+B,GAAG,OAAO;AACtD,MAAa,+BAA+B,GAAG,OAAO;AACtD,MAQa,oBAAqB,SAAQ,wBAAgC;AAC1E,IAOI,YAAY,MAAkC,EAAE,MAAiC;AACrF;AACe,QAAP,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,kCAAkC,CAAC;AAC/E,QAKQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;AAC7D,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,IAAI,SAAG,MAAM,CAAC,IAAI,mCAAI,+BAA+B,CAAC;AACnE,KAAK;AACL,CAAC;AAdmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACI,kDADQ;AACb;AAAa,IAA5B,YAAY,EAAE;AAAE;AACI,kDADQ;AACb;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEG,kDAFS;AAEb;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,kDAAoB;AAE/E;AAAC,MCpBY,oCAAoC,GAAG,aAAa;AACjE,MAOa,sBAAuB,SAAQ,uBAAuB;AACnE,IAMI,YAAY,MAAoC,EAAE,MAAiC;AACvF,QACQ,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,QAL6B,SAAI,GAAW,oCAAoC,CAAC;AACjF,QAKQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC7E,QAAQ,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;AACtF,KAAK;AACL,CAAC;AAZmB;AAAa,IAA5B,YAAY,EAAE;AAAE;AACA,wDADiB;AAClB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEJ,2DAFwB;AAErB;AAAa,IAA5B,YAAY,EAAE;AAAE;AAAsC,oDAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCACjF;AACA;AAAC,MCmCY,kBAAkB;AAC/B,IACI,YAAoB,gBAA6C,EAC7C,iBAA+C;AACvE,QAFwB,qBAAgB,GAAhB,gBAAgB,CAA6B;AAAC,QAC9C,sBAAiB,GAAjB,iBAAiB,CAA8B;AAAC,KACnE;AACL,IACY,4BAA4B,CAAC,mBAAmD,IAAI,EACvD,wBAAwD,IAAI,EAC5D,WAAmC,IAAI;AAAI,QAE5E,OAAO;AACf,YAAY,eAAe,EAAE,qBAAqB,KAAK,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,GAAG,IAAI;AACrI,YAAY,UAAU,EAAE,gBAAgB,KAAK,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,IAAI;AACjH,YAAY,QAAQ,EAAE,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,eAAe,CAAC,MAAM;AAC1H,SAAS,CAAC;AACV,KAAK;AACL,IACI,eAAe,CAAC,cAAqC;AAAI,QAErD,MAAM,QAAQ,GAAsB,EAAE,CAAC;AAC/C,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,eAAe,EACvG,cAAc,CAAC,QAAQ,CAAC,CAAC;AACrC,QACQ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;AAClE,YACY,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACzD,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,eAAe,EACjF,cAAc,CAAC,oBAAoB,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC9E,YACY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC;AAC5F,SAAS;AACT,QACQ,OAAO,IAAI,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAChD,KAAK;AACL,IACI,eAAe,CAAC,SAA2B,EAAE,UAAyC,IAAI,EAC1E,SAAiC,IAAI;AAAI,QAErD,MAAM,QAAQ,GAA8C,EAAE,CAAC;AACvE,QACQ,SAAS,CAAC,OAAO,CAAC,KAAK;AAC/B,YACY,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,YACY,QAAQ,KAAK,CAAC,IAAI;AAC9B,gBACgB,KAAK,+BAA+B;AACpD,oBACoB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAA8B,CAAC,CAAC;AAC9F,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,+BAA+B,CAAC;AACrD,gBAAgB,KAAK,wCAAwC;AAC7D,oBACoB,MAAM,UAAU,GAAG,KAA8B,CAAC;AACtE,oBAAoB,MAAM,YAAY,GAAG,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,UAAU,EACxE,UAAU,CAAC,eAAe,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;AACzE,oBACoB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AAC1G,oBAAoB,MAAM;AAC1B,gBACgB;AAChB,oBACoB,MAAM,YAAY,GAAG,KAA0C,CAAC;AACpF,oBAAoB,MAAM,YAAY,GAAG,EAAC,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,QAAQ,EAAC,CAAC;AACtG,oBAAoB,MAAM,cAAc,GAAG,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,UAAU,EAC5E,YAAY,CAAC,eAAe,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC7E,oBACoB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,WAAW,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AACvF,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QACQ,OAAO,IAAI,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAChD,KAAK;AACL,IACI,cAAc,CAAC,KAAsB;AAAI,QACrC,OAAO,KAAK,YAAY,0BAA0B,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAI,KAAiC,CAAC,EAAE,CAAC;AAC5H,KAAK;AACL,IACI,OAAO,CAAC,KAAsB,EAAE,OAAgB,KAAK;AAAI,QAErD,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAClD,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAClC,QACQ,OAAO,MAAM,EAAE;AACvB,YACY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;AACtD,YAAY,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACnC,SAAS;AACT,QACQ,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AAC5C,KAAK;AACL,IACI,mBAAmB,CAAC,SAAoB,EAAE,SAAgC,EAAE,GAAG,MAAwB;AAAI,QAEvG,IAAI,SAAS,YAAY,qBAAqB,EAAE;AACxD,YACY,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC,CAAC;AAC3F,SACS;AAAC,aAAK;AACf,YACY,MAAM,KAAK,GAAG,SAA6B,CAAC;AACxD,YAAY,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC;AACnF,SAAS;AACT,KAAK;AACL,IACI,oBAAoB,CAAC,KAAa,EAAE,IAAY,EAAE,SAAgC;AAAI,QAElF,IAAI,SAAS,YAAY,qBAAqB,EAAE;AACxD,YACY,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxC,SACS;AAAC,aAAK;AACf,YACY,MAAM,KAAK,GAAG,SAA6B,CAAC;AACxD,YAAY,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AACrE,SAAS;AACT,KAAK;AACL,IACI,sBAAsB,CAAC,KAAa,EAAE,SAAoB,EAAE,SAAgC,EACrE,GAAG,MAAwB;AAAI,QAElD,MAAM,MAAM,GAAG,SAAS,YAAY,qBAAqB,GAAG,SAAS,GAAG,IAAI,CAAC;AACrF,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC;AAC7E,QACQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,GAAG;AACvD,YACY,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7C,YACY,IAAI,SAAS,YAAY,qBAAqB,EAAE;AAC5D,gBAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;AACtD,aACa;AAAC,iBAAK;AACnB,gBAAiB,SAA8B,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;AAC/E,aAAa;AACb,YACY,SAAS,CAAC,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;AACrE,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,sBAAsB,CAAC,KAAa,EAAE,SAAoB,EAAE,SAAgC;AAAI,QAE5F,IAAI,SAAS,YAAY,qBAAqB,EAAE;AACxD,YACY,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7D,YAAY,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACpC,SACS;AAAC,aAAK;AACf,YACY,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACzD,YAAa,SAA8B,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC7D,SAAS;AACT,KAAK;AACL,IACI,iBAAiB,CAAC,SAAoB,EAAE,cAAqC;AAAI,QAE7E,MAAM,UAAU,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC;AACrD,QACQ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;AACjF,KAAK;AACL,IACI,oBAAoB,CAAC,KAAa,EAAE,SAAoB,EAAE,cAAqC;AAAI,QAE/F,MAAM,UAAU,GAAG,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC7D,QACQ,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;AAC1F,KAAK;AACL,IACI,kBAAkB,CAAC,KAAa,EAAE,IAAY,EAAE,SAAoB,EAAE,cAAqC;AAAI,QAE3G,MAAM,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC;AACtC,QAAQ,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC;AACjC,QACQ,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,cAAc,CAAC,IAAI,MAAM,QAAQ,IAAI,CAAC,IAAI,QAAQ,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE;AAC9G,YACY,MAAM,YAAY,GAAsB,EAAE,CAAC;AACvD,YACY,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,KAAK,GAAG,QAAQ,EAAE,CAAC,KAAK,MAAM,GAAG,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE;AAC3F,gBAAgB,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,aAAa;AACb,YACY,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,GAAG;AAClD,gBACgB,IAAI,QAAQ,CAAC;AAC7B,gBACgB,IAAI,MAAM,EAAE;AAC5B,oBAAoB,QAAQ,GAAG,GAAG,KAAK,CAAC,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;AACtE,iBACiB;AAAC,qBAAK;AACvB,oBAAoB,QAAQ,GAAG,GAAG,KAAK,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAC/F,iBAAiB;AACjB,gBACgB,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC5D,aAAa,CAAC,CAAC;AACf,YACY,cAAc,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAClD,SACS;AAAC,aAAK;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;AAC9G,SAAS;AACT,KAAK;AACL,IACI,oBAAoB,CAAC,KAAa,EAAE,SAAoB,EAAE,cAAqC;AAAI,QAE/F,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClC,QAAQ,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC1C,KAAK;AACL,IACI,cAAc,CAAC,SAAoB,EAAE,cAAqC;AAAI,QAE1E,SAAS,CAAC,KAAK,EAAE,CAAC;AAC1B,QAAQ,cAAc,CAAC,KAAK,EAAE,CAAC;AAC/B,KAAK;AACL,IACI,QAAQ,CAAC,EAAU,EAAE,SAA2B;AAAI,QAEhD,IAAI,MAAM,GAAG,IAAI,CAAC;AAC1B,QACQ,MAAM,UAAU,GAAG,CAAC,OAAe,EAAE,UAA4B;AAAO,YAEpE,KAAK,MAAM,YAAY,IAAI,UAAU,EAAE;AACnD,gBACgB,IAAI,YAAY,CAAC,EAAE,KAAK,OAAO,EAAE;AACjD,oBAAoB,MAAM,GAAG,YAAY,CAAC;AAC1C,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBACgB,IAAI,YAAY,YAAY,qBAAqB,EAAE;AACnE,oBAAoB,UAAU,CAAC,OAAO,EAAG,YAAsC,CAAC,KAAK,CAAC,CAAC;AACvF,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC;AACV,QACQ,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;AAClC,QACQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IACI,aAAa,CAAoC,EAAU,EAAE,SAA2B;AAAI,QACxF,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAM,CAAC;AACjD,KAAK;AACL,IACI,kBAAkB,CAA4B,KAA8B,EAAE,KAAgB;AAAI,QAC9F,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAM,CAAC;AAC9D,KAAK;AACL,IACI,aAAa,CAAC,aAAoC;AAAI,QAElD,IAAI,aAAa,YAAY,oBAAoB,EAAE;AAC3D,YACY,aAAa,CAAC,YAAY,EAAE,CAAC;AACzC,YAAY,aAAa,CAAC,aAAa,EAAE,CAAC;AAC1C,SACS;AAAC,aAAK;AACf,YACY,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE;AACjE,gBAAgB,IAAI,CAAC,YAAY,EAAE,CAAC;AACpC,gBAAgB,IAAI,CAAC,aAAa,EAAE,CAAC;AACrC,aAAa;AACb,SAAS;AACT,KAAK;AACL,IACI,QAAQ,CAAC,IAAuB;AAAI,QAEhC,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC;AACrF,QAAQ,MAAM,SAAS,GAAqB,EAAE,CAAC;AAC/C,QACQ,aAAa,CAAC,OAAO,CAAC,CAAC,KAAU;AACzC;AACmB,YAAP,MAAM,MAAM,SAAG,KAAK,CAAC,MAAM,mCAAI,IAAI,CAAC;AAChD,YACY,QAAQ,KAAK,CAAC,IAAI;AAC9B,gBACgB,KAAK,+BAA+B;AACpD,oBAAoB,MAAM,cAAc,GAAG,KAA8B,CAAC;AAC1E,oBACoB,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AAC9D,wBACwB,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAsC;AAC7F,4BAA4B,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAqB,CAAC;AACnG,yBAAyB,CAAC,CAAC;AAC3B,qBAAqB;AACrB,oBACoB,cAAc,CAAC,YAAY,GAAG;AAClD,wBAAwB,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;AAC5E,qBAAqB,CAAC;AACtB,oBACoB,SAAS,CAAC,IAAI,CAAC,IAAI,qBAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC7E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,kCAAkC;AACvD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC5E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,wCAAwC;AAC7D,oBAAoB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAA2B,CAAC;AACvF,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,yBAAyB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AACjF,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,qCAAqC;AAC1D,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,uBAAuB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC/E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,oCAAoC;AACzD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,sBAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC9E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,gCAAgC;AACrD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,qCAAqC;AAC1D,oBAAoB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;AACvC,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,sBAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC9E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,+BAA+B;AACpD,oBAAoB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7D,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,qBAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC7E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,+BAA+B;AACpD,oBAAoB,MAAM,UAAU,GAAG,KAA0B,CAAC;AAClE,oBACoB,IAAI,UAAU,CAAC,IAAI,KAAK,IAAI,EAAE;AAClD,wBAAwB,IAAI,EAAE,UAAU,CAAC,IAAI,YAAY,QAAQ,CAAC,EAAE;AACpE,4BAA4B,UAAU,CAAC,IAAI,GAAG,cAAc,CAAC,UAAU,CAAC,IAAc,CAAC,CAAC;AACxF,yBAAyB;AACzB,qBAAqB;AACrB,oBACoB,SAAS,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AACzE,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,qCAAqC;AAC1D,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,sBAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC9E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,gCAAgC;AACrD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,gCAAgC;AACrD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,gCAAgC;AACrD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,gCAAgC;AACrD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,kCAAkC;AACvD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC5E,oBAAoB,MAAM;AAC1B,gBACgB,KAAK,oCAAoC;AACzD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,sBAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAC9E,oBAAoB,MAAM;AAC1B,gBACgB;AAChB,oBAAoB,MAAM,IAAI,KAAK,CAAC,mEAAmE,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;AACpH,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QACQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL;wMAAC;AACD,mQAjXK;AAAC;EAHL,UAAU,SAAC,kBACR,vCAIW,YAPN,2BAA2B;MAGtB,EAAE,MAAM,cACrB,5BAJuC,YAP/B,4BAA4B;AAAG;;;;;;6HAAE;AAAC;AAAC,MCnC/B,cAAc,GAAG,WAAW;AACzC,MAAa,aAAa,GAAG,UAAU;AACvC,MAAa,YAAY,GAAG,SAAS;AACrC,MAAa,cAAc,GAAG,WAAW;AACzC,MAAa,cAAc,GAAG,WAAW;AACzC,MAAa,aAAa,GAAG,UAAU;AACvC,MACa,YAAY,GAAG,MAAM;AAClC,MAAa,WAAW,GAAG,KAAK;AAChC,MASa,gBAAgB,GAAG,IAAI,cAAc,CAA4B,kBAAkB,EAAE;AAClG,MACa,gBAAgB,GAA8B;AAC3D,IACI,KAAK,EAAE,cAAc;AACzB,IAAI,aAAa,EAAE,aAAa;AAChC,IAAI,QAAQ,CAAC,QAAQ,EAAE,KAAK;AAC5B,QAAQ,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAClC,KAAK;AACL,EAAE;AACF,MACa,cAAc,GAA8B;AACzD,IACI,KAAK,EAAE,YAAY;AACvB,IAAI,aAAa,EAAE,aAAa;AAChC,IAAI,QAAQ,CAAC,QAAQ,EAAE,KAAK;AAC5B,QAAQ,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC,KAAK;AACL,EAAE;AACF,MACa,gBAAgB,GAA8B;AAC3D,IACI,KAAK,EAAE,cAAc;AACzB,IAAI,aAAa,EAAE,cAAc;AACjC,IAAI,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ;AAC/C,QACQ,IAAI,gBAAgB,GAAG,IAAI,CAAC;AACpC,QACQ,IAAI,QAAQ,EAAE;AACtB,YACY,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,mCAAO,KAAK,CAAC,UAAU,KAAE,QAAQ,EAAE,IAAI,MAAI,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;AACrH,SACS;AAAC,aAAK;AACf,YACY,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;AAC5C,gBACgB,OAAQ,KAAK,CAAC,UAAwD,CAAC,QAAQ,CAAC;AAChG,gBAAgB,gBAAgB,qBAAO,KAAK,CAAC,UAAU,CAAC,CAAC;AACzD,aAAa;AACb,SAAS;AACT,QACQ,QAAQ,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACtG,QAAQ,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,aAAa,EAAE,CAAC;AACzD,KAAK;AACL,EAAE;AACF,MACa,yBAAyB,GAAkB;AACxD,IAAI,OAAO,EAAE,gBAAgB;AAC7B,IAAI,QAAQ,EAAE,gBAAgB;AAC9B,IAAI,KAAK,EAAE,IAAI;AACf,EAAE;AACF,MACa,uBAAuB,GAAkB;AACtD,IAAI,OAAO,EAAE,gBAAgB;AAC7B,IAAI,QAAQ,EAAE,cAAc;AAC5B,IAAI,KAAK,EAAE,IAAI;AACf,EAAE;AACF,MACa,yBAAyB,GAAkB;AACxD,IAAI,OAAO,EAAE,gBAAgB;AAC7B,IAAI,QAAQ,EAAE,gBAAgB;AAC9B,IAAI,KAAK,EAAE,IAAI;AACf,EAAE;AACF,MACa,yBAAyB,GAAG,CAAC,yBAAyB,EAAE,uBAAuB,EAAE,yBAAyB;AACvH;AAAC,MCzEY,0BAA0B;AACvC,IACI,YAA0D,QAAqC,EAC3E,QAAkB;AAC1C,QAF8D,aAAQ,GAAR,QAAQ,CAA6B;AAAC,QAC5E,aAAQ,GAAR,QAAQ,CAAU;AAAC,KACtC;AACL,IACI,sBAAsB,CAAC,KAA8B,EAAE,KAAgB;AAAI,QAEvE,MAAM,gBAAgB,GAAG,CAAC,QAAQ,EAAE,SAAS;AACrD;AACmB,YAAP,MAAM,IAAI,SAAG,SAAS,CAAC,QAAQ,mCAAI,SAAS,CAAC,EAAE,CAAC;AAC5D,YACY,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAChD,gBACgB,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AAClH,gBACgB,OAAO,YAAY,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,mCAAmC,SAAS,CAAC,EAAE,iBAAiB,CAAC,CAAC;AAC3J,aAAa;AACb,YACY,OAAO,QAAQ,CAAC;AAC5B,SAAS,CAAC;AACV,QACQ,MAAM,eAAe,GAAG,CAAC,QAAQ,EAAE,QAAQ,KAAK,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;AACzG,QACQ,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;AAC3D,KAAK;AACL,IACI,qBAAqB,CAAC,SAAuC,EAAE,OAAkC;AAAI,QACjG,OAAO,SAAS,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3G,KAAK;AACL,IACI,gBAAgB,CAAC,QAAoC,EAAE,mBAA+C,EAAE,OAAkC;AAAI;AAE5I,QAAE,MAAM,QAAQ,SAAG,QAAQ,CAAC,QAAQ,mCAAI,WAAW,CAAC;AAC1D,QACQ,OAAO,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,iBAAiB,EAAE,SAAS,EAAE,KAAK;AACxE;AACmB,YAAP,MAAM,IAAI,SAAG,SAAS,CAAC,QAAQ,mCAAI,SAAS,CAAC,EAAE,CAAC;AAC5D,YACY,IAAI,kBAAkB,CAAC;AACnC,YACY,KAAK,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE;AAC9E,gBAAgB,IAAI,GAAG,KAAK,IAAI,EAAE;AAClC,oBAAoB,kBAAkB,GAAG,OAAO,CAAC;AACjD,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,aAAa;AACb,YACY,IAAI,kBAAkB,IAAI,QAAQ,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE;AACxE,gBACgB,IAAI,KAAK,GAAG,CAAC,IAAI,QAAQ,KAAK,YAAY,IAAI,CAAC,iBAAiB,EAAE;AAClF,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,gBACgB,IAAI,KAAK,GAAG,CAAC,IAAI,QAAQ,KAAK,WAAW,IAAI,iBAAiB,EAAE;AAChF,oBAAoB,OAAO,IAAI,CAAC;AAChC,iBAAiB;AACjB,gBACgB,OAAO,SAAS,CAAC,KAAK,KAAK,kBAAkB,CAAC,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK,kBAAkB,CAAC,MAAM,CAAC;AACtH,aAAa;AACb,YACY,IAAI,kBAAkB,IAAI,QAAQ,CAAC,KAAK,KAAK,OAAO,CAAC,aAAa,EAAE;AAChF,gBACgB,IAAI,KAAK,GAAG,CAAC,IAAI,QAAQ,KAAK,YAAY,IAAI,iBAAiB,EAAE;AACjF,oBAAoB,OAAO,IAAI,CAAC;AAChC,iBAAiB;AACjB,gBACgB,IAAI,KAAK,GAAG,CAAC,IAAI,QAAQ,KAAK,WAAW,IAAI,CAAC,iBAAiB,EAAE;AACjF,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,gBACgB,OAAO,EAAE,SAAS,CAAC,KAAK,KAAK,kBAAkB,CAAC,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACzH,aAAa;AACb,YACY,OAAO,KAAK,CAAC;AACzB,SACS,EAAE,KAAK,CAAC,CAAC;AAClB,KAAK;AACL,IACI,kBAAkB,CAAC,KAA8B,EAAE,KAAgB,EAAE,OAAoB;AAAI,QAEzF,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9E,QAAQ,MAAM,aAAa,GAAmB,EAAE,CAAC;AACjD,QACQ,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,cAAc;AACjE,YACY,MAAM,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACnG,YAAY,MAAM,aAAa,GAAG,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;AACtG,YACY,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC;AAC5E,gBACgB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO;AAC7C,oBACoB,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC1F,oBACoB,IAAI,QAAQ,KAAK,SAAS,EAAE;AAChD,wBACwB,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC;AACvG,wBAAwB,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClF,qBAAqB;AACrB,iBAAiB,CAAC,CAAC;AACnB,aAAa,CAAC,CAAC,CAAC;AAChB,SAAS,CAAC,CAAC;AACX,QACQ,OAAO,aAAa,CAAC;AAC7B,KAAK;AACL;2MAAC;AACD,uQA3GK;AAAC;EAHL,UAAU,SAAC,kBACR,UAAU,EAAE,MAAM,cACrB,vEAGc,wCAAE,QAAQ,YAAI,MAAM,SAAC,gBAAgB;AAAS,YApBhC,QAAQ;AAAG;;;;;;;;;;;6DAAE;AAAC;AAAC,MCqCtB,oCAAoC;AAAG,IA2BzD,YAAgC,iBAAoC,EACpC,wBAAkD,EAClD,aAAuC,EACvC,iBAA+C,EAC/C,gBAA6C,EAC7C,eAA2C;AAC/E,QANoC,sBAAiB,GAAjB,iBAAiB,CAAmB;AAAC,QACrC,6BAAwB,GAAxB,wBAAwB,CAA0B;AAAC,QACnD,kBAAa,GAAb,aAAa,CAA0B;AAAC,QACxC,sBAAiB,GAAjB,iBAAiB,CAA8B;AAAC,QAChD,qBAAgB,GAAhB,gBAAgB,CAA6B;AAAC,QAC9C,oBAAe,GAAf,eAAe,CAA4B;AAAC,QA9BpE,cAAS,GAAG,KAAK,CAAC;AAC9B,QACI,YAAO,GAAsC,IAAI,CAAC;AACtD,QAkBc,2BAAsB,GAAmB,EAAE,CAAC;AAC1D,QACc,kBAAa,GAAmB,EAAE,CAAC;AACjD,KAOK;AACL,IACI,WAAW,CAAC,OAAsB;AACtC,QACQ,MAAM,WAAW,GAAI,OAAwC,CAAC,KAAK,CAAC;AAC5E,QAAQ,MAAM,YAAY,GAAI,OAAyC,CAAC,MAAM,CAAC;AAC/E,QAAQ,MAAM,WAAW,GAAI,OAAwC,CAAC,KAAK,CAAC;AAC5E,QACQ,IAAI,YAAY,IAAI,WAAW,EAAE;AACzC,YAAY,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACzC,SAAS;AACT,QACQ,IAAI,WAAW,EAAE;AACzB,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC;AACjC,SAAS;AACT,QACQ,IAAI,WAAW,IAAI,WAAW,EAAE;AACxC,YAAY,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACxC,SAAS;AACT,KAAK;AACL,IACI,WAAW;AACf,QACQ,IAAI,CAAC,2BAA2B,EAAE,CAAC;AAC3C,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,KAAK;AACL,IAGI,IAAI,EAAE;AAAK,QACP,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3D,KAAK;AACL,IACI,IAAI,QAAQ;AAAK,QACb,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL,IACI,IAAI,SAAS;AAAK,QACd,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;AACpC,KAAK;AACL,IACI,IAAI,OAAO;AAAK,QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AAClC,KAAK;AACL,IACI,IAAI,aAAa;AAAK,QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACpF,KAAK;AACL,IACI,IAAI,iBAAiB;AAAK,QACtB,OAAO,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjG,KAAK;AACL,IACI,IAAI,QAAQ;AAAK,QACb,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC1C,KAAK;AACL,IACI,IAAI,OAAO;AAAK,QACZ,OAAO,QAAQ,CAAE,IAAI,CAAC,KAA2C,CAAC,IAAI,CAAC,CAAC;AAChF,KAAK;AACL,IACI,IAAI,IAAI;AAAK;AAChB,QAAO,aAAQ,IAAI,CAAC,KAA2C,CAAC,IAAI,mCAAI,IAAI,CAAC;AAC9E,KAAK;AACL,IACI,IAAI,UAAU;AAAK,QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,kCAAkC,CAAC;AACtE,KAAK;AACL,IACI,IAAI,SAAS;AAAK,QACd,OAAO,IAAI,CAAC,iBAAiB,KAAK,SAAS,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC;AACxG,KAAK;AACL,IACI,IAAI,aAAa;AAAK,QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,+BAA+B;AAClE,YAAY,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;AACxF,KAAK;AACL,IACI,IAAI,WAAW;AAAK,QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,+BAA+B;AAClE,YAAY,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;AACtF,KAAK;AACL,IACI,QAAQ,CAAC,OAAwC,EAAE,KAAoC;AAAI,QACvF,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC/E,KAAK;AACL,IACI,YAAY;AAAK,QAEb,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;AAC9C,QACQ,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;AAC1E,QACQ,IAAI,SAAS,KAAK,SAAS,YAAY,yBAAyB,IAAI,SAAS,YAAY,yBAAyB,CAAC,EAAE;AAC7H,YAAY,SAAS,CAAC,YAAY,EAAE,CAAC;AACrC,SAAS;AACT,KAAK;AACL,IACc,0BAA0B;AAAK,QAErC,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AACjD,QACQ,IAAI,aAAa,KAAK,IAAI,EAAE;AACpC,YACY,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;AAC1G,YACY,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;AACnD,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;AACjG,YACY,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;AACzD,YACY,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/C,YAAY,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzC,YAAY,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;AAClD,YAAY,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzC,YACY,IAAI,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAgB,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACrD,aAAa;AACb,YACY,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAW,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7G,YAAY,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACjH,YAAY,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,MAAW,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/G,YACY,IAAI,SAAS,CAAC,WAAW,KAAK,SAAS,EAAE;AACrD,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAC5B,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAW,KAAK,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAClG,aAAa;AACb,YACY,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACpE,SAAS;AACT,KAAK;AACL,IACc,2BAA2B;AAAK,QAEtC,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,YACY,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,YAAY,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;AAC5F,YAAY,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;AAC7C,YACY,IAAI,CAAC,iCAAiC,EAAE,CAAC;AACrD,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;AACxC,SAAS;AACT,KAAK;AACL,IACc,6BAA6B,CAAC,MAAW,EAAE,IAAY;AAAI,QACjE,OAAO,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAC,CAAC;AAClH,KAAK;AACL,IACI,WAAW;AAAK;AAEiE;AAC/C,QAE9B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/E,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,KAAK;AACL,IACI,qBAAqB,CAAC,KAAU;AAAI,QAChC,IAAI,IAAI,CAAC,KAAK,YAAY,4BAA4B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;AAC9F,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACrC,SAAS;AACT,KAAK;AACL,IACI,mBAAmB,CAAC,KAAU;AAAI,QAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;AAC1C,YAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzC,SAAS;AACT,KAAK;AACL,IACI,sBAAsB,CAAC,QAAiB;AAAI,QACxC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;AAClE,KAAK;AACL,IACI,qBAAqB;AAAK;AACpB,QAAF,IAAI,CAAC,aAAa,SAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,mCAAI,IAAI,CAAC,KAAK,CAAC,MAAkC,CAAC;AACtI,QAAQ,IAAI,CAAC,KAAK,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;AAC/I,KAAK;AACL,IACI,aAAa;AAAK,QACd,IAAI,CAAC,2BAA2B,EAAE,CAAC;AAC3C,QAAQ,IAAI,CAAC,0BAA0B,EAAE,CAAC;AAC1C,KAAK;AACL,IACI,oBAAoB;AAAK,QAErB,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YACY,IAAI,CAAC,WAAW,EAAE,CAAC;AAC/B,YACY,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,gBACgB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAgB,CAAC;AAC5E,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzH,aAAa;AACb,YACY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvH,YACY,IAAI,IAAI,CAAC,KAAK,YAAY,4BAA4B,EAAE;AACpE,gBACgB,MAAM,KAAK,GAAG,IAAI,CAAC,KAA0C,CAAC;AAC9E,gBACgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChH,aAAa;AACb,YACY,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACjD,gBACgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1H,aAAa;AACb,SAAS;AACT,KAAK;AACL,IACI,QAAQ,CAAC,MAA6C;AAAI;AAErD,QAAD,IAAI,MAAM,YAAY,KAAK,EAAE;AACrC,YACY,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,+BAA+B,EAAE;AACrE,gBACgB,MAAM,KAAK,GAAG,IAAI,CAAC,KAA0B,CAAC;AAC9D,gBACgB,IAAI,KAAK,CAAC,SAAS,KAAK,oCAAoC,EAAE;AAC9E,oBACoB,MAAM,YAAY,SAAQ,MAAM,CAAC,MAAM,mCAAI,MAAM,CAAC,UAAU,CAAC;AACjF,oBACoB,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,KAAiB,CAAC;AACjE,iBAAiB;AACjB,aAAa;AACb,YACY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7G,SACS;AAAC,aAAK,IAAI,yBAAyB,CAAC,MAAM,CAAC,EAAE;AACtD,YACY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrC,SACS;AAAC,aAAK;AACf,YACY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7G,SAAS;AACT,KAAK;AACL,IACI,MAAM,CAAC,MAAkD;AAAI,QAEzD,IAAI,yBAAyB,CAAC,MAAM,CAAC,EAAE;AAC/C,YACY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,SACS;AAAC,aAAK;AACf,YACY,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACnC,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,2BAA2B,CAAC,IAAI,CAAC,CAAC,CAAC;AACzG,SAAS;AACT,KAAK;AACL,IACI,OAAO,CAAC,MAAkD;AAAI,QAE1D,IAAI,yBAAyB,CAAC,MAAM,CAAC,EAAE;AAC/C,YACY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,SACS;AAAC,aAAK;AACf,YACY,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAClC,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,2BAA2B,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3G,SAAS;AACT,KAAK;AACL,IACI,aAAa,CAAC,MAA+D;AAAI,QAE7E,MAAM,OAAO,GAAG,IAAI,CAAC,WAAoD,CAAC;AAClF,QACQ,IAAI,yBAAyB,CAAC,MAAM,CAAC,EAAE;AAC/C,YACY,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,SACS;AAAC,aAAK;AACf,YACY,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;AACzG,SAAS;AACT,KAAK;AACL,IACY,+BAA+B,CAAC,GAAqC;AAAI,QAE7E,IAAI,IAAI,CAAC,OAAO,YAAY,0BAA0B,EAAE;AAChE,YACY,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3F,SACS;AAAC,aAAK;AACf,YAAY,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACvE,SAAS;AACT,KAAK;AACL,IACY,iCAAiC;AAAK,QAE1C,IAAI,IAAI,CAAC,OAAO,YAAY,0BAA0B,EAAE;AAChE,YACY,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3F,SACS;AAAC,aAAK;AACf,YAAY,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACvE,SAAS;AACT,KAAK;AACL;gEA/UC,SAAS;8JACR;AAAC;AAA8D,YArCxD,iBAAiB;AAAI,YAAF,wBAAwB;AAAI,YA4B5B,wBAAwB;AAAI,YAC/C,4BAA4B;AAAI,YAChC,2BAA2B;AAAI,YAE/B,0BAA0B;AAAG;;;sRAAE;AAAC;AAAC,MCvBpB,uCAAwC,SAAQ,2BAA2B;AAC/F,IAME,YAAgC,aAAuC,EACvC,iBAA+C;AACnF,QAAQ,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;AAChD,QAHoC,kBAAa,GAAb,aAAa,CAA0B;AAAC,QACxC,sBAAiB,GAAjB,iBAAiB,CAA8B;AAAC,KAE/E;AACL,IACI,eAAe;AACnB,QACQ,IAAI,CAAC,aAAa;AAC1B,aAAa,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;AAC/D,aAAa,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9D,KAAK;AACL,IAKI,YAAY,CAAC,QAAkC;AACnD,QACQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AAC/E,YACY,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAW,CAAC;AAChF,YACY,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAClE,SAAS;AACT,KAAK;AACL;mEAjCC,SAAS;0KACR;AAAC;AAAiE,YAJ3D,wBAAwB;AAAI,YAC5B,4BAA4B;AAAG;;;0HAAE;AAAC;AAAC,MCA/B,oBAAoB;AAAG,IAIhC,YAAoB,UAAsB,EAAU,QAAmB;AAAI,QAAvD,eAAU,GAAV,UAAU,CAAY;AAAC,QAAS,aAAQ,GAAR,QAAQ,CAAW;AAAC,KAAG;AAC/E,IACI,eAAe;AACnB,QACQ,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACnC,YAAY,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,MAAgB,CAAC,CAAC;AACrG,SAAS;AACT,KAAK;AACL;gDAfC,SAAS,SAAC,kBACP,QAAQ,EAAE,eAAe,cAC5B;0KACI;AAAC;AAA8C,YANhC,UAAU;AAAI,YAAK,SAAS;AAAG;AAAG;AAChD,qBAOD,KAAK,SAAC,aAAa;AAAM;;;;;;;;;oBAAE;AAAC;AAAC,MCRrB,gBAAgB,GAAG,MAAM;AACtC,MAAa,eAAe,GAAG,KAAK;AACpC,MACa,sBAAsB,GAAG,UAAU;AAChD,MAAa,uBAAuB,GAAG,WAAW;AAClD,MACa,uBAAuB,GAAG,CAAC,sBAAsB,EAAE,uBAAuB,EAAE;AACzF,MACa,mBAAmB,GAAG,OAAO;AAC1C,MAAa,mBAAmB,GAAG,OAAO;AAC1C,MAAa,qBAAqB,GAAG,SAAS;AAC9C,MAAa,kBAAkB,GAAG,MAAM;AACxC,MAAa,oBAAoB,GAAG,QAAQ;AAC5C,MACa,uBAAuB,GAAG;AACvC,IAAI,kBAAkB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,mBAAmB;AAC7G,EAAE;AACF,MACa,6BAA6B,GAAG,iBAAiB;AAC9D,MAAa,6BAA6B,GAAG,gBAAgB;AAC7D,MAAa,6BAA6B,GAAG,gBAAgB;AAC7D,MAAa,6BAA6B,GAAG,gBAAgB;AAC7D,MAAa,8BAA8B,GAAG,iBAAiB;AAC/D,MAAa,8BAA8B,GAAG,iBAAiB;AAC/D,MAAa,8BAA8B,GAAG,iBAAiB;AAC/D,MAAa,8BAA8B,GAAG,iBAAiB;AAC/D,MACa,mBAAmB,GAAG,OAAO;AAC1C,MAAa,+BAA+B,GAAG,mBAAmB;AAClE,MAAa,yBAAyB,GAAG,aAAa;AACtD,MAAa,8BAA8B,GAAG,kBAAkB;AAChE,MAAa,0BAA0B,GAAG,cAAc;AACxD,MAAa,+BAA+B,GAAG,mBAAmB;AAClE,MAAa,uBAAuB,GAAG,WAAW;AAClD,MAAa,uBAAuB,GAAG,WAAW;AAClD,MACa,2BAA2B,GAAG,eAAe;AAC1D,MAAa,+BAA+B,GAAG,mBAAmB;AAClE,MACa,iCAAiC,GAAG,qBAAqB;AACtE,MAAa,2BAA2B,GAAG,eAAe;AAC1D,MACa,sBAAsB,GAAG,UAAU;AAChD,MAAa,2BAA2B,GAAG,eAAe;AAC1D,MAAa,0BAA0B,GAAG,cAAc;AACxD,MACa,sBAAsB,GAAG,UAAU;AAChD,MAAa,4BAA4B,GAAG,gBAAgB;AAC5D,MAAa,iCAAiC,GAAG,qBAAqB;AACtE,MAAa,6BAA6B,GAAG,iBAAiB;AAC9D,MAAa,wBAAwB,GAAG,YAAY;AACpD,MAAa,qBAAqB,GAAG,SAAS;AAC9C,MAAa,2BAA2B,GAAG,eAAe;AAC1D,MAAa,0BAA0B,GAAG,cAAc;AACxD,MAAa,qBAAqB,GAAG,SAAS;AAC9C,MAAa,sBAAsB,GAAG,UAAU;AAChD,MACa,mCAAmC,GAAG,uBAAuB;AAC1E,MAAa,iCAAiC,GAAG,qBAAqB;AACtE,MACa,uBAAuB,GAAG,WAAW;AAClD,MACa,mBAAmB,GAAG,OAAO;AAC1C,MAAa,uBAAuB,GAAG,WAAW;AAClD,MAAa,yBAAyB,GAAG,aAAa;AACtD,MAAa,wBAAwB,GAAG,YAAY;AACpD,MACa,kBAAkB,GAAG,MAAM;AACxC,MACa,kBAAkB,GAAG,MAAM;AACxC,MACa,oBAAoB,GAAG,QAAQ;AAC5C,MACa,eAAe,GAAG;AAC/B,IAAI,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B;AAC/F,IAAI,6BAA6B,EAAE,8BAA8B,EAAE,8BAA8B;AACjG,IAAI,8BAA8B,EAAE,8BAA8B,EAAE,mBAAmB;AACvF,IAAI,+BAA+B,EAAE,yBAAyB,EAAE,8BAA8B;AAC9F,IAAI,0BAA0B,EAAE,+BAA+B,EAAE,uBAAuB,EAAE,uBAAuB;AACjH,IAAI,2BAA2B,EAAE,+BAA+B,EAAE,iCAAiC;AACnG,IAAI,2BAA2B,EAAE,sBAAsB,EAAE,2BAA2B,EAAE,0BAA0B;AAChH,IAAI,sBAAsB,EAAE,4BAA4B,EAAE,iCAAiC;AAC3F,IAAI,6BAA6B,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,2BAA2B;AAC/G,IAAI,0BAA0B,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,mCAAmC;AAClH,IAAI,iCAAiC,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,uBAAuB;AAC5G,IAAI,yBAAyB,EAAE,wBAAwB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,oBAAoB;AACrH,EAAE;AACF,MACa,kBAAkB,GAAG,MAAM;AACxC,MAAa,+BAA+B,GAAG,mBAAmB;AAClE,MAAa,2BAA2B,GAAG,eAAe;AAC1D,MAAa,4BAA4B,GAAG,gBAAgB;AAC5D,MAAa,wBAAwB,GAAG,YAAY;AACpD,MAAa,+BAA+B,GAAG,mBAAmB;AAClE,MAAa,+BAA+B,GAAG,mBAAmB;AAClE,MAAa,kCAAkC,GAAG,gBAAgB;AAClE,MAAa,oBAAoB,GAAG,QAAQ;AAC5C,MAAa,mBAAmB,GAAG,OAAO;AAC1C,MACa,uBAAuB,GAAG;AACvC,IAAI,kBAAkB,EAAE,+BAA+B,EAAE,2BAA2B,EAAE,4BAA4B;AAClH,IAAI,wBAAwB,EAAE,+BAA+B,EAAE,+BAA+B;AAC9F,IAAI,kCAAkC,EAAE,oBAAoB,EAAE,mBAAmB;AACjF,EAAE;AACF,SACgB,cAAc,CAAC,KAAa;AAAI,IAC5C,OAAO,uBAAuB,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,CAAC;AACD,SACgB,cAAc,CAAC,KAAa;AAAI,IAC5C,OAAO,uBAAuB,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,CAAC;AACD,SACgB,cAAc,CAAC,KAAa;AAAI,IAC5C,OAAO,uBAAuB,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,CAAC;AACD,SACgB,OAAO,CAAC,KAAa;AAAI,IACrC,OAAO,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/C,CAAC;AACD,SACgB,cAAc,CAAC,KAAa;AAAI,IAC5C,OAAO,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACxC,CAAC;AACD,SACgB,QAAQ,CAAC,MAAc;AAAI,IAEvC,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,YAAoB,KAAK,GAAG,KAAK,IAAI,YAAY,EAAE,CAAC;AAC7F,IAAI,MAAM,aAAa,GAAG,uBAAuB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACvE,IAAI,MAAM,aAAa,GAAG,uBAAuB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACvE,IAAI,MAAM,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACxD,IAAI,MAAM,aAAa,GAAG,uBAAuB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACvE,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,2BAA2B,aAAa,cAAc,MAAM,UAAU,aAAa,cAAc,aAAa,MAAM,CAAC,CAAC;AACnJ,IACI,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9B;AACA;AAAC,MC/GY,sBAAsB;AACnC;AACmB,IACf,OAAO,OAAO;AAAK,QAEf,OAAO;AACf,YAAY,QAAQ,EAAE,sBAAsB;AAC5C,YAAY,SAAS,EAAE;AACvB,gBAAgB,kBAAkB;AAClC,gBAAgB,wBAAwB;AACxC,gBAAgB,4BAA4B;AAC5C,gBAAgB,2BAA2B;AAC3C,gBAAgB,0BAA0B;AAC1C,aAAa;AACb,SAAS,CAAC;AACV,KAAK;AACL;kDA9BC,QAAQ,SAAC,kBACN;GAAO,EAAE,sBACL,YAAY,sBACZ,mBAAmB,kBACtB,kBACD,YAAY,EAAE,sBACV;GAAoB,sBACpB;uBAAwB;SAC3B;YACD,OAAO,EAAE,sBACL,oBAAoB,sBACpB,wBAAwB,kBAC3B,cACJ;;;;;;;;;;;;;;;;;;0BACI;AAAC;ACzBN;AACA;AACA;AACA;AACA;AAC4pJ","sourcesContent":["export function isBoolean(value: any): value is boolean {\n    return typeof value === \"boolean\";\n}\n\n// tslint:disable-next-line:ban-types\nexport function isFunction(value: any): value is Function {\n    return typeof value === \"function\";\n}\n\nexport function isNumber(value: any): value is number {\n    return typeof value === \"number\";\n}\n\nexport function isObject(value: any): value is object {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\";\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\nimport { DynamicFormControl } from \"./dynamic-form-control-interface\";\nimport { DynamicFormControlCustomEvent } from \"./dynamic-form-control-event\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport {\n    DynamicFormControlLayout,\n    DynamicFormControlLayoutContext,\n    DynamicFormControlLayoutPlace\n} from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicFormValidationService } from \"../service/dynamic-form-validation.service\";\nimport {\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormControlTemplates\n} from \"../service/dynamic-form-layout.service\";\nimport { isString } from \"../utils/core.utils\";\n\nexport abstract class DynamicFormControlComponent implements DynamicFormControl {\n\n    private _hasFocus = false;\n\n    formLayout: DynamicFormLayout;\n    group: FormGroup;\n    layout: DynamicFormControlLayout;\n    model: DynamicFormControlModel;\n    templates: DynamicFormControlTemplates;\n\n    blur: EventEmitter<any>;\n    change: EventEmitter<any>;\n    customEvent: EventEmitter<DynamicFormControlCustomEvent>;\n    focus: EventEmitter<any>;\n\n    protected constructor(protected layoutService: DynamicFormLayoutService,\n                          protected validationService: DynamicFormValidationService) {\n    }\n\n    get control(): AbstractControl | never {\n\n        const control = this.group.get(this.model.id);\n\n        if (control === null) {\n            throw new Error(`form group does not contain an abstract control with id ${this.model.id}`);\n        }\n\n        return control as AbstractControl;\n    }\n\n    get id(): string {\n        return this.layoutService.getElementId(this.model);\n    }\n\n    get hasFocus(): boolean {\n        return this._hasFocus;\n    }\n\n    get isInvalid(): boolean {\n        return this.control.invalid;\n    }\n\n    get isValid(): boolean {\n        return this.control.valid;\n    }\n\n    get errorMessages(): string[] {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n\n    get showErrorMessages(): boolean {\n        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n    }\n\n    getClass(context: DynamicFormControlLayoutContext, place: DynamicFormControlLayoutPlace,\n             model: DynamicFormControlModel = this.model): string {\n\n        const controlLayout = model === this.model ? this.layout :\n            this.layoutService.findByModel(model, this.formLayout) ?? model.layout as DynamicFormControlLayout;\n\n        return this.layoutService.getClass(controlLayout, context, place);\n    }\n\n    onBlur($event: any) {\n\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n\n        this._hasFocus = false;\n        this.blur.emit($event);\n    }\n\n    onChange($event: any) {\n\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n\n        this.change.emit($event);\n    }\n\n    onCustomEvent($event: any, type: string | null = null, bypass: boolean = false) {\n\n        if (bypass) {\n\n            this.customEvent.emit($event);\n\n        } else if (isString(type)) {\n\n            this.customEvent.emit({customEvent: $event, customEventType: type});\n        }\n    }\n\n    onFocus($event: any) {\n\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n\n        this._hasFocus = true;\n        this.focus.emit($event);\n    }\n}\n","import { QueryList } from \"@angular/core\";\nimport { FormArray } from \"@angular/forms\";\nimport { DynamicFormControlComponent } from \"./dynamic-form-control.component\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormArrayModel } from \"../model/form-array/dynamic-form-array.model\";\nimport { DynamicFormControlContainerComponent } from \"./dynamic-form-control-container.component\";\n\nexport abstract class DynamicFormArrayComponent extends DynamicFormControlComponent {\n\n    components: QueryList<DynamicFormControlContainerComponent>;\n    model: DynamicFormArrayModel;\n    templates: QueryList<DynamicTemplateDirective> | undefined;\n\n    get array(): FormArray {\n        return this.control as FormArray;\n    }\n\n    get startTemplate(): DynamicTemplateDirective | undefined {\n        return this.layoutService.getStartTemplate(this.model, this.templates);\n    }\n\n    get endTemplate(): DynamicTemplateDirective | undefined {\n        return this.layoutService.getEndTemplate(this.model, this.templates);\n    }\n\n    markForCheck() {\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n}\n","import { DynamicFormControlComponent } from \"./dynamic-form-control.component\";\nimport { DynamicFormGroupModel } from \"../model/form-group/dynamic-form-group.model\";\nimport { QueryList } from \"@angular/core\";\nimport { DynamicFormControlContainerComponent } from \"./dynamic-form-control-container.component\";\n\nexport abstract class DynamicFormGroupComponent extends DynamicFormControlComponent {\n\n    components: QueryList<DynamicFormControlContainerComponent>;\n    model: DynamicFormGroupModel;\n\n    markForCheck() {\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n}\n","import { ComponentRef, Inject, Injectable, InjectionToken, Optional, Type } from \"@angular/core\";\nimport { DynamicFormControl } from \"../component/dynamic-form-control-interface\";\nimport { DynamicFormComponent } from \"../component/dynamic-form.component\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { isFunction, isNumber } from \"../utils/core.utils\";\n\nexport type DynamicFormControlRef = ComponentRef<DynamicFormControl>;\nexport type DynamicFormControlMapFn = (model: DynamicFormControlModel) => Type<DynamicFormControl> | null;\n\nexport const DYNAMIC_FORM_CONTROL_MAP_FN = new InjectionToken<DynamicFormControlMapFn>(\"DYNAMIC_FORM_CONTROL_MAP_FN\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormComponentService {\n\n    private forms: DynamicFormComponent[] = [];\n    private formControls: { [key: string]: DynamicFormControlRef | DynamicFormControlRef[] } = {};\n\n    constructor(@Inject(DYNAMIC_FORM_CONTROL_MAP_FN) @Optional() private readonly DYNAMIC_FORM_CONTROL_MAP_FN: any) {\n        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN as DynamicFormControlMapFn;\n    }\n\n    getForms(): IterableIterator<DynamicFormComponent> {\n        return this.forms.values();\n    }\n\n    registerForm(component: DynamicFormComponent): void {\n        this.forms.push(component);\n    }\n\n    unregisterForm(component: DynamicFormComponent): void {\n\n        const indexOf = this.forms.indexOf(component);\n\n        if (indexOf !== -1) {\n            this.forms.splice(indexOf, 1);\n        }\n    }\n\n    getFormControlRef(modelId: string, index?: number): DynamicFormControlRef | undefined {\n\n        const ref: DynamicFormControlRef | DynamicFormControlRef[] = this.formControls[modelId];\n\n        if (isNumber(index)) {\n\n            return Array.isArray(ref) ? ref[index] : undefined;\n\n        } else {\n            return ref as DynamicFormControlRef;\n        }\n    }\n\n    registerFormControl(model: DynamicFormControlModel, ref: DynamicFormControlRef, index?: number): void {\n\n        if (isNumber(index)) { // threat model as array child\n\n            const arrayRef: DynamicFormControlRef[] = this.formControls[model.id] as DynamicFormControlRef[] || [];\n\n            if (Array.isArray(arrayRef)) {\n\n                arrayRef.splice(index, 0, ref);\n                this.formControls[model.id] = arrayRef;\n\n            } else {\n                console.warn(`registerFormControlRef is called with index for a non-array form control: ${model.id}`);\n            }\n\n        } else {\n            this.formControls[model.id] = ref;\n        }\n    }\n\n    unregisterFormControl(modelId: string, index?: number): void {\n\n        const componentRef = this.formControls[modelId];\n\n        if (isNumber(index)) {\n\n            if (Array.isArray(componentRef) && componentRef[index] !== undefined) {\n                componentRef.splice(index, 1);\n            }\n\n        } else if (componentRef !== undefined) {\n            delete this.formControls[modelId];\n        }\n    }\n\n    getCustomComponentType(model: DynamicFormControlModel): Type<DynamicFormControl> | null {\n        return isFunction(this.DYNAMIC_FORM_CONTROL_MAP_FN) ? this.DYNAMIC_FORM_CONTROL_MAP_FN(model) : null;\n    }\n}\n","import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit, QueryList, Directive } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { DynamicFormControlContainerComponent } from \"./dynamic-form-control-container.component\";\nimport { DynamicFormControlEvent } from \"./dynamic-form-control-event\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormModel } from \"../model/dynamic-form.model\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormLayout } from \"../service/dynamic-form-layout.service\";\nimport { DynamicFormComponentService } from \"../service/dynamic-form-component.service\";\n\n@Directive()\nexport abstract class DynamicFormComponent implements OnInit, OnDestroy {\n\n    group: FormGroup;\n    model: DynamicFormModel;\n    layout: DynamicFormLayout;\n\n    components: QueryList<DynamicFormControlContainerComponent>;\n    templates: QueryList<DynamicTemplateDirective>;\n\n    blur: EventEmitter<DynamicFormControlEvent>;\n    change: EventEmitter<DynamicFormControlEvent>;\n    focus: EventEmitter<DynamicFormControlEvent>;\n\n    protected constructor(protected changeDetectorRef: ChangeDetectorRef,\n                          protected componentService: DynamicFormComponentService) {\n    }\n\n    ngOnInit(): void {\n        this.componentService.registerForm(this);\n    }\n\n    ngOnDestroy(): void {\n        this.componentService.unregisterForm(this);\n    }\n\n    trackByFn(_index: number, model: DynamicFormControlModel): string {\n        return model.id;\n    }\n\n    markForCheck(): void {\n        this.changeDetectorRef.markForCheck();\n\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n\n    detectChanges(): void {\n        this.changeDetectorRef.detectChanges();\n    }\n\n    onBlur($event: DynamicFormControlEvent) {\n        this.blur.emit($event);\n    }\n\n    onChange($event: DynamicFormControlEvent) {\n        this.change.emit($event);\n    }\n\n    onFocus($event: DynamicFormControlEvent) {\n        this.focus.emit($event);\n    }\n\n    onCustomEvent($event: DynamicFormControlEvent, customEventEmitter: EventEmitter<DynamicFormControlEvent>) {\n        customEventEmitter.emit($event);\n    }\n}\n","import { FormControl, FormGroup } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormArrayGroupModel } from \"../model/form-array/dynamic-form-array.model\";\nimport { isObject } from \"../utils/core.utils\";\n\nexport enum DynamicFormControlEventType {\n    Blur = \"blur\",\n    Change = \"change\",\n    Focus = \"focus\"\n}\n\nexport interface DynamicFormControlEvent {\n\n    $event: Event | FocusEvent | DynamicFormControlEvent | any;\n    context: DynamicFormArrayGroupModel | null;\n    control: FormControl;\n    group: FormGroup;\n    model: DynamicFormControlModel;\n    type: string;\n}\n\nexport interface DynamicFormControlCustomEvent {\n\n    customEvent: any;\n    customEventType: string;\n}\n\nexport function isDynamicFormControlEvent($event: any): $event is DynamicFormControlEvent {\n    return isObject($event) && $event.hasOwnProperty(\"$event\");\n}\n","export interface DynamicValidatorDescriptor {\n    name: string;\n    args: any;\n}\n\nexport type DynamicValidatorsConfig = { [validatorKey: string]: any | DynamicValidatorDescriptor };\n\nexport enum DynamicFormHook {\n    Blur = \"blur\",\n    Change = \"change\",\n    Submit = \"submit\"\n}\n","import \"reflect-metadata\";\n\ndeclare let Reflect: any;\n\nexport const METADATA_KEY_SERIALIZABLE = \"SERIALIZABLE\";\n\nexport interface SerializableProperty {\n\n    key: string;\n    name: string;\n}\n\nexport function serializable(name?: string): (target: any, key: string) => void {\n\n    return (target, key) => {\n        Reflect.defineMetadata(METADATA_KEY_SERIALIZABLE, {key, name: name || key}, target, key);\n    };\n}\n\nexport function getSerializables(target: any): SerializableProperty[] {\n\n    const serializables = [];\n\n    for (const key in target) {\n\n        const metadata = Reflect.getMetadata(METADATA_KEY_SERIALIZABLE, target, key);\n\n        if (metadata) {\n            serializables.push(metadata);\n        }\n    }\n\n    return serializables;\n}\n\nexport function serialize(target: any, prototype?: any): object {\n\n    return getSerializables(prototype || target).reduce((prev: any, prop: SerializableProperty) => {\n\n        prev[prop.name] = target[prop.key];\n\n        return prev;\n\n    }, {});\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { DynamicPathable } from \"./misc/dynamic-form-control-path.model\";\nimport { DynamicFormControlRelation } from \"./misc/dynamic-form-control-relation.model\";\nimport { DynamicFormHook, DynamicValidatorsConfig } from \"./misc/dynamic-form-control-validation.model\";\nimport { serializable, serialize } from \"../decorator/serializable.decorator\";\nimport { isBoolean, isObject, isString } from \"../utils/core.utils\";\n\nexport interface DynamicFormControlModelConfig {\n\n    asyncValidators?: DynamicValidatorsConfig;\n    disabled?: boolean;\n    errorMessages?: DynamicValidatorsConfig;\n    hidden?: boolean;\n    id: string;\n    label?: string;\n    labelTooltip?: string;\n    controlTooltip?: string;\n    name?: string;\n    relations?: DynamicFormControlRelation[];\n    updateOn?: DynamicFormHook;\n    validators?: DynamicValidatorsConfig;\n}\n\nexport abstract class DynamicFormControlModel implements DynamicPathable {\n\n    @serializable() asyncValidators: DynamicValidatorsConfig | null;\n    @serializable(\"disabled\") _disabled: boolean;\n    @serializable() errorMessages: DynamicValidatorsConfig | null;\n    @serializable() hidden: boolean;\n    @serializable() id: string;\n    @serializable() label: string | null;\n    @serializable() labelTooltip: string | null;\n    @serializable() controlTooltip: string | null;\n    @serializable() layout: DynamicFormControlLayout | null;\n    @serializable() name: string;\n    parent: DynamicPathable | null = null;\n    @serializable() relations: DynamicFormControlRelation[];\n    @serializable() updateOn: DynamicFormHook | null;\n    @serializable() validators: DynamicValidatorsConfig | null;\n\n    private readonly disabled$: BehaviorSubject<boolean>;\n\n    readonly disabledChanges: Observable<boolean>;\n\n    abstract readonly type: string;\n\n    protected constructor(config: DynamicFormControlModelConfig, layout: DynamicFormControlLayout | null = null) {\n\n        this.asyncValidators = config.asyncValidators ?? null;\n        this.errorMessages = config.errorMessages ?? null;\n        this.hidden = isBoolean(config.hidden) ? config.hidden : false;\n        this.id = config.id;\n        this.label = config.label ?? null;\n        this.labelTooltip = config.labelTooltip ?? null;\n        this.controlTooltip = config.controlTooltip ?? null;\n        this.layout = layout;\n        this.name = config.name ?? config.id;\n        this.relations = Array.isArray(config.relations) ? config.relations : [];\n        this.updateOn = isString(config.updateOn) ? config.updateOn : null;\n        this.validators = config.validators ?? null;\n\n        this.disabled$ = new BehaviorSubject(isBoolean(config.disabled) ? config.disabled : false);\n        this.disabled$.subscribe(disabled => this._disabled = disabled);\n        this.disabledChanges = this.disabled$.asObservable();\n    }\n\n    get disabled(): boolean {\n        return this.disabled$.getValue();\n    }\n\n    set disabled(disabled: boolean) {\n        this.disabled$.next(disabled);\n    }\n\n    get hasErrorMessages(): boolean {\n        return isObject(this.errorMessages);\n    }\n\n    toJSON() {\n        return serialize(this);\n    }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { DynamicFormControlModel, DynamicFormControlModelConfig } from \"./dynamic-form-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { isBoolean, isObject } from \"../utils/core.utils\";\n\nexport interface DynamicFormValueControlModelConfig<T> extends DynamicFormControlModelConfig {\n\n    additional?: { [key: string]: any };\n    hint?: string;\n    required?: boolean;\n    tabIndex?: number;\n    value?: T;\n}\n\nexport abstract class DynamicFormValueControlModel<T> extends DynamicFormControlModel {\n\n    @serializable() additional: { [key: string]: any } | null;\n    @serializable() hint: string | null;\n    @serializable() required: boolean;\n    @serializable() tabIndex: number | null;\n    @serializable(\"value\") private _value: T | null;\n\n    private readonly value$: BehaviorSubject<T>;\n\n    readonly valueChanges: Observable<T>;\n\n    protected constructor(config: DynamicFormValueControlModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.additional = isObject(config.additional) ? config.additional : null;\n        this.hint = config.hint ?? null;\n        this.required = isBoolean(config.required) ? config.required : false;\n        this.tabIndex = config.tabIndex ?? null;\n\n        this.value$ = new BehaviorSubject(config.value ?? null);\n        this.value$.subscribe(value => this._value = value);\n        this.valueChanges = this.value$.asObservable();\n    }\n\n    get value(): T | null {\n        return this.value$.getValue();\n    }\n\n    set value(value: T | null) {\n        this.value$.next(value);\n    }\n\n    getAdditional(key: string, defaultValue?: any | null): any {\n        return this.additional !== null && this.additional.hasOwnProperty(key) ? this.additional[key] : defaultValue;\n    }\n}\n","import { DynamicFormControlModel, DynamicFormControlModelConfig } from \"../dynamic-form-control.model\";\nimport { DynamicFormModel } from \"../dynamic-form.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { DynamicPathable } from \"../misc/dynamic-form-control-path.model\";\nimport { DynamicValidatorsConfig } from \"../misc/dynamic-form-control-validation.model\";\nimport { serializable, serialize } from \"../../decorator/serializable.decorator\";\nimport { isFunction, isNumber } from \"../../utils/core.utils\";\n\nexport class DynamicFormArrayGroupModel implements DynamicPathable {\n\n    $implicit: DynamicFormArrayGroupModel;\n    context: DynamicFormArrayModel;\n    @serializable() group: DynamicFormModel;\n    @serializable() index: number;\n\n    constructor(context: DynamicFormArrayModel, group: DynamicFormModel = [], index: number = -1) {\n\n        this.$implicit = this;\n        this.context = context;\n        this.group = group;\n        this.index = index;\n    }\n\n    get parent(): DynamicFormArrayModel {\n        return this.context;\n    }\n\n    get(index: number): DynamicFormControlModel {\n        return this.group[index];\n    }\n\n    toJSON() {\n        return serialize(this);\n    }\n}\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_ARRAY = \"ARRAY\";\n\nexport interface DynamicFormArrayModelConfig extends DynamicFormControlModelConfig {\n\n    groupAsyncValidators?: DynamicValidatorsConfig;\n    groupFactory?: () => DynamicFormModel;\n    groupValidators?: DynamicValidatorsConfig;\n    groups?: DynamicFormArrayGroupModel[] | null;\n    initialCount?: number;\n}\n\nexport class DynamicFormArrayModel extends DynamicFormControlModel {\n\n    @serializable() groupAsyncValidators: DynamicValidatorsConfig | null;\n    groupFactory: () => DynamicFormModel;\n    @serializable() groupValidators: DynamicValidatorsConfig | null;\n    @serializable() groups: DynamicFormArrayGroupModel[] = [];\n    @serializable() initialCount: number;\n\n    @serializable() readonly groupPrototype: DynamicFormModel; // only to recreate model from JSON\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_ARRAY;\n\n    constructor(config: DynamicFormArrayModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        if (isFunction(config.groupFactory)) {\n            this.groupFactory = config.groupFactory;\n        } else {\n            throw new Error(\"group factory function must be specified for DynamicFormArrayModel\");\n        }\n\n        this.groupAsyncValidators = config.groupAsyncValidators ?? null;\n        this.groupPrototype = this.groupFactory();\n        this.groupValidators = config.groupValidators ?? null;\n        this.initialCount = isNumber(config.initialCount) ? config.initialCount : 1;\n\n        if (Array.isArray(config.groups)) {\n\n            config.groups.forEach((arrayGroup, index) => {\n                this.groups.push(new DynamicFormArrayGroupModel(this, arrayGroup.group, arrayGroup.index ?? index));\n            });\n\n        } else {\n\n            for (let index = 0; index < this.initialCount; index++) {\n                this.addGroup();\n            }\n        }\n    }\n\n    private updateGroupIndex(): void {\n        this.groups.forEach((group, index) => group.index = index);\n    }\n\n    get size(): number {\n        return this.groups.length;\n    }\n\n    get(index: number): DynamicFormArrayGroupModel {\n        return this.groups[index];\n    }\n\n    addGroup(): DynamicFormArrayGroupModel {\n        return this.insertGroup(this.groups.length);\n    }\n\n    insertGroup(index: number): DynamicFormArrayGroupModel {\n\n        let group = new DynamicFormArrayGroupModel(this, this.groupFactory());\n\n        this.groups.splice(index, 0, group);\n        this.updateGroupIndex();\n\n        return group;\n    }\n\n    moveGroup(index: number, step: number): void {\n\n        this.groups.splice(index + step, 0, ...this.groups.splice(index, 1));\n        this.updateGroupIndex();\n    }\n\n    removeGroup(index: number): void {\n\n        this.groups.splice(index, 1);\n        this.updateGroupIndex();\n    }\n\n    clear(): void {\n        this.groups.splice(0);\n        this.updateGroupIndex();\n    }\n}\n","import { DynamicFormValueControlModel, DynamicFormValueControlModelConfig } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { isBoolean } from \"../utils/core.utils\";\n\nexport interface DynamicCheckControlModelConfig extends DynamicFormValueControlModelConfig<boolean> {\n\n    labelPosition?: string;\n}\n\nexport abstract class DynamicCheckControlModel extends DynamicFormValueControlModel<boolean> {\n\n    @serializable() labelPosition: string | null;\n\n    protected constructor(config: DynamicCheckControlModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.labelPosition = config.labelPosition ?? null;\n        this.checked = isBoolean(this.value) ? this.value : false;\n    }\n\n    get checked(): boolean {\n        return this.value;\n    }\n\n    set checked(checked: boolean) {\n        this.value = checked;\n    }\n\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n}\n","import { DynamicCheckControlModel, DynamicCheckControlModelConfig } from \"../dynamic-check-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX = \"CHECKBOX\";\n\nexport interface DynamicCheckboxModelConfig extends DynamicCheckControlModelConfig {\n\n    indeterminate?: boolean;\n}\n\nexport class DynamicCheckboxModel extends DynamicCheckControlModel {\n\n    @serializable() indeterminate: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n\n    constructor(config: DynamicCheckboxModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.indeterminate = isBoolean(config.indeterminate) ? config.indeterminate : false;\n    }\n}","import { DynamicFormValueControlModel, DynamicFormValueControlModelConfig } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { isBoolean, isNumber } from \"../utils/core.utils\";\n\nexport interface DynamicInputControlModelConfig<T> extends DynamicFormValueControlModelConfig<T> {\n\n    autoComplete?: string;\n    autoFocus?: boolean;\n    maxLength?: number;\n    minLength?: number;\n    placeholder?: string;\n    prefix?: string;\n    readOnly?: boolean;\n    spellCheck?: boolean;\n    suffix?: string;\n}\n\nexport abstract class DynamicInputControlModel<T> extends DynamicFormValueControlModel<T> {\n\n    @serializable() autoComplete: string;\n    @serializable() autoFocus: boolean;\n    @serializable() maxLength: number | null;\n    @serializable() minLength: number | null;\n    @serializable() placeholder: string;\n    @serializable() prefix: string | null;\n    @serializable() readOnly: boolean;\n    @serializable() spellCheck: boolean;\n    @serializable() suffix: string | null;\n\n    protected constructor(config: DynamicInputControlModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.autoComplete = config.autoComplete ?? \"on\";\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.maxLength = isNumber(config.maxLength) ? config.maxLength : null;\n        this.minLength = isNumber(config.minLength) ? config.minLength : null;\n        this.placeholder = config.placeholder ?? \"\";\n        this.prefix = config.prefix ?? null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.spellCheck = isBoolean(config.spellCheck) ? config.spellCheck : false;\n        this.suffix = config.suffix ?? null;\n    }\n}\n","import { isString } from \"./core.utils\";\n\nexport function maskToString(mask: string | RegExp | (string | RegExp)[]): string | string[] | null {\n\n    if (isString(mask)) {\n\n        return mask as string;\n\n    } else if (mask instanceof RegExp) {\n\n        return mask.toString();\n\n    } else if (Array.isArray(mask)) {\n\n        return mask.map(value => maskToString(value)) as string[];\n    }\n\n    return null;\n}\n\nexport function maskFromString(mask: string | string[]): string | RegExp | (string | RegExp)[] | null {\n\n    if (isString(mask)) {\n\n        const isRegExp = (mask as string).startsWith(\"/\") && (mask as string).endsWith(\"/\");\n\n        return isRegExp ? new RegExp((mask as string).slice(1, mask.length - 1)) : mask;\n\n    } else if (Array.isArray(mask)) {\n\n        return (mask as string[]).map(value => maskFromString(value)) as string[];\n    }\n\n    return null;\n}\n\nexport function parseReviver(_key: string, value: any): any {\n\n    const regexDateISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|([+\\-])([\\d|:]*))?$/;\n\n    return isString(value) && regexDateISO.test(value) ? new Date(value) : value;\n}\n","import { DynamicInputControlModel, DynamicInputControlModelConfig } from \"../dynamic-input-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { maskToString } from \"../../utils/json.utils\";\nimport { isBoolean, isFunction, isNumber } from \"../../utils/core.utils\";\nimport { Observable, isObservable, of } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_INPUT = \"INPUT\";\n\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR = \"color\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE = \"date\";\n//export const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME = \"datetime\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL = \"datetime-local\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL = \"email\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE = \"file\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH = \"month\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER = \"number\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD = \"password\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE = \"range\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH = \"search\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL = \"tel\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT = \"text\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME = \"time\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL = \"url\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK = \"week\";\n\nexport interface DynamicInputModelConfig extends DynamicInputControlModelConfig<string | number | Date | string[]> {\n\n    accept?: string;\n    inputType?: string;\n    list?: any[] | Observable<any[]>;\n    mask?: string | RegExp | Function | (string | RegExp)[];\n    max?: number | string | Date;\n    min?: number | string | Date;\n    multiple?: boolean;\n    pattern?: string;\n    step?: number;\n}\n\nexport class DynamicInputModel extends DynamicInputControlModel<string | number | Date | string[]> {\n\n    @serializable() accept: string | null;\n    @serializable() inputType: string;\n    files: FileList | null = null;\n    list$: Observable<any[]> | null = null;\n    @serializable() mask: string | RegExp | Function | (string | RegExp)[] | null;\n    @serializable() max: number | string | Date | null;\n    @serializable() min: number | string | Date | null;\n    @serializable() multiple: boolean | null;\n    @serializable() pattern: string | null;\n    @serializable() step: number | null;\n\n    @serializable(\"list\") private _list: any[] | null = null;\n    private readonly _listId: string | null = null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_INPUT;\n\n    constructor(config: DynamicInputModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.accept = config.accept ?? null;\n        this.inputType = config.inputType ?? DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT;\n        this.mask = config.mask ?? null;\n        this.max = config.max !== undefined ? config.max : null;\n        this.min = config.min !== undefined ? config.min : null;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : null;\n        this.pattern = config.pattern ?? null;\n        this.step = isNumber(config.step) ? config.step : null;\n\n        if (config.list !== undefined) {\n\n            this.list = config.list;\n            this._listId = `${this.id}List`;\n        }\n    }\n\n    get listId(): string | null {\n        return this._listId;\n    }\n\n    get hasList(): boolean {\n        return isObservable(this.list$);\n    }\n\n    set list(list: any[] | Observable<any[]> | null) {\n\n        if (Array.isArray(list)) {\n\n            this._list = list;\n            this.list$ = of(this._list);\n\n        } else if (isObservable(list)) {\n\n            this.list$ = list.pipe(tap(list => this._list = list));\n\n        } else {\n\n            this._list = null;\n            this.list$ = null;\n        }\n    }\n\n    toJSON() {\n\n        const json: any = super.toJSON();\n\n        if (this.mask !== null) {\n            json.mask = isFunction(this.mask) ? this.mask : maskToString(this.mask);\n        }\n\n        return json;\n    }\n}\n","import { Directive, Input, TemplateRef } from \"@angular/core\";\n\nexport enum DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT {\n    Start = \"START\",\n    End = \"END\"\n}\n\n@Directive({\n    selector: \"ng-template[modelId],ng-template[modelType]\"\n})\nexport class DynamicTemplateDirective {\n\n    @Input() align: string = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;\n    @Input() as: string | null = null;\n    @Input() index: number | undefined;\n    @Input() modelId: string;\n    @Input() modelType: string;\n\n    constructor(public templateRef: TemplateRef<any>) {\n    }\n}\n","import { Injectable, QueryList } from \"@angular/core\";\nimport {\n    DynamicFormControlLayout,\n    DynamicFormControlLayoutConfig,\n    DynamicFormControlLayoutContext,\n    DynamicFormControlLayoutPlace\n} from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormArrayGroupModel } from \"../model/form-array/dynamic-form-array.model\";\nimport {\n    DynamicTemplateDirective,\n    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT\n} from \"../directive/dynamic-template.directive\";\nimport { isObject, isString } from \"../utils/core.utils\";\n\nexport type DynamicFormLayout = { [id: string]: DynamicFormControlLayout };\n\nexport type DynamicFormControlTemplates = QueryList<DynamicTemplateDirective> | DynamicTemplateDirective[] | undefined;\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormLayoutService {\n\n    findById(id: string, formLayout: DynamicFormLayout | null): DynamicFormControlLayout | null {\n\n        if (isObject(formLayout)) {\n\n            for (const key of Object.keys(formLayout)) {\n\n                if (key === id) {\n                    return formLayout[key];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    findByModel(model: DynamicFormControlModel, formLayout: DynamicFormLayout | null): DynamicFormControlLayout | null {\n\n        let controlLayout: DynamicFormControlLayout = null;\n\n        if (isObject(formLayout)) {\n\n            for (const key of Object.keys(formLayout)) {\n\n                key.split(\",\").forEach(substring => {\n\n                    const selector = substring.trim();\n\n                    if (selector === model.id || selector === model.type) {\n                        controlLayout = formLayout[key];\n                    }\n                });\n            }\n        }\n\n        return controlLayout;\n    }\n\n    filterTemplatesByModel(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] {\n\n        const filterCallback: (template: DynamicTemplateDirective) => boolean = (template: DynamicTemplateDirective) => {\n            return template.modelId === model.id || template.modelType === model.type;\n        };\n\n        if (templates instanceof QueryList) {\n            return templates.filter(filterCallback);\n\n        } else if (Array.isArray(templates)) {\n            return templates.filter(filterCallback);\n        }\n\n        return [];\n    }\n\n    getAlignedTemplate(model: DynamicFormControlModel, templates: DynamicFormControlTemplates,\n                       alignment: DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT): DynamicTemplateDirective | undefined {\n\n        return this.filterTemplatesByModel(model, templates)\n            .find(template => template.as === null && template.align === alignment);\n    }\n\n    /*\n    getIndexedTemplates(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] | undefined {\n        return this.filterTemplatesByModel(model, templates).filter(template => template.as === null);\n    }\n    */\n    getStartTemplate(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective | undefined {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.Start);\n    }\n\n    getEndTemplate(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective | undefined {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End);\n    }\n\n    getClass(layout: DynamicFormControlLayout | null | undefined, context: DynamicFormControlLayoutContext,\n             place: DynamicFormControlLayoutPlace): string {\n\n        if (isObject(layout) && layout.hasOwnProperty(context)) {\n\n            const config = layout[context] as DynamicFormControlLayoutConfig;\n\n            if (config.hasOwnProperty(place)) {\n                return config[place] as string;\n            }\n        }\n\n        return \"\";\n    }\n\n    getHostClass(layout: DynamicFormControlLayout | null | undefined): string {\n\n        const keys: (keyof DynamicFormControlLayout)[] = [\"element\", \"grid\"];\n        let cls = \"\";\n\n        if (isObject(layout)) {\n            keys.forEach(key => {\n                if (isObject(layout[key]) && isString(layout[key].host)) {\n                    cls = cls + ` ${layout[key].host}`;\n                }\n            });\n        }\n\n        return cls;\n    }\n\n    getElementId(model: DynamicFormControlModel): string {\n\n        let id = model.id;\n        let parent = model.parent;\n\n        while (parent !== null) {\n\n            if (parent instanceof DynamicFormArrayGroupModel) {\n\n                id = `${parent.context.id}-${parent.index}-${model.id}`;\n                break;\n            }\n\n            parent = parent.parent;\n        }\n\n        return id;\n    }\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { AsyncValidatorFn, ValidatorFn } from \"@angular/forms\";\n\nexport type Validator = ValidatorFn | AsyncValidatorFn;\n\nexport type ValidatorFactory = (args: any) => Validator;\n\nexport type ValidatorsToken = Validator[];\n\nexport type ValidatorsMap = Map<string, Validator | ValidatorFactory>;\n\nexport const DYNAMIC_VALIDATORS = new InjectionToken<ValidatorsMap>(\"DYNAMIC_VALIDATORS\");\n","import { InjectionToken } from \"@angular/core\";\nimport { AbstractControl } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormHook } from \"../model/misc/dynamic-form-control-validation.model\";\n\nexport type DynamicErrorMessagesMatcher = (control: AbstractControl, model: DynamicFormControlModel, hasFocus: boolean) => boolean;\n\nexport const DEFAULT_ERROR_STATE_MATCHER: DynamicErrorMessagesMatcher =\n    (control: AbstractControl, model: DynamicFormControlModel, hasFocus: boolean) => {\n        return control.touched && !hasFocus;\n    };\n\nexport const CHANGE_ERROR_STATE_MATCHER: DynamicErrorMessagesMatcher =\n    (control: AbstractControl, model: DynamicFormControlModel, hasFocus: boolean) => {\n        return (model.updateOn === DynamicFormHook.Change || model.updateOn === null) ? control.dirty : control.touched && !hasFocus;\n    };\n\nexport const DYNAMIC_ERROR_MESSAGES_MATCHER = new InjectionToken<DynamicErrorMessagesMatcher>(\"DYNAMIC_ERROR_MESSAGES_MATCHER\");\n","import { Injectable, Inject, Optional } from \"@angular/core\";\nimport {\n    AbstractControl,\n    AsyncValidatorFn,\n    ValidatorFn,\n    Validators,\n    NG_VALIDATORS,\n    NG_ASYNC_VALIDATORS\n} from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport {\n    DynamicFormHook,\n    DynamicValidatorDescriptor,\n    DynamicValidatorsConfig\n} from \"../model/misc/dynamic-form-control-validation.model\";\nimport { isObject, isString } from \"../utils/core.utils\";\nimport { DYNAMIC_VALIDATORS, Validator, ValidatorFactory, ValidatorsToken } from \"./dynamic-form-validators\";\nimport {\n    DEFAULT_ERROR_STATE_MATCHER,\n    DYNAMIC_ERROR_MESSAGES_MATCHER,\n    DynamicErrorMessagesMatcher\n} from \"./dynamic-form-validation-matchers\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormValidationService {\n\n    constructor(@Optional() @Inject(NG_VALIDATORS) private _NG_VALIDATORS: ValidatorFn[],\n                @Optional() @Inject(NG_ASYNC_VALIDATORS) private _NG_ASYNC_VALIDATORS: AsyncValidatorFn[],\n                @Optional() @Inject(DYNAMIC_VALIDATORS) private _DYNAMIC_VALIDATORS: Map<string, Validator | ValidatorFactory>,\n                @Optional() @Inject(DYNAMIC_ERROR_MESSAGES_MATCHER) private _DYNAMIC_ERROR_MESSAGES_MATCHER: DynamicErrorMessagesMatcher) {\n    }\n\n    private getValidatorFn(validatorName: string, validatorArgs: any = null,\n                           validatorsToken: ValidatorsToken = this._NG_VALIDATORS): Validator | never {\n\n        let validatorFn: ValidatorFactory | Validator | undefined;\n\n        if (Validators.hasOwnProperty(validatorName)) { // Built-in Angular Validators\n\n            validatorFn = (Validators as any)[validatorName];\n\n        } else { // Custom Validators\n\n            if (this._DYNAMIC_VALIDATORS && this._DYNAMIC_VALIDATORS.has(validatorName)) {\n                validatorFn = this._DYNAMIC_VALIDATORS.get(validatorName);\n\n            } else if (validatorsToken) {\n                validatorFn = validatorsToken.find(validator => validator.name === validatorName);\n            }\n        }\n\n        if (validatorFn === undefined) { // throw when no validator could be resolved\n            throw new Error(\n                `validator \"${validatorName}\" is not provided via NG_VALIDATORS, NG_ASYNC_VALIDATORS or DYNAMIC_FORM_VALIDATORS`);\n        }\n\n        if (validatorArgs !== null) {\n            return (validatorFn as ValidatorFactory)(validatorArgs);\n        }\n\n        return validatorFn as Validator;\n    }\n\n    private getValidatorFns(validatorsConfig: DynamicValidatorsConfig,\n                            validatorsToken: ValidatorsToken = this._NG_VALIDATORS): Validator[] {\n\n        let validatorFns: Validator[] = [];\n\n        if (isObject(validatorsConfig)) {\n\n            validatorFns = Object.keys(validatorsConfig).map(validatorConfigKey => {\n\n                const validatorConfigValue = (validatorsConfig as DynamicValidatorsConfig)[validatorConfigKey];\n\n                if (this.isValidatorDescriptor(validatorConfigValue)) {\n\n                    const descriptor = validatorConfigValue as DynamicValidatorDescriptor;\n\n                    return this.getValidatorFn(descriptor.name, descriptor.args, validatorsToken);\n                }\n\n                return this.getValidatorFn(validatorConfigKey, validatorConfigValue, validatorsToken);\n            });\n        }\n\n        return validatorFns;\n    }\n\n    getValidator(validatorName: string, validatorArgs: any = null): ValidatorFn {\n        return this.getValidatorFn(validatorName, validatorArgs) as ValidatorFn;\n    }\n\n    getAsyncValidator(validatorName: string, validatorArgs: any = null): AsyncValidatorFn {\n        return this.getValidatorFn(validatorName, validatorArgs, this._NG_ASYNC_VALIDATORS) as AsyncValidatorFn;\n    }\n\n    getValidators(validatorsConfig: DynamicValidatorsConfig): ValidatorFn[] {\n        return this.getValidatorFns(validatorsConfig) as ValidatorFn[];\n    }\n\n    getAsyncValidators(asyncValidatorsConfig: DynamicValidatorsConfig): AsyncValidatorFn[] {\n        return this.getValidatorFns(asyncValidatorsConfig, this._NG_ASYNC_VALIDATORS) as AsyncValidatorFn[];\n    }\n\n    updateValidators(validatorsConfig: DynamicValidatorsConfig | null, control: AbstractControl,\n                     model: DynamicFormControlModel): void {\n\n        model.validators = validatorsConfig;\n\n        if (validatorsConfig === null) {\n\n            control.clearValidators();\n\n        } else {\n            control.setValidators(this.getValidators(validatorsConfig));\n        }\n\n        control.updateValueAndValidity();\n    }\n\n    updateAsyncValidators(asyncValidatorsConfig: DynamicValidatorsConfig | null, control: AbstractControl,\n                          model: DynamicFormControlModel): void {\n\n        model.asyncValidators = asyncValidatorsConfig;\n\n        if (asyncValidatorsConfig === null) {\n\n            control.clearAsyncValidators();\n\n        } else {\n            control.setAsyncValidators(this.getAsyncValidators(asyncValidatorsConfig));\n        }\n\n        control.updateValueAndValidity();\n    }\n\n    showErrorMessages(control: AbstractControl, model: DynamicFormControlModel, hasFocus: boolean): boolean {\n\n        const precondition = control.invalid && model.hasErrorMessages;\n        const matcher = this._DYNAMIC_ERROR_MESSAGES_MATCHER ? this._DYNAMIC_ERROR_MESSAGES_MATCHER(control, model, hasFocus) :\n            DEFAULT_ERROR_STATE_MATCHER(control, model, hasFocus);\n\n        return precondition && matcher;\n    }\n\n    parseErrorMessageConfig(template: string, model: DynamicFormControlModel, error: any = null): string {\n\n        return template.replace(/{{\\s*(.+?)\\s*}}/mg, (_match: string, expression: string) => {\n\n            let propertySource: any = model;\n            let propertyName: string = expression;\n\n            if (expression.indexOf(\"validator.\") >= 0 && error) {\n\n                propertySource = error;\n                propertyName = expression.replace(\"validator.\", \"\");\n            }\n\n            return propertySource[propertyName] !== null && propertySource[propertyName] !== undefined ?\n                propertySource[propertyName] : null;\n        });\n    }\n\n    createErrorMessages(control: AbstractControl, model: DynamicFormControlModel): string[] {\n\n        const messages: string[] = [];\n\n        if (model.hasErrorMessages) {\n\n            const messagesConfig = model.errorMessages as DynamicValidatorsConfig;\n\n            Object.keys(control.errors || {}).forEach(validationErrorKey => {\n\n                let messageKey = validationErrorKey;\n\n                if (validationErrorKey === \"minlength\" || validationErrorKey === \"maxlength\") {\n                    messageKey = messageKey.replace(\"length\", \"Length\");\n                }\n\n                if (messagesConfig.hasOwnProperty(messageKey)) {\n\n                    const validationError = control.getError(validationErrorKey);\n                    const messageTemplate = messagesConfig[messageKey] as string;\n\n                    messages.push(this.parseErrorMessageConfig(messageTemplate, model, validationError));\n                }\n            });\n        }\n\n        return messages;\n    }\n\n    isFormHook(value: any): boolean {\n        return isString(value) && (Object.values(DynamicFormHook) as string[]).includes(value);\n    }\n\n    isValidatorDescriptor(value: any): boolean {\n\n        if (isObject(value)) {\n            return value.hasOwnProperty(\"name\") && value.hasOwnProperty(\"args\");\n        }\n\n        return false;\n    }\n}\n","import { DynamicFormControlModel, DynamicFormControlModelConfig } from \"../dynamic-form-control.model\";\nimport { DynamicFormModel } from \"../dynamic-form.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_GROUP = \"GROUP\";\n\nexport interface DynamicFormGroupModelConfig extends DynamicFormControlModelConfig {\n\n    group?: DynamicFormModel;\n    legend?: string;\n}\n\nexport class DynamicFormGroupModel extends DynamicFormControlModel {\n\n    @serializable() group: DynamicFormModel = [];\n    @serializable() legend: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_GROUP;\n\n    constructor(config: DynamicFormGroupModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.group = Array.isArray(config.group) ? config.group : [];\n        this.legend = config.legend ?? null;\n    }\n\n    get(index: number): DynamicFormControlModel {\n        return this.group[index];\n    }\n\n    set(index: number, controlModel: DynamicFormControlModel,): void {\n        this.group[index] = controlModel;\n    }\n\n    add(controlModel: DynamicFormControlModel): void {\n        this.group.push(controlModel);\n    }\n\n    insert(index: number, controlModel: DynamicFormControlModel): void {\n        this.group.splice(index, 0, controlModel);\n    }\n\n    move(index: number, step: number): void {\n        this.group.splice(index + step, 0, ...this.group.splice(index, 1));\n    }\n\n    remove(index: number) {\n        this.group.splice(index, 1);\n    }\n\n    size(): number {\n        return this.group.length;\n    }\n}\n","import { DynamicFormGroupModel, DynamicFormGroupModelConfig } from \"../form-group/dynamic-form-group.model\";\nimport { DynamicCheckboxModel } from \"./dynamic-checkbox.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP = \"CHECKBOX_GROUP\";\n\nexport class DynamicCheckboxGroupModel extends DynamicFormGroupModel {\n\n    @serializable() group: DynamicCheckboxModel[];\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP;\n\n    constructor(config: DynamicFormGroupModelConfig, layout?: DynamicFormControlLayout) {\n        super(config, layout);\n    }\n\n    check(...indices: number[]): void {\n        indices.forEach(index => this.group[index].checked = true);\n    }\n\n    uncheck(...indices: number[]): void {\n        indices.forEach(index => this.group[index].checked = false);\n    }\n\n    checkAll(): void {\n        this.group.forEach(model => model.checked = true);\n    }\n\n    uncheckAll(): void {\n        this.group.forEach(model => model.checked = false);\n    }\n}\n","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"../dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isString } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER = \"COLORPICKER\";\n\nexport interface DynamicColorPickerModelConfig extends DynamicFormValueControlModelConfig<string | object> {\n\n    format?: string;\n    inline?: boolean;\n}\n\nexport class DynamicColorPickerModel extends DynamicFormValueControlModel<string | object> {\n\n    @serializable() format: string | null;\n    @serializable() inline: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER;\n\n    constructor(config: DynamicColorPickerModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.format = isString(config.format) ? config.format : null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n    }\n}","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\n\nexport type DynamicDateControlValue = string | object | Date;\n\nexport interface DynamicDateControlModelConfig extends DynamicFormValueControlModelConfig<DynamicDateControlValue> {\n\n    format?: string;\n    max?: DynamicDateControlValue;\n    min?: DynamicDateControlValue;\n    placeholder?: string;\n}\n\nexport abstract class DynamicDateControlModel extends DynamicFormValueControlModel<DynamicDateControlValue> {\n\n    @serializable() format: string | null;\n    @serializable() max: DynamicDateControlValue | null;\n    @serializable() min: DynamicDateControlValue | null;\n    @serializable() placeholder: string | null;\n\n    protected constructor(config: DynamicDateControlModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.format = config.format ?? null;\n        this.max = config.max ?? null;\n        this.min = config.min ?? null;\n        this.placeholder = config.placeholder ?? null;\n    }\n}\n","import {\n    DynamicDateControlModel,\n    DynamicDateControlModelConfig,\n    DynamicDateControlValue\n} from \"../dynamic-date-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isString } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER = \"DATEPICKER\";\n\nexport interface DynamicDatePickerModelConfig extends DynamicDateControlModelConfig {\n\n    autoFocus?: boolean;\n    focusedDate?: DynamicDateControlValue;\n    inline?: boolean;\n    prefix?: string;\n    readOnly?: boolean;\n    suffix?: string;\n    toggleIcon?: string;\n    toggleLabel?: string;\n}\n\nexport class DynamicDatePickerModel extends DynamicDateControlModel {\n\n    @serializable() autoFocus: boolean;\n    @serializable() focusedDate: DynamicDateControlValue | null;\n    @serializable() inline: boolean;\n    @serializable() prefix: string | null;\n    @serializable() readOnly: boolean;\n    @serializable() suffix: string | null;\n    @serializable() toggleIcon: string | null;\n    @serializable() toggleLabel: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER;\n\n    constructor(config: DynamicDatePickerModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.focusedDate = config.focusedDate ?? null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n        this.prefix = config.prefix ?? null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.toggleIcon = isString(config.toggleIcon) ? config.toggleIcon : null;\n        this.toggleLabel = isString(config.toggleLabel) ? config.toggleLabel : null;\n        this.suffix = config.suffix ?? null;\n    }\n}\n","import { DynamicInputControlModel, DynamicInputControlModelConfig } from \"../dynamic-input-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_EDITOR = \"EDITOR\";\n\nexport interface DynamicEditorModelConfig extends DynamicInputControlModelConfig<string> {\n}\n\nexport class DynamicEditorModel extends DynamicInputControlModel<string> {\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_EDITOR;\n\n    constructor(config: DynamicEditorModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n    }\n}","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { isBoolean } from \"../utils/core.utils\";\n\nexport interface DynamicFileControlModelConfig extends DynamicFormValueControlModelConfig<File | File[]> {\n\n    multiple?: boolean;\n}\n\nexport abstract class DynamicFileControlModel extends DynamicFormValueControlModel<File | File[]> {\n\n    @serializable() multiple: boolean;\n\n    protected constructor(config: DynamicFileControlModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n    }\n}\n","import { DynamicFileControlModelConfig, DynamicFileControlModel } from \"../dynamic-file-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD = \"FILE_UPLOAD\";\n\nexport interface DynamicFileUploadModelConfig extends DynamicFileControlModelConfig {\n\n    accept?: string[];\n    autoUpload?: boolean;\n    maxSize?: number;\n    minSize?: number;\n    removeUrl?: string;\n    showFileList?: boolean;\n    url?: string;\n}\n\nexport class DynamicFileUploadModel extends DynamicFileControlModel {\n\n    @serializable() accept: string[] | null;\n    @serializable() autoUpload: boolean;\n    @serializable() maxSize: number | null;\n    @serializable() minSize: number | null;\n    @serializable() removeUrl: string | null;\n    @serializable() showFileList: boolean;\n    @serializable() url: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD;\n\n    constructor(config: DynamicFileUploadModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.accept = Array.isArray(config.accept) ? config.accept : null;\n        this.autoUpload = isBoolean(config.autoUpload) ? config.autoUpload : true;\n        this.maxSize = isNumber(config.maxSize) ? config.maxSize : null;\n        this.minSize = isNumber(config.minSize) ? config.minSize : null;\n        this.removeUrl = config.removeUrl ?? null;\n        this.showFileList = isBoolean(config.showFileList) ? config.showFileList : true;\n        this.url = config.url ?? null;\n    }\n}\n","import { Observable, isObservable, of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { DynamicFormValueControlModel, DynamicFormValueControlModelConfig } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable, serialize } from \"../decorator/serializable.decorator\";\nimport { isBoolean } from \"../utils/core.utils\";\n\nexport interface DynamicFormOptionConfig<T> {\n\n    disabled?: boolean;\n    label?: string;\n    value: T;\n}\n\nexport class DynamicFormOption<T> {\n\n    @serializable() disabled: boolean;\n    @serializable() label: string | null;\n    @serializable() value: T;\n\n    constructor(config: DynamicFormOptionConfig<T>) {\n\n        this.disabled = isBoolean(config.disabled) ? config.disabled : false;\n        this.label = config.label ?? null;\n        this.value = config.value;\n    }\n\n    get text() {\n        return this.label;\n    }\n\n    set text(text: string | null) {\n        this.label = text;\n    }\n\n    toJSON() {\n        return serialize(this);\n    }\n}\n\nexport interface DynamicOptionControlModelConfig<T> extends DynamicFormValueControlModelConfig<T | T[]> {\n\n    options?: DynamicFormOptionConfig<T>[] | Observable<DynamicFormOptionConfig<T>[]>;\n}\n\nexport abstract class DynamicOptionControlModel<T> extends DynamicFormValueControlModel<T | T[]> {\n\n    @serializable(\"options\") private _options: DynamicFormOption<T>[] = [];\n    options$: Observable<DynamicFormOption<T>[]>;\n\n    protected constructor(config: DynamicOptionControlModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.options = config.options;\n    }\n\n    private updateOptions$(): void {\n        this.options$ = of(this.options);\n    }\n\n    set options(options: any) {\n\n        if (Array.isArray(options)) {\n\n            this._options = (options as DynamicFormOptionConfig<T>[]).map(optionConfig => new DynamicFormOption<T>(optionConfig));\n\n            this.updateOptions$();\n\n        } else if (isObservable(options)) {\n\n            this.options$ = (options as Observable<DynamicFormOptionConfig<T>[]>).pipe(\n                map(optionsConfig => {\n\n                    this._options = optionsConfig.map(optionConfig => new DynamicFormOption<T>(optionConfig));\n\n                    return this._options;\n                }));\n\n        } else {\n\n            this.updateOptions$();\n        }\n    }\n\n    get options(): any {\n        return this._options;\n    }\n\n    add(optionConfig: DynamicFormOptionConfig<T>): DynamicFormOption<T> {\n        return this.insert(this.options.length, optionConfig);\n    }\n\n    get(index: number): DynamicFormOption<T> {\n        return this.options[index];\n    }\n\n    insert(index: number, optionConfig: DynamicFormOptionConfig<T>): DynamicFormOption<T> {\n\n        const option = new DynamicFormOption(optionConfig);\n\n        this.options.splice(index, 0, option);\n        this.updateOptions$();\n\n        return option;\n    }\n\n    remove(...indices: number[]): void {\n\n        indices.forEach(index => this.options.splice(index, 1));\n        this.updateOptions$();\n    }\n\n    abstract select(...indices: number[]): void;\n}\n","import { DynamicOptionControlModel, DynamicOptionControlModelConfig } from \"../dynamic-option-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP = \"RADIO_GROUP\";\n\nexport interface DynamicRadioGroupModelConfig<T> extends DynamicOptionControlModelConfig<T> {\n\n    legend?: string;\n}\n\nexport class DynamicRadioGroupModel<T> extends DynamicOptionControlModel<T> {\n\n    @serializable() legend: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP;\n\n    constructor(config: DynamicRadioGroupModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.legend = config.legend ?? null;\n    }\n\n    select(index: number): void {\n        this.value = this.get(index).value;\n    }\n}\n","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"../dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_RATING = \"RATING\";\n\nexport interface DynamicRatingModelConfig extends DynamicFormValueControlModelConfig<number> {\n\n    max?: number;\n}\n\nexport class DynamicRatingModel extends DynamicFormValueControlModel<number> {\n\n    @serializable() max: number | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_RATING;\n\n    constructor(config: DynamicRatingModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.max = isNumber(config.max) ? config.max : 10;\n    }\n}","import { DynamicOptionControlModel, DynamicOptionControlModelConfig } from \"../dynamic-option-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isFunction } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_SELECT = \"SELECT\";\n\nexport interface DynamicSelectModelConfig<T> extends DynamicOptionControlModelConfig<T> {\n\n    compareWithFn?: (o1: any, o2: any) => boolean;\n    filterable?: boolean;\n    multiple?: boolean;\n    placeholder?: string;\n    prefix?: string;\n    suffix?: string;\n}\n\nexport class DynamicSelectModel<T> extends DynamicOptionControlModel<T> {\n\n    compareWithFn: (value1: any, value2: any) => boolean;\n    @serializable() filterable: boolean;\n    @serializable() multiple: boolean;\n    @serializable() placeholder: string;\n    @serializable() prefix: string | null;\n    @serializable() suffix: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_SELECT;\n\n    constructor(config: DynamicSelectModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.compareWithFn = isFunction(config.compareWithFn) ? config.compareWithFn : Object.is;\n        this.filterable = isBoolean(config.filterable) ? config.filterable : false;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n        this.placeholder = config.placeholder ?? \"\";\n        this.prefix = config.prefix ?? null;\n        this.suffix = config.suffix ?? null;\n    }\n\n    select(...indices: number[]): void {\n        this.value = this.multiple ? indices.map(index => this.get(index).value) : this.get(indices[0]).value;\n    }\n}\n","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"../dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_SLIDER = \"SLIDER\";\n\nexport interface DynamicSliderModelConfig extends DynamicFormValueControlModelConfig<number> {\n\n    max?: number;\n    min?: number;\n    step?: number;\n    vertical?: boolean;\n}\n\nexport class DynamicSliderModel extends DynamicFormValueControlModel<number> {\n\n    @serializable() max: number | null;\n    @serializable() min: number | null;\n    @serializable() step: number | null;\n    @serializable() vertical: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;\n\n    constructor(config: DynamicSliderModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.max = isNumber(config.max) ? config.max : 10;\n        this.min = isNumber(config.min) ? config.min : 0;\n        this.step = isNumber(config.step) ? config.step : 1;\n        this.vertical = isBoolean(config.vertical) ? config.vertical : false;\n    }\n}","import { DynamicCheckControlModel, DynamicCheckControlModelConfig } from \"../dynamic-check-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_SWITCH = \"SWITCH\";\n\nexport interface DynamicSwitchModelConfig extends DynamicCheckControlModelConfig {\n\n    offLabel?: string;\n    onLabel?: string;\n}\n\nexport class DynamicSwitchModel extends DynamicCheckControlModel {\n\n    @serializable() offLabel: string | null;\n    @serializable() onLabel: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_SWITCH;\n\n    constructor(config: DynamicSwitchModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.offLabel = config.offLabel ?? null;\n        this.onLabel = config.onLabel ?? null;\n    }\n}\n","import { DynamicInputControlModel, DynamicInputControlModelConfig } from \"../dynamic-input-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = \"TEXTAREA\";\n\nexport const DYNAMIC_FORM_TEXTAREA_WRAP_HARD = \"hard\";\nexport const DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = \"soft\";\n\nexport interface DynamicTextAreaModelConfig extends DynamicInputControlModelConfig<string> {\n\n    cols?: number;\n    rows?: number;\n    wrap?: string;\n}\n\nexport class DynamicTextAreaModel extends DynamicInputControlModel<string> {\n\n    @serializable() cols: number;\n    @serializable() rows: number;\n    @serializable() wrap: string;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;\n\n    constructor(config: DynamicTextAreaModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.cols = isNumber(config.cols) ? config.cols : 20;\n        this.rows = isNumber(config.rows) ? config.rows : 2;\n        this.wrap = config.wrap ?? DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;\n    }\n}\n","import { DynamicDateControlModel, DynamicDateControlModelConfig } from \"../dynamic-date-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER = \"TIMEPICKER\";\n\nexport interface DynamicTimePickerModelConfig extends DynamicDateControlModelConfig {\n\n    meridian?: boolean;\n    showSeconds?: boolean;\n}\n\nexport class DynamicTimePickerModel extends DynamicDateControlModel {\n\n    @serializable() meridian: boolean;\n    @serializable() showSeconds: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER;\n\n    constructor(config: DynamicTimePickerModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.meridian = isBoolean(config.meridian) ? config.meridian : false;\n        this.showSeconds = isBoolean(config.showSeconds) ? config.showSeconds : false;\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, FormArray, FormControl, FormGroup } from \"@angular/forms\";\nimport { AbstractControlOptions } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormValueControlModel } from \"../model/dynamic-form-value-control.model\";\nimport {\n    DynamicFormArrayModel,\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n    DynamicFormArrayGroupModel\n} from \"../model/form-array/dynamic-form-array.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_GROUP, DynamicFormGroupModel } from \"../model/form-group/dynamic-form-group.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\n    DynamicCheckboxGroupModel\n} from \"../model/checkbox/dynamic-checkbox-group.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DynamicCheckboxModel } from \"../model/checkbox/dynamic-checkbox.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER,\n    DynamicColorPickerModel\n} from \"../model/colorpicker/dynamic-colorpicker.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\n    DynamicDatePickerModel\n} from \"../model/datepicker/dynamic-datepicker.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_EDITOR, DynamicEditorModel } from \"../model/editor/dynamic-editor.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD,\n    DynamicFileUploadModel\n} from \"../model/file-upload/dynamic-file-upload.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_INPUT, DynamicInputModel } from \"../model/input/dynamic-input.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP,\n    DynamicRadioGroupModel\n} from \"../model/radio/dynamic-radio-group.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_RATING, DynamicRatingModel } from \"../model/rating/dynamic-rating.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_SELECT, DynamicSelectModel } from \"../model/select/dynamic-select.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_SLIDER, DynamicSliderModel } from \"../model/slider/dynamic-slider.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_SWITCH, DynamicSwitchModel } from \"../model/switch/dynamic-switch.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DynamicTextAreaModel } from \"../model/textarea/dynamic-textarea.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER,\n    DynamicTimePickerModel\n} from \"../model/timepicker/dynamic-timepicker.model\";\nimport { DynamicFormValidationService } from \"./dynamic-form-validation.service\";\nimport { DynamicFormModel, DynamicUnionFormModel } from \"../model/dynamic-form.model\";\nimport { DynamicPathable } from \"../model/misc/dynamic-form-control-path.model\";\nimport { DynamicFormHook, DynamicValidatorsConfig } from \"../model/misc/dynamic-form-control-validation.model\";\nimport { maskFromString, parseReviver } from \"../utils/json.utils\";\nimport { isString } from \"../utils/core.utils\";\nimport { DynamicFormComponent } from \"../component/dynamic-form.component\";\nimport { DynamicFormComponentService } from \"./dynamic-form-component.service\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormService {\n\n    constructor(private componentService: DynamicFormComponentService,\n                private validationService: DynamicFormValidationService) {\n    }\n\n    private createAbstractControlOptions(validatorsConfig: DynamicValidatorsConfig | null = null,\n                                         asyncValidatorsConfig: DynamicValidatorsConfig | null = null,\n                                         updateOn: DynamicFormHook | null = null): AbstractControlOptions {\n\n        return {\n            asyncValidators: asyncValidatorsConfig !== null ? this.validationService.getAsyncValidators(asyncValidatorsConfig) : null,\n            validators: validatorsConfig !== null ? this.validationService.getValidators(validatorsConfig) : null,\n            updateOn: updateOn !== null && this.validationService.isFormHook(updateOn) ? updateOn : DynamicFormHook.Change\n        };\n    }\n\n    createFormArray(formArrayModel: DynamicFormArrayModel): FormArray {\n\n        const controls: AbstractControl[] = [];\n        const options = this.createAbstractControlOptions(formArrayModel.validators, formArrayModel.asyncValidators,\n            formArrayModel.updateOn);\n\n        for (let index = 0; index < formArrayModel.size; index++) {\n\n            const groupModel = formArrayModel.get(index);\n            const groupOptions = this.createAbstractControlOptions(formArrayModel.groupValidators,\n                formArrayModel.groupAsyncValidators, formArrayModel.updateOn);\n\n            controls.push(this.createFormGroup(groupModel.group, groupOptions, groupModel));\n        }\n\n        return new FormArray(controls, options);\n    }\n\n    createFormGroup(formModel: DynamicFormModel, options: AbstractControlOptions | null = null,\n                    parent: DynamicPathable | null = null): FormGroup {\n\n        const controls: { [controlId: string]: AbstractControl; } = {};\n\n        formModel.forEach(model => {\n\n            model.parent = parent;\n\n            switch (model.type) {\n\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n\n                    controls[model.id] = this.createFormArray(model as DynamicFormArrayModel);\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n\n                    const groupModel = model as DynamicFormGroupModel;\n                    const groupOptions = this.createAbstractControlOptions(groupModel.validators,\n                        groupModel.asyncValidators, groupModel.updateOn);\n\n                    controls[model.id] = this.createFormGroup(groupModel.group, groupOptions, groupModel);\n                    break;\n\n                default:\n\n                    const controlModel = model as DynamicFormValueControlModel<any>;\n                    const controlState = {value: controlModel.value, disabled: controlModel.disabled};\n                    const controlOptions = this.createAbstractControlOptions(controlModel.validators,\n                        controlModel.asyncValidators, controlModel.updateOn);\n\n                    controls[model.id] = new FormControl(controlState, controlOptions);\n            }\n        });\n\n        return new FormGroup(controls, options);\n    }\n\n    getPathSegment(model: DynamicPathable): string {\n        return model instanceof DynamicFormArrayGroupModel ? model.index.toString() : (model as DynamicFormControlModel).id;\n    }\n\n    getPath(model: DynamicPathable, join: boolean = false): string[] | string {\n\n        const path = [this.getPathSegment(model)];\n        let parent = model.parent;\n\n        while (parent) {\n\n            path.unshift(this.getPathSegment(parent));\n            parent = parent.parent;\n        }\n\n        return join ? path.join(\".\") : path;\n    }\n\n    addFormGroupControl(formGroup: FormGroup, formModel: DynamicUnionFormModel, ...models: DynamicFormModel): void {\n\n        if (formModel instanceof DynamicFormGroupModel) {\n\n            this.insertFormGroupControl(formModel.size(), formGroup, formModel, ...models);\n\n        } else {\n\n            const model = formModel as DynamicFormModel;\n            this.insertFormGroupControl(model.length, formGroup, model, ...models);\n        }\n    }\n\n    moveFormGroupControl(index: number, step: number, formModel: DynamicUnionFormModel): void {\n\n        if (formModel instanceof DynamicFormGroupModel) {\n\n            formModel.move(index, step);\n\n        } else {\n\n            const model = formModel as DynamicFormModel;\n            model.splice(index + step, 0, ...model.splice(index, 1));\n        }\n    }\n\n    insertFormGroupControl(index: number, formGroup: FormGroup, formModel: DynamicUnionFormModel,\n                           ...models: DynamicFormModel): void {\n\n        const parent = formModel instanceof DynamicFormGroupModel ? formModel : null;\n        const controls = this.createFormGroup(models, null, parent).controls;\n\n        Object.keys(controls).forEach((controlName, idx) => {\n\n            const controlModel = models[idx];\n\n            if (formModel instanceof DynamicFormGroupModel) {\n                formModel.insert(index, controlModel);\n\n            } else {\n                (formModel as DynamicFormModel).splice(index, 0, controlModel);\n            }\n\n            formGroup.addControl(controlName, controls[controlName]);\n        });\n    }\n\n    removeFormGroupControl(index: number, formGroup: FormGroup, formModel: DynamicUnionFormModel): void {\n\n        if (formModel instanceof DynamicFormGroupModel) {\n\n            formGroup.removeControl(formModel.get(index).id);\n            formModel.remove(index);\n\n        } else {\n\n            formGroup.removeControl(formModel[index].id);\n            (formModel as DynamicFormModel).splice(index, 1);\n        }\n    }\n\n    addFormArrayGroup(formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        const groupModel = formArrayModel.addGroup();\n\n        formArray.push(this.createFormGroup(groupModel.group, null, groupModel));\n    }\n\n    insertFormArrayGroup(index: number, formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        const groupModel = formArrayModel.insertGroup(index);\n\n        formArray.insert(index, this.createFormGroup(groupModel.group, null, groupModel));\n    }\n\n    moveFormArrayGroup(index: number, step: number, formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        const newIndex = index + step;\n        const moveUp = step >= 0;\n\n        if ((index >= 0 && index < formArrayModel.size) && (newIndex >= 0 && newIndex < formArrayModel.size)) {\n\n            const movingGroups: AbstractControl[] = [];\n\n            for (let i = moveUp ? index : newIndex; i <= (moveUp ? newIndex : index); i++) {\n                movingGroups.push(formArray.at(i));\n            }\n\n            movingGroups.forEach((formControl, idx) => {\n\n                let position;\n\n                if (moveUp) {\n                    position = idx === 0 ? newIndex : index + idx - 1;\n\n                } else {\n                    position = idx === movingGroups.length - 1 ? newIndex : newIndex + idx + 1;\n                }\n\n                formArray.setControl(position, formControl);\n            });\n\n            formArrayModel.moveGroup(index, step);\n\n        } else {\n            throw new Error(`form array group cannot be moved due to index or new index being out of bounds`);\n        }\n    }\n\n    removeFormArrayGroup(index: number, formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        formArray.removeAt(index);\n        formArrayModel.removeGroup(index);\n    }\n\n    clearFormArray(formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        formArray.clear();\n        formArrayModel.clear();\n    }\n\n    findById(id: string, formModel: DynamicFormModel): DynamicFormControlModel | null {\n\n        let result = null;\n\n        const findByIdFn = (modelId: string, groupModel: DynamicFormModel): void => {\n\n            for (const controlModel of groupModel) {\n\n                if (controlModel.id === modelId) {\n                    result = controlModel;\n                    break;\n                }\n\n                if (controlModel instanceof DynamicFormGroupModel) {\n                    findByIdFn(modelId, (controlModel as DynamicFormGroupModel).group);\n                }\n            }\n        };\n\n        findByIdFn(id, formModel);\n\n        return result;\n    }\n\n    findModelById<T extends DynamicFormControlModel>(id: string, formModel: DynamicFormModel): T | null {\n        return this.findById(id, formModel) as T;\n    }\n\n    findControlByModel<T extends AbstractControl>(model: DynamicFormControlModel, group: FormGroup): T | null {\n        return group.root.get(this.getPath(model, true)) as T;\n    }\n\n    detectChanges(formComponent?: DynamicFormComponent): void {\n\n        if (formComponent instanceof DynamicFormComponent) {\n\n            formComponent.markForCheck();\n            formComponent.detectChanges();\n\n        } else {\n\n            for (const form of this.componentService.getForms()) {\n                form.markForCheck();\n                form.detectChanges();\n            }\n        }\n    }\n\n    fromJSON(json: string | object[]): DynamicFormModel | never {\n\n        const formModelJSON = isString(json) ? JSON.parse(json, parseReviver) : json;\n        const formModel: DynamicFormModel = [];\n\n        formModelJSON.forEach((model: any) => {\n\n            const layout = model.layout ?? null;\n\n            switch (model.type) {\n\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                    const formArrayModel = model as DynamicFormArrayModel;\n\n                    if (Array.isArray(formArrayModel.groups)) {\n\n                        formArrayModel.groups.forEach((groupModel: DynamicFormArrayGroupModel) => {\n                            groupModel.group = this.fromJSON(groupModel.group) as DynamicFormModel;\n                        });\n                    }\n\n                    formArrayModel.groupFactory = () => {\n                        return this.fromJSON(formArrayModel.groupPrototype);\n                    };\n\n                    formModel.push(new DynamicFormArrayModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n                    formModel.push(new DynamicCheckboxModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n                    model.group = this.fromJSON(model.group) as DynamicCheckboxModel[];\n                    formModel.push(new DynamicCheckboxGroupModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER:\n                    formModel.push(new DynamicColorPickerModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n                    formModel.push(new DynamicDatePickerModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:\n                    formModel.push(new DynamicEditorModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD:\n                    model.value = null;\n                    formModel.push(new DynamicFileUploadModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                    model.group = this.fromJSON(model.group);\n                    formModel.push(new DynamicFormGroupModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n                    const inputModel = model as DynamicInputModel;\n\n                    if (inputModel.mask !== null) {\n                        if (!(inputModel.mask instanceof Function)) {\n                            inputModel.mask = maskFromString(inputModel.mask as string);\n                        }\n                    }\n\n                    formModel.push(new DynamicInputModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n                    formModel.push(new DynamicRadioGroupModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_RATING:\n                    formModel.push(new DynamicRatingModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n                    formModel.push(new DynamicSelectModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n                    formModel.push(new DynamicSliderModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n                    formModel.push(new DynamicSwitchModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n                    formModel.push(new DynamicTextAreaModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n                    formModel.push(new DynamicTimePickerModel(model, layout));\n                    break;\n\n                default:\n                    throw new Error(`unknown form control model type defined on JSON object with id \"${model.id}\"`);\n            }\n        });\n\n        return formModel;\n    }\n}\n","import { InjectionToken, Injector, ValueProvider } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormValidationService } from \"./dynamic-form-validation.service\";\nimport { isObject } from \"../utils/core.utils\";\nimport { DynamicValidatorsConfig } from \"../model/misc/dynamic-form-control-validation.model\";\nimport { DynamicFormService } from \"./dynamic-form.service\";\n\nexport const MATCH_DISABLED = \"DISABLED\";\nexport const MATCH_ENABLED = \"ENABLED\";\nexport const MATCH_HIDDEN = \"HIDDEN\";\nexport const MATCH_OPTIONAL = \"OPTIONAL\";\nexport const MATCH_REQUIRED = \"REQUIRED\";\nexport const MATCH_VISIBLE = \"VISIBLE\";\n\nexport const AND_OPERATOR = \"AND\";\nexport const OR_OPERATOR = \"OR\";\n\nexport interface DynamicFormControlMatcher {\n\n    match: string;\n    opposingMatch: string | null;\n\n    onChange(hasMatch: boolean, model: DynamicFormControlModel, control: FormControl, injector: Injector): void;\n}\n\nexport const DYNAMIC_MATCHERS = new InjectionToken<DynamicFormControlMatcher>(\"DYNAMIC_MATCHERS\");\n\nexport const DISABLED_MATCHER: DynamicFormControlMatcher = {\n\n    match: MATCH_DISABLED,\n    opposingMatch: MATCH_ENABLED,\n    onChange(hasMatch, model) {\n        model.disabled = hasMatch;\n    }\n};\n\nexport const HIDDEN_MATCHER: DynamicFormControlMatcher = {\n\n    match: MATCH_HIDDEN,\n    opposingMatch: MATCH_VISIBLE,\n    onChange(hasMatch, model) {\n        model.hidden = hasMatch;\n    }\n};\n\nexport const REQUIRED_MATCHER: DynamicFormControlMatcher = {\n\n    match: MATCH_REQUIRED,\n    opposingMatch: MATCH_OPTIONAL,\n    onChange(hasMatch, model, control, injector) {\n\n        let validatorsConfig = null;\n\n        if (hasMatch) {\n\n            validatorsConfig = isObject(model.validators) ? {...model.validators, required: null} : {required: null};\n\n        } else {\n\n            if (isObject(model.validators)) {\n\n                delete (model.validators as Pick<DynamicValidatorsConfig, \"required\">).required;\n                validatorsConfig = {...model.validators};\n            }\n        }\n\n        injector.get(DynamicFormValidationService).updateValidators(validatorsConfig, control, model);\n        injector.get(DynamicFormService).detectChanges();\n    }\n};\n\nexport const DISABLED_MATCHER_PROVIDER: ValueProvider = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: DISABLED_MATCHER,\n    multi: true\n};\n\nexport const HIDDEN_MATCHER_PROVIDER: ValueProvider = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: HIDDEN_MATCHER,\n    multi: true\n};\n\nexport const REQUIRED_MATCHER_PROVIDER: ValueProvider = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: REQUIRED_MATCHER,\n    multi: true\n};\n\nexport const DYNAMIC_MATCHER_PROVIDERS = [DISABLED_MATCHER_PROVIDER, HIDDEN_MATCHER_PROVIDER, REQUIRED_MATCHER_PROVIDER];\n","import { Inject, Injectable, Injector, Optional } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport {\n    AND_OPERATOR,\n    DYNAMIC_MATCHERS,\n    DynamicFormControlMatcher,\n    OR_OPERATOR\n} from \"./dynamic-form-relation-matchers\";\nimport { DynamicFormControlRelation } from \"../model/misc/dynamic-form-control-relation.model\";\nimport { startWith } from \"rxjs/operators\";\nimport { merge, Subscription } from \"rxjs\";\n\nexport type DynamicRelatedFormControls = { [key: string]: FormControl };\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormRelationService {\n\n    constructor(@Optional() @Inject(DYNAMIC_MATCHERS) private MATCHERS: DynamicFormControlMatcher[],\n                private injector: Injector) {\n    }\n\n    getRelatedFormControls(model: DynamicFormControlModel, group: FormGroup): DynamicRelatedFormControls {\n\n        const conditionReducer = (controls, condition) => {\n\n            const path = condition.rootPath ?? condition.id;\n\n            if (!controls.hasOwnProperty(path)) {\n\n                const control = condition.rootPath ? group.root.get(condition.rootPath) : group.get(condition.id);\n\n                control instanceof FormControl ? controls[path] = control : console.warn(`No related form control with id ${condition.id} could be found`);\n            }\n\n            return controls;\n        };\n\n        const relationReducer = (controls, relation) => relation.when.reduce(conditionReducer, controls);\n\n        return model.relations.reduce(relationReducer, {});\n    }\n\n    findRelationByMatcher(relations: DynamicFormControlRelation[], matcher: DynamicFormControlMatcher): DynamicFormControlRelation | undefined {\n        return relations.find(relation => [matcher.match, matcher.opposingMatch].includes(relation.match));\n    }\n\n    matchesCondition(relation: DynamicFormControlRelation, relatedFormControls: DynamicRelatedFormControls, matcher: DynamicFormControlMatcher): boolean {\n\n        const operator = relation.operator ?? OR_OPERATOR;\n\n        return relation.when.reduce((hasAlreadyMatched, condition, index) => {\n\n            const path = condition.rootPath ?? condition.id;\n\n            let relatedFormControl;\n\n            for (const [key, control] of Object.entries(relatedFormControls)) {\n                if (key === path) {\n                    relatedFormControl = control;\n                    break;\n                }\n            }\n\n            if (relatedFormControl && relation.match === matcher.match) {\n\n                if (index > 0 && operator === AND_OPERATOR && !hasAlreadyMatched) {\n                    return false;\n                }\n\n                if (index > 0 && operator === OR_OPERATOR && hasAlreadyMatched) {\n                    return true;\n                }\n\n                return condition.value === relatedFormControl.value || condition.status === relatedFormControl.status;\n            }\n\n            if (relatedFormControl && relation.match === matcher.opposingMatch) {\n\n                if (index > 0 && operator === AND_OPERATOR && hasAlreadyMatched) {\n                    return true;\n                }\n\n                if (index > 0 && operator === OR_OPERATOR && !hasAlreadyMatched) {\n                    return false;\n                }\n\n                return !(condition.value === relatedFormControl.value || condition.status === relatedFormControl.status);\n            }\n\n            return false;\n\n        }, false);\n    }\n\n    subscribeRelations(model: DynamicFormControlModel, group: FormGroup, control: FormControl): Subscription[] {\n\n        const relatedFormControls = this.getRelatedFormControls(model, group);\n        const subscriptions: Subscription[] = [];\n\n        Object.values(relatedFormControls).forEach(relatedControl => {\n\n            const valueChanges = relatedControl.valueChanges.pipe(startWith(relatedControl.value));\n            const statusChanges = relatedControl.statusChanges.pipe(startWith(relatedControl.status));\n\n            subscriptions.push(merge(valueChanges, statusChanges).subscribe(() => {\n\n                this.MATCHERS.forEach(matcher => {\n\n                    const relation = this.findRelationByMatcher(model.relations, matcher);\n\n                    if (relation !== undefined) {\n\n                        const hasMatch = this.matchesCondition(relation, relatedFormControls, matcher);\n                        matcher.onChange(hasMatch, model, control, this.injector);\n                    }\n                });\n            }));\n        });\n\n        return subscriptions;\n    }\n}\n","import { ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, EventEmitter, OnChanges, OnDestroy, QueryList, SimpleChanges, Type, ViewContainerRef, Directive } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport {\n    DynamicFormControlCustomEvent,\n    DynamicFormControlEvent,\n    DynamicFormControlEventType,\n    isDynamicFormControlEvent\n} from \"./dynamic-form-control-event\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormValueControlModel } from \"../model/dynamic-form-value-control.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n    DynamicFormArrayGroupModel\n} from \"../model/form-array/dynamic-form-array.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX } from \"../model/checkbox/dynamic-checkbox.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE,\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\n    DynamicInputModel\n} from \"../model/input/dynamic-input.model\";\nimport {\n    DynamicFormControlLayout,\n    DynamicFormControlLayoutContext,\n    DynamicFormControlLayoutPlace\n} from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicFormControl } from \"./dynamic-form-control-interface\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormLayout, DynamicFormLayoutService } from \"../service/dynamic-form-layout.service\";\nimport { DynamicFormValidationService } from \"../service/dynamic-form-validation.service\";\nimport { DynamicFormComponentService } from \"../service/dynamic-form-component.service\";\nimport { isString } from \"../utils/core.utils\";\nimport { DynamicFormRelationService } from \"../service/dynamic-form-relation.service\";\nimport { DynamicFormGroupComponent } from \"./dynamic-form-group.component\";\nimport { DynamicFormArrayComponent } from \"./dynamic-form-array.component\";\n\n@Directive()\nexport abstract class DynamicFormControlContainerComponent implements OnChanges, OnDestroy {\n\n    private _hasFocus = false;\n\n    context: DynamicFormArrayGroupModel | null = null;\n    control: FormControl;\n    group: FormGroup;\n    hostClass: string[];\n    klass: string;\n    layout: DynamicFormLayout;\n    model: DynamicFormControlModel;\n\n    contentTemplateList: QueryList<DynamicTemplateDirective> | undefined;\n    inputTemplateList: QueryList<DynamicTemplateDirective> | undefined;\n\n    blur: EventEmitter<DynamicFormControlEvent>;\n    change: EventEmitter<DynamicFormControlEvent>;\n    customEvent: EventEmitter<DynamicFormControlEvent> | undefined;\n    focus: EventEmitter<DynamicFormControlEvent>;\n\n    componentViewContainerRef: ViewContainerRef;\n\n    protected componentRef: ComponentRef<DynamicFormControl>;\n    protected componentSubscriptions: Subscription[] = [];\n    protected controlLayout: DynamicFormControlLayout;\n    protected subscriptions: Subscription[] = [];\n\n    protected constructor(protected changeDetectorRef: ChangeDetectorRef,\n                          protected componentFactoryResolver: ComponentFactoryResolver,\n                          protected layoutService: DynamicFormLayoutService,\n                          protected validationService: DynamicFormValidationService,\n                          protected componentService: DynamicFormComponentService,\n                          protected relationService: DynamicFormRelationService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n        const groupChange = (changes as Pick<SimpleChanges, \"group\">).group;\n        const layoutChange = (changes as Pick<SimpleChanges, \"layout\">).layout;\n        const modelChange = (changes as Pick<SimpleChanges, \"model\">).model;\n\n        if (layoutChange || modelChange) {\n            this.onLayoutOrModelChange();\n        }\n\n        if (modelChange) {\n            this.onModelChange();\n        }\n\n        if (groupChange || modelChange) {\n            this.onGroupOrModelChange();\n        }\n    }\n\n    ngOnDestroy() {\n\n        this.destroyFormControlComponent();\n        this.unsubscribe();\n    }\n\n    abstract get componentType(): Type<DynamicFormControl> | null;\n\n    get id(): string {\n        return this.layoutService.getElementId(this.model);\n    }\n\n    get hasFocus(): boolean {\n        return this._hasFocus;\n    }\n\n    get isInvalid(): boolean {\n        return this.control.invalid;\n    }\n\n    get isValid(): boolean {\n        return this.control.valid;\n    }\n\n    get errorMessages(): string[] {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n\n    get showErrorMessages(): boolean {\n        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n    }\n\n    get hasLabel(): boolean {\n        return isString(this.model.label);\n    }\n\n    get hasHint(): boolean {\n        return isString((this.model as DynamicFormValueControlModel<any>).hint);\n    }\n\n    get hint(): string | null {\n        return (this.model as DynamicFormValueControlModel<any>).hint ?? null;\n    }\n\n    get isCheckbox(): boolean {\n        return this.model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n    }\n\n    get templates(): QueryList<DynamicTemplateDirective> | undefined {\n        return this.inputTemplateList !== undefined ? this.inputTemplateList : this.contentTemplateList;\n    }\n\n    get startTemplate(): DynamicTemplateDirective | undefined {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getStartTemplate(this.model, this.templates) : undefined;\n    }\n\n    get endTemplate(): DynamicTemplateDirective | undefined {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getEndTemplate(this.model, this.templates) : undefined;\n    }\n\n    getClass(context: DynamicFormControlLayoutContext, place: DynamicFormControlLayoutPlace): string {\n        return this.layoutService.getClass(this.controlLayout, context, place);\n    }\n\n    markForCheck(): void {\n\n        this.changeDetectorRef.markForCheck();\n\n        const component = this.componentRef && this.componentRef.instance;\n\n        if (component && (component instanceof DynamicFormGroupComponent || component instanceof DynamicFormArrayComponent)) {\n            component.markForCheck();\n        }\n    }\n\n    protected createFormControlComponent(): void {\n\n        const componentType = this.componentType;\n\n        if (componentType !== null) {\n\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n            this.componentViewContainerRef.clear();\n            this.componentRef = this.componentViewContainerRef.createComponent(componentFactory);\n\n            const component = this.componentRef.instance;\n\n            component.formLayout = this.layout;\n            component.group = this.group;\n            component.layout = this.controlLayout;\n            component.model = this.model;\n\n            if (this.templates) {\n                component.templates = this.templates;\n            }\n\n            this.componentSubscriptions.push(component.blur.subscribe(($event: any) => this.onBlur($event)));\n            this.componentSubscriptions.push(component.change.subscribe(($event: any) => this.onChange($event)));\n            this.componentSubscriptions.push(component.focus.subscribe(($event: any) => this.onFocus($event)));\n\n            if (component.customEvent !== undefined) {\n                this.componentSubscriptions.push(\n                    component.customEvent.subscribe(($event: any) => this.onCustomEvent($event)));\n            }\n\n            this.registerFormControlComponentRef(this.componentRef);\n        }\n    }\n\n    protected destroyFormControlComponent(): void {\n\n        if (this.componentRef) {\n\n            this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n            this.componentSubscriptions = [];\n\n            this.unregisterFormControlComponentRef();\n            this.componentRef.destroy();\n        }\n    }\n\n    protected createDynamicFormControlEvent($event: any, type: string): DynamicFormControlEvent {\n        return {$event, context: this.context, control: this.control, group: this.group, model: this.model, type};\n    }\n\n    unsubscribe(): void {\n\n        // this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n        // this.componentSubscriptions = [];\n\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    onControlValueChanges(value: any): void {\n        if (this.model instanceof DynamicFormValueControlModel && this.model.value !== value) {\n            this.model.value = value;\n        }\n    }\n\n    onModelValueUpdates(value: any): void {\n        if (this.control.value !== value) {\n            this.control.setValue(value);\n        }\n    }\n\n    onModelDisabledUpdates(disabled: boolean): void {\n        disabled ? this.control.disable() : this.control.enable();\n    }\n\n    onLayoutOrModelChange(): void {\n        this.controlLayout = this.layoutService.findByModel(this.model, this.layout) ?? this.model.layout as DynamicFormControlLayout;\n        this.klass = `${Array.isArray(this.hostClass) ? this.hostClass.join(\" \") : \"\"} ${this.layoutService.getHostClass(this.controlLayout)}`;\n    }\n\n    onModelChange(): void {\n        this.destroyFormControlComponent();\n        this.createFormControlComponent();\n    }\n\n    onGroupOrModelChange(): void {\n\n        if (this.model) {\n\n            this.unsubscribe();\n\n            if (this.group) {\n\n                this.control = this.group.get(this.model.id) as FormControl;\n                this.subscriptions.push(this.control.valueChanges.subscribe(value => this.onControlValueChanges(value)));\n            }\n\n            this.subscriptions.push(this.model.disabledChanges.subscribe(value => this.onModelDisabledUpdates(value)));\n\n            if (this.model instanceof DynamicFormValueControlModel) {\n\n                const model = this.model as DynamicFormValueControlModel<any>;\n\n                this.subscriptions.push(model.valueChanges.subscribe(value => this.onModelValueUpdates(value)));\n            }\n\n            if (this.model.relations.length > 0) {\n\n                this.subscriptions.push(...this.relationService.subscribeRelations(this.model, this.group, this.control));\n            }\n        }\n    }\n\n    onChange($event: Event | DynamicFormControlEvent | any): void {\n\n        if ($event instanceof Event) { // native HTML5 change event\n\n            if (this.model.type === DYNAMIC_FORM_CONTROL_TYPE_INPUT) {\n\n                const model = this.model as DynamicInputModel;\n\n                if (model.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE) {\n\n                    const inputElement: any = $event.target ?? $event.srcElement;\n\n                    model.files = inputElement.files as FileList;\n                }\n            }\n\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n\n        } else if (isDynamicFormControlEvent($event)) { // event bypass\n\n            this.change.emit($event);\n\n        } else { // custom library value change event\n\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n        }\n    }\n\n    onBlur($event: FocusEvent | DynamicFormControlEvent | any): void {\n\n        if (isDynamicFormControlEvent($event)) { // event bypass\n\n            this.blur.emit($event);\n\n        } else { // native HTML 5 or UI library blur event\n\n            this._hasFocus = false;\n            this.blur.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Blur));\n        }\n    }\n\n    onFocus($event: FocusEvent | DynamicFormControlEvent | any): void {\n\n        if (isDynamicFormControlEvent($event)) { // event bypass\n\n            this.focus.emit($event);\n\n        } else { // native HTML 5 or UI library focus event\n\n            this._hasFocus = true;\n            this.focus.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Focus));\n        }\n    }\n\n    onCustomEvent($event: DynamicFormControlEvent | DynamicFormControlCustomEvent): void {\n\n        const emitter = this.customEvent as EventEmitter<DynamicFormControlEvent>;\n\n        if (isDynamicFormControlEvent($event)) { // child event bypass\n\n            emitter.emit($event);\n\n        } else { // native UI library custom event\n\n            emitter.emit(this.createDynamicFormControlEvent($event.customEvent, $event.customEventType));\n        }\n    }\n\n    private registerFormControlComponentRef(ref: ComponentRef<DynamicFormControl>): void {\n\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n\n            this.componentService.registerFormControl(this.model, ref, this.context.index);\n\n        } else {\n            this.componentService.registerFormControl(this.model, ref);\n        }\n    }\n\n    private unregisterFormControlComponentRef(): void {\n\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n\n            this.componentService.unregisterFormControl(this.model.id, this.context.index);\n\n        } else {\n            this.componentService.unregisterFormControl(this.model.id);\n        }\n    }\n}\n","import { AfterViewInit, QueryList, TemplateRef, Directive } from \"@angular/core\";\nimport { DynamicFormControlWithTemplate } from \"./dynamic-form-control-with-template-interface\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormControlComponent } from \"./dynamic-form-control.component\";\nimport { isString } from \"../utils/core.utils\";\nimport { DynamicFormLayoutService } from \"../service/dynamic-form-layout.service\";\nimport { DynamicFormValidationService } from \"../service/dynamic-form-validation.service\";\n\n@Directive()\nexport abstract class DynamicFormControlWithTemplateComponent extends DynamicFormControlComponent\n    implements DynamicFormControlWithTemplate, AfterViewInit {\n\n    readonly templateDirectives: Map<string, string>;\n\n    templates: QueryList<DynamicTemplateDirective> | DynamicTemplateDirective[] | undefined;\n\n    protected constructor(protected layoutService: DynamicFormLayoutService,\n                          protected validationService: DynamicFormValidationService) {\n        super(layoutService, validationService);\n    }\n\n    ngAfterViewInit() {\n\n        this.layoutService\n            .filterTemplatesByModel(this.model, this.templates)\n            .forEach(template => this.bindTemplate(template));\n    }\n\n    abstract get viewChild(): any;\n\n    abstract mapTemplate(template: DynamicTemplateDirective): DynamicTemplateDirective | TemplateRef<any>;\n\n    bindTemplate(template: DynamicTemplateDirective) {\n\n        if (isString(template.as) && this.templateDirectives.has(template.as)) {\n\n            const property = this.templateDirectives.get(template.as) as string;\n\n            this.viewChild[property] = this.mapTemplate(template);\n        }\n    }\n}\n","import { Directive, ElementRef, Input, Renderer2, AfterViewInit } from \"@angular/core\";\nimport { isString } from \"../utils/core.utils\";\n\n@Directive({\n    selector: \"[dynamicList]\"\n})\nexport class DynamicListDirective implements AfterViewInit {\n\n    @Input(\"dynamicList\") listId: string | null;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    ngAfterViewInit() {\n\n        if (isString(this.listId)) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, \"list\", this.listId as string);\n        }\n    }\n}","export const AUTOCOMPLETE_OFF = \"off\";\nexport const AUTOCOMPLETE_ON = \"on\";\n\nexport const AUTOFILL_TOKEN_BILLING = \"billing\";\nexport const AUTOFILL_TOKEN_SHIPPING = \"shipping\";\n\nexport const AUTOFILL_TOKENS_ADDRESS = [AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_SHIPPING];\n\nexport const AUTOFILL_TOKEN_HOME = \"home\";\nexport const AUTOFILL_TOKEN_WORK = \"work\";\nexport const AUTOFILL_TOKEN_MOBILE = \"mobile\";\nexport const AUTOFILL_TOKEN_FAX = \"fax\";\nexport const AUTOFILL_TOKEN_PAGER = \"pager\";\n\nexport const AUTOFILL_TOKENS_CONTACT = [\n    AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_WORK\n];\n\nexport const AUTOFILL_FIELD_STREET_ADDRESS = \"street-address\";\nexport const AUTOFILL_FIELD_ADDRESS_LINE_1 = \"address-line1\";\nexport const AUTOFILL_FIELD_ADDRESS_LINE_2 = \"address-line2\";\nexport const AUTOFILL_FIELD_ADDRESS_LINE_3 = \"address-line3\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_4 = \"address-level4\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_3 = \"address-level3\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_2 = \"address-level2\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_1 = \"address-level1\";\n\nexport const AUTOFILL_FIELD_NAME = \"name\";\nexport const AUTOFILL_FIELD_HONORIFIC_PREFIX = \"honorific-prefix\";\nexport const AUTOFILL_FIELD_GIVEN_NAME = \"given-name\";\nexport const AUTOFILL_FIELD_ADDITIONAL_NAME = \"additional-name\";\nexport const AUTOFILL_FIELD_FAMILY_NAME = \"family-name\";\nexport const AUTOFILL_FIELD_HONORIFIC_SUFFIX = \"honorific-suffix\";\nexport const AUTOFILL_FIELD_NICKNAME = \"nickname\";\nexport const AUTOFILL_FIELD_USERNAME = \"username\";\n\nexport const AUTOFILL_FIELD_NEW_PASSWORD = \"new-password\";\nexport const AUTOFILL_FIELD_CURRENT_PASSWORD = \"current-password\";\n\nexport const AUTOFILL_FIELD_ORGANIZATION_TITLE = \"organization-title\";\nexport const AUTOFILL_FIELD_ORGANIZATION = \"organization\";\n\nexport const AUTOFILL_FIELD_COUNTRY = \"country\";\nexport const AUTOFILL_FIELD_COUNTRY_NAME = \"country-name\";\nexport const AUTOFILL_FIELD_POSTAL_CODE = \"postal-code\";\n\nexport const AUTOFILL_FIELD_CC_NAME = \"cc-name\";\nexport const AUTOFILL_FIELD_CC_GIVEN_NAME = \"cc-given-name\";\nexport const AUTOFILL_FIELD_CC_ADDITIONAL_NAME = \"cc-additional-name\";\nexport const AUTOFILL_FIELD_CC_FAMILY_NAME = \"cc-family-name\";\nexport const AUTOFILL_FIELD_CC_NUMBER = \"cc-number\";\nexport const AUTOFILL_FIELD_CC_EXP = \"cc-exp\";\nexport const AUTOFILL_FIELD_CC_EXP_MONTH = \"cc-exp-month\";\nexport const AUTOFILL_FIELD_CC_EXP_YEAR = \"cc-exp-year\";\nexport const AUTOFILL_FIELD_CC_CSC = \"cc-csc\";\nexport const AUTOFILL_FIELD_CC_TYPE = \"cc-type\";\n\nexport const AUTOFILL_FIELD_TRANSACTION_CURRENCY = \"transaction-currency\";\nexport const AUTOFILL_FIELD_TRANSACTION_AMOUNT = \"transaction-amount\";\n\nexport const AUTOFILL_FIELD_LANGUAGE = \"language\";\n\nexport const AUTOFILL_FIELD_BDAY = \"bday\";\nexport const AUTOFILL_FIELD_BDAY_DAY = \"bday-day\";\nexport const AUTOFILL_FIELD_BDAY_MONTH = \"bday-month\";\nexport const AUTOFILL_FIELD_BDAY_YEAR = \"bday-year\";\n\nexport const AUTOFILL_FIELD_SEX = \"sex\";\n\nexport const AUTOFILL_FIELD_URL = \"url\";\n\nexport const AUTOFILL_FIELD_PHOTO = \"photo\";\n\nexport const AUTOFILL_FIELDS = [\n    AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2,\n    AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LEVEL_3,\n    AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_NAME,\n    AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_USERNAME,\n    AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_ORGANIZATION_TITLE,\n    AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_POSTAL_CODE,\n    AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH,\n    AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_TRANSACTION_CURRENCY,\n    AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY,\n    AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_PHOTO\n];\n\nexport const AUTOFILL_FIELD_TEL = \"tel\";\nexport const AUTOFILL_FIELD_TEL_COUNTRY_CODE = \"tel-country-code\";\nexport const AUTOFILL_FIELD_TEL_NATIONAL = \"tel-national\";\nexport const AUTOFILL_FIELD_TEL_AREA_CODE = \"tel-area-code\";\nexport const AUTOFILL_FIELD_TEL_LOCAL = \"tel-local\";\nexport const AUTOFILL_FIELD_TEL_LOCAL_PREFIX = \"tel-local-prefix\";\nexport const AUTOFILL_FIELD_TEL_LOCAL_SUFFIX = \"tel-local-suffix\";\nexport const AUTOFILL_FIELD_TEL_LOCAL_EXTENSION = \"tel-extension\";\nexport const AUTOFILL_FIELD_EMAIL = \"email\";\nexport const AUTOFILL_FIELD_IMPP = \"impp\";\n\nexport const AUTOFILL_FIELDS_CONTACT = [\n    AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TEL_AREA_CODE,\n    AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX,\n    AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_IMPP\n];\n\nexport function isAddressToken(token: string): boolean {\n    return AUTOFILL_TOKENS_ADDRESS.indexOf(token) > -1;\n}\n\nexport function isContactField(token: string): boolean {\n    return AUTOFILL_FIELDS_CONTACT.indexOf(token) > -1;\n}\n\nexport function isContactToken(token: string): boolean {\n    return AUTOFILL_TOKENS_CONTACT.indexOf(token) > -1;\n}\n\nexport function isField(token: string): boolean {\n    return AUTOFILL_FIELDS.indexOf(token) > -1;\n}\n\nexport function isSectionToken(token: string): boolean {\n    return token.startsWith(\"section-\");\n}\n\nexport function validate(tokens: string): boolean {\n\n    const toExpression = (total: string, currentValue: string) => `${total}|${currentValue}`;\n    const tokensAddress = AUTOFILL_TOKENS_ADDRESS.reduce(toExpression);\n    const tokensContact = AUTOFILL_TOKENS_CONTACT.reduce(toExpression);\n    const fields = AUTOFILL_FIELDS.reduce(toExpression);\n    const fieldsContact = AUTOFILL_FIELDS_CONTACT.reduce(toExpression);\n    const regex = new RegExp(`^(section-\\\\w+\\\\s{1})?((${tokensAddress}){1}\\\\s)?((${fields}){1}|((${tokensContact}){1}\\\\s{1}(${fieldsContact})))$`);\n\n    return regex.test(tokens);\n}\n","import { CommonModule } from \"@angular/common\";\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { DynamicListDirective } from \"./directive/dynamic-list.directive\";\nimport { DynamicTemplateDirective } from \"./directive/dynamic-template.directive\";\nimport { DynamicFormService } from \"./service/dynamic-form.service\";\nimport { DynamicFormLayoutService } from \"./service/dynamic-form-layout.service\";\nimport { DynamicFormValidationService } from \"./service/dynamic-form-validation.service\";\nimport { DynamicFormComponentService } from \"./service/dynamic-form-component.service\";\nimport { DynamicFormRelationService } from \"./service/dynamic-form-relation.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        DynamicListDirective,\n        DynamicTemplateDirective\n    ],\n    exports: [\n        DynamicListDirective,\n        DynamicTemplateDirective\n    ]\n})\nexport class DynamicFormsCoreModule {\n\n    /*@deprecated*/\n    static forRoot(): ModuleWithProviders<DynamicFormsCoreModule> {\n\n        return {\n            ngModule: DynamicFormsCoreModule,\n            providers: [\n                DynamicFormService,\n                DynamicFormLayoutService,\n                DynamicFormValidationService,\n                DynamicFormComponentService,\n                DynamicFormRelationService\n            ]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}