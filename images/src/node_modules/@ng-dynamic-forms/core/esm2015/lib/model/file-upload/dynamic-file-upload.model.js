import { __decorate, __metadata } from "tslib";
import { DynamicFileControlModel } from "../dynamic-file-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isBoolean, isNumber } from "../../utils/core.utils";
export const DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD = "FILE_UPLOAD";
export class DynamicFileUploadModel extends DynamicFileControlModel {
    constructor(config, layout) {
        var _a, _b;
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD;
        this.accept = Array.isArray(config.accept) ? config.accept : null;
        this.autoUpload = isBoolean(config.autoUpload) ? config.autoUpload : true;
        this.maxSize = isNumber(config.maxSize) ? config.maxSize : null;
        this.minSize = isNumber(config.minSize) ? config.minSize : null;
        this.removeUrl = (_a = config.removeUrl) !== null && _a !== void 0 ? _a : null;
        this.showFileList = isBoolean(config.showFileList) ? config.showFileList : true;
        this.url = (_b = config.url) !== null && _b !== void 0 ? _b : null;
    }
}
__decorate([
    serializable(),
    __metadata("design:type", Array)
], DynamicFileUploadModel.prototype, "accept", void 0);
__decorate([
    serializable(),
    __metadata("design:type", Boolean)
], DynamicFileUploadModel.prototype, "autoUpload", void 0);
__decorate([
    serializable(),
    __metadata("design:type", Number)
], DynamicFileUploadModel.prototype, "maxSize", void 0);
__decorate([
    serializable(),
    __metadata("design:type", Number)
], DynamicFileUploadModel.prototype, "minSize", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicFileUploadModel.prototype, "removeUrl", void 0);
__decorate([
    serializable(),
    __metadata("design:type", Boolean)
], DynamicFileUploadModel.prototype, "showFileList", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicFileUploadModel.prototype, "url", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicFileUploadModel.prototype, "type", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1maWxlLXVwbG9hZC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWR5bmFtaWMtZm9ybXMvY29yZS9zcmMvbGliL21vZGVsL2ZpbGUtdXBsb2FkL2R5bmFtaWMtZmlsZS11cGxvYWQubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBaUMsdUJBQXVCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUV2RyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUU3RCxNQUFNLENBQUMsTUFBTSxxQ0FBcUMsR0FBRyxhQUFhLENBQUM7QUFhbkUsTUFBTSxPQUFPLHNCQUF1QixTQUFRLHVCQUF1QjtJQVkvRCxZQUFZLE1BQW9DLEVBQUUsTUFBaUM7O1FBRS9FLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFKRCxTQUFJLEdBQVcscUNBQXFDLENBQUM7UUFNMUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2xFLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzFFLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2hFLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2hFLElBQUksQ0FBQyxTQUFTLFNBQUcsTUFBTSxDQUFDLFNBQVMsbUNBQUksSUFBSSxDQUFDO1FBQzFDLElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2hGLElBQUksQ0FBQyxHQUFHLFNBQUcsTUFBTSxDQUFDLEdBQUcsbUNBQUksSUFBSSxDQUFDO0lBQ2xDLENBQUM7Q0FDSjtBQXRCbUI7SUFBZixZQUFZLEVBQUU7O3NEQUF5QjtBQUN4QjtJQUFmLFlBQVksRUFBRTs7MERBQXFCO0FBQ3BCO0lBQWYsWUFBWSxFQUFFOzt1REFBd0I7QUFDdkI7SUFBZixZQUFZLEVBQUU7O3VEQUF3QjtBQUN2QjtJQUFmLFlBQVksRUFBRTs7eURBQTBCO0FBQ3pCO0lBQWYsWUFBWSxFQUFFOzs0REFBdUI7QUFDdEI7SUFBZixZQUFZLEVBQUU7O21EQUFvQjtBQUVuQjtJQUFmLFlBQVksRUFBRTs7b0RBQStEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHluYW1pY0ZpbGVDb250cm9sTW9kZWxDb25maWcsIER5bmFtaWNGaWxlQ29udHJvbE1vZGVsIH0gZnJvbSBcIi4uL2R5bmFtaWMtZmlsZS1jb250cm9sLm1vZGVsXCI7XG5pbXBvcnQgeyBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQgfSBmcm9tIFwiLi4vbWlzYy9keW5hbWljLWZvcm0tY29udHJvbC1sYXlvdXQubW9kZWxcIjtcbmltcG9ydCB7IHNlcmlhbGl6YWJsZSB9IGZyb20gXCIuLi8uLi9kZWNvcmF0b3Ivc2VyaWFsaXphYmxlLmRlY29yYXRvclwiO1xuaW1wb3J0IHsgaXNCb29sZWFuLCBpc051bWJlciB9IGZyb20gXCIuLi8uLi91dGlscy9jb3JlLnV0aWxzXCI7XG5cbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX0ZJTEVfVVBMT0FEID0gXCJGSUxFX1VQTE9BRFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNGaWxlVXBsb2FkTW9kZWxDb25maWcgZXh0ZW5kcyBEeW5hbWljRmlsZUNvbnRyb2xNb2RlbENvbmZpZyB7XG5cbiAgICBhY2NlcHQ/OiBzdHJpbmdbXTtcbiAgICBhdXRvVXBsb2FkPzogYm9vbGVhbjtcbiAgICBtYXhTaXplPzogbnVtYmVyO1xuICAgIG1pblNpemU/OiBudW1iZXI7XG4gICAgcmVtb3ZlVXJsPzogc3RyaW5nO1xuICAgIHNob3dGaWxlTGlzdD86IGJvb2xlYW47XG4gICAgdXJsPzogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgRHluYW1pY0ZpbGVVcGxvYWRNb2RlbCBleHRlbmRzIER5bmFtaWNGaWxlQ29udHJvbE1vZGVsIHtcblxuICAgIEBzZXJpYWxpemFibGUoKSBhY2NlcHQ6IHN0cmluZ1tdIHwgbnVsbDtcbiAgICBAc2VyaWFsaXphYmxlKCkgYXV0b1VwbG9hZDogYm9vbGVhbjtcbiAgICBAc2VyaWFsaXphYmxlKCkgbWF4U2l6ZTogbnVtYmVyIHwgbnVsbDtcbiAgICBAc2VyaWFsaXphYmxlKCkgbWluU2l6ZTogbnVtYmVyIHwgbnVsbDtcbiAgICBAc2VyaWFsaXphYmxlKCkgcmVtb3ZlVXJsOiBzdHJpbmcgfCBudWxsO1xuICAgIEBzZXJpYWxpemFibGUoKSBzaG93RmlsZUxpc3Q6IGJvb2xlYW47XG4gICAgQHNlcmlhbGl6YWJsZSgpIHVybDogc3RyaW5nIHwgbnVsbDtcblxuICAgIEBzZXJpYWxpemFibGUoKSByZWFkb25seSB0eXBlOiBzdHJpbmcgPSBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX0ZJTEVfVVBMT0FEO1xuXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBEeW5hbWljRmlsZVVwbG9hZE1vZGVsQ29uZmlnLCBsYXlvdXQ/OiBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQpIHtcblxuICAgICAgICBzdXBlcihjb25maWcsIGxheW91dCk7XG5cbiAgICAgICAgdGhpcy5hY2NlcHQgPSBBcnJheS5pc0FycmF5KGNvbmZpZy5hY2NlcHQpID8gY29uZmlnLmFjY2VwdCA6IG51bGw7XG4gICAgICAgIHRoaXMuYXV0b1VwbG9hZCA9IGlzQm9vbGVhbihjb25maWcuYXV0b1VwbG9hZCkgPyBjb25maWcuYXV0b1VwbG9hZCA6IHRydWU7XG4gICAgICAgIHRoaXMubWF4U2l6ZSA9IGlzTnVtYmVyKGNvbmZpZy5tYXhTaXplKSA/IGNvbmZpZy5tYXhTaXplIDogbnVsbDtcbiAgICAgICAgdGhpcy5taW5TaXplID0gaXNOdW1iZXIoY29uZmlnLm1pblNpemUpID8gY29uZmlnLm1pblNpemUgOiBudWxsO1xuICAgICAgICB0aGlzLnJlbW92ZVVybCA9IGNvbmZpZy5yZW1vdmVVcmwgPz8gbnVsbDtcbiAgICAgICAgdGhpcy5zaG93RmlsZUxpc3QgPSBpc0Jvb2xlYW4oY29uZmlnLnNob3dGaWxlTGlzdCkgPyBjb25maWcuc2hvd0ZpbGVMaXN0IDogdHJ1ZTtcbiAgICAgICAgdGhpcy51cmwgPSBjb25maWcudXJsID8/IG51bGw7XG4gICAgfVxufVxuIl19