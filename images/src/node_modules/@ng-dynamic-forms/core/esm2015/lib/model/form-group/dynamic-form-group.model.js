import { __decorate, __metadata } from "tslib";
import { DynamicFormControlModel } from "../dynamic-form-control.model";
import { serializable } from "../../decorator/serializable.decorator";
export const DYNAMIC_FORM_CONTROL_TYPE_GROUP = "GROUP";
export class DynamicFormGroupModel extends DynamicFormControlModel {
    constructor(config, layout) {
        var _a;
        super(config, layout);
        this.group = [];
        this.type = DYNAMIC_FORM_CONTROL_TYPE_GROUP;
        this.group = Array.isArray(config.group) ? config.group : [];
        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;
    }
    get(index) {
        return this.group[index];
    }
    set(index, controlModel) {
        this.group[index] = controlModel;
    }
    add(controlModel) {
        this.group.push(controlModel);
    }
    insert(index, controlModel) {
        this.group.splice(index, 0, controlModel);
    }
    move(index, step) {
        this.group.splice(index + step, 0, ...this.group.splice(index, 1));
    }
    remove(index) {
        this.group.splice(index, 1);
    }
    size() {
        return this.group.length;
    }
}
__decorate([
    serializable(),
    __metadata("design:type", Array)
], DynamicFormGroupModel.prototype, "group", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicFormGroupModel.prototype, "legend", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicFormGroupModel.prototype, "type", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1mb3JtLWdyb3VwLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZHluYW1pYy1mb3Jtcy9jb3JlL3NyYy9saWIvbW9kZWwvZm9ybS1ncm91cC9keW5hbWljLWZvcm0tZ3JvdXAubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBaUMsTUFBTSwrQkFBK0IsQ0FBQztBQUd2RyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFFdEUsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQUcsT0FBTyxDQUFDO0FBUXZELE1BQU0sT0FBTyxxQkFBc0IsU0FBUSx1QkFBdUI7SUFPOUQsWUFBWSxNQUFtQyxFQUFFLE1BQWlDOztRQUU5RSxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBUFYsVUFBSyxHQUFxQixFQUFFLENBQUM7UUFHcEIsU0FBSSxHQUFXLCtCQUErQixDQUFDO1FBTXBFLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUM3RCxJQUFJLENBQUMsTUFBTSxTQUFHLE1BQU0sQ0FBQyxNQUFNLG1DQUFJLElBQUksQ0FBQztJQUN4QyxDQUFDO0lBRUQsR0FBRyxDQUFDLEtBQWE7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELEdBQUcsQ0FBQyxLQUFhLEVBQUUsWUFBcUM7UUFDcEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxZQUFZLENBQUM7SUFDckMsQ0FBQztJQUVELEdBQUcsQ0FBQyxZQUFxQztRQUNyQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQWEsRUFBRSxZQUFxQztRQUN2RCxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUFJLENBQUMsS0FBYSxFQUFFLElBQVk7UUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQWE7UUFDaEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxJQUFJO1FBQ0EsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0NBQ0o7QUF4Q21CO0lBQWYsWUFBWSxFQUFFOztvREFBOEI7QUFDN0I7SUFBZixZQUFZLEVBQUU7O3FEQUF1QjtBQUV0QjtJQUFmLFlBQVksRUFBRTs7bURBQXlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTW9kZWwsIER5bmFtaWNGb3JtQ29udHJvbE1vZGVsQ29uZmlnIH0gZnJvbSBcIi4uL2R5bmFtaWMtZm9ybS1jb250cm9sLm1vZGVsXCI7XG5pbXBvcnQgeyBEeW5hbWljRm9ybU1vZGVsIH0gZnJvbSBcIi4uL2R5bmFtaWMtZm9ybS5tb2RlbFwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0IH0gZnJvbSBcIi4uL21pc2MvZHluYW1pYy1mb3JtLWNvbnRyb2wtbGF5b3V0Lm1vZGVsXCI7XG5pbXBvcnQgeyBzZXJpYWxpemFibGUgfSBmcm9tIFwiLi4vLi4vZGVjb3JhdG9yL3NlcmlhbGl6YWJsZS5kZWNvcmF0b3JcIjtcblxuZXhwb3J0IGNvbnN0IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfR1JPVVAgPSBcIkdST1VQXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHluYW1pY0Zvcm1Hcm91cE1vZGVsQ29uZmlnIGV4dGVuZHMgRHluYW1pY0Zvcm1Db250cm9sTW9kZWxDb25maWcge1xuXG4gICAgZ3JvdXA/OiBEeW5hbWljRm9ybU1vZGVsO1xuICAgIGxlZ2VuZD86IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIER5bmFtaWNGb3JtR3JvdXBNb2RlbCBleHRlbmRzIER5bmFtaWNGb3JtQ29udHJvbE1vZGVsIHtcblxuICAgIEBzZXJpYWxpemFibGUoKSBncm91cDogRHluYW1pY0Zvcm1Nb2RlbCA9IFtdO1xuICAgIEBzZXJpYWxpemFibGUoKSBsZWdlbmQ6IHN0cmluZyB8IG51bGw7XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgcmVhZG9ubHkgdHlwZTogc3RyaW5nID0gRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9HUk9VUDtcblxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogRHluYW1pY0Zvcm1Hcm91cE1vZGVsQ29uZmlnLCBsYXlvdXQ/OiBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQpIHtcblxuICAgICAgICBzdXBlcihjb25maWcsIGxheW91dCk7XG5cbiAgICAgICAgdGhpcy5ncm91cCA9IEFycmF5LmlzQXJyYXkoY29uZmlnLmdyb3VwKSA/IGNvbmZpZy5ncm91cCA6IFtdO1xuICAgICAgICB0aGlzLmxlZ2VuZCA9IGNvbmZpZy5sZWdlbmQgPz8gbnVsbDtcbiAgICB9XG5cbiAgICBnZXQoaW5kZXg6IG51bWJlcik6IER5bmFtaWNGb3JtQ29udHJvbE1vZGVsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBbaW5kZXhdO1xuICAgIH1cblxuICAgIHNldChpbmRleDogbnVtYmVyLCBjb250cm9sTW9kZWw6IER5bmFtaWNGb3JtQ29udHJvbE1vZGVsLCk6IHZvaWQge1xuICAgICAgICB0aGlzLmdyb3VwW2luZGV4XSA9IGNvbnRyb2xNb2RlbDtcbiAgICB9XG5cbiAgICBhZGQoY29udHJvbE1vZGVsOiBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbCk6IHZvaWQge1xuICAgICAgICB0aGlzLmdyb3VwLnB1c2goY29udHJvbE1vZGVsKTtcbiAgICB9XG5cbiAgICBpbnNlcnQoaW5kZXg6IG51bWJlciwgY29udHJvbE1vZGVsOiBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbCk6IHZvaWQge1xuICAgICAgICB0aGlzLmdyb3VwLnNwbGljZShpbmRleCwgMCwgY29udHJvbE1vZGVsKTtcbiAgICB9XG5cbiAgICBtb3ZlKGluZGV4OiBudW1iZXIsIHN0ZXA6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLmdyb3VwLnNwbGljZShpbmRleCArIHN0ZXAsIDAsIC4uLnRoaXMuZ3JvdXAuc3BsaWNlKGluZGV4LCAxKSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlKGluZGV4OiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5ncm91cC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cblxuICAgIHNpemUoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXAubGVuZ3RoO1xuICAgIH1cbn1cbiJdfQ==