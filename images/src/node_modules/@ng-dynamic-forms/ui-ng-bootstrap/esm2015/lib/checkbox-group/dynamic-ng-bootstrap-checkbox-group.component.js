import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicCheckboxGroupModel, DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService } from "@ng-dynamic-forms/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ng-dynamic-forms/core';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@ng-bootstrap/ng-bootstrap';

function DynamicNGBootstrapCheckboxGroupComponent_label_2_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "label", 3);
    ɵngcc0.ɵɵelementStart(1, "input", 4);
    ɵngcc0.ɵɵlistener("blur", function DynamicNGBootstrapCheckboxGroupComponent_label_2_Template_input_blur_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onBlur($event); })("change", function DynamicNGBootstrapCheckboxGroupComponent_label_2_Template_input_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const checkboxModel_r1 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onCheckboxChange($event, checkboxModel_r1); })("focus", function DynamicNGBootstrapCheckboxGroupComponent_label_2_Template_input_focus_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onFocus($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(2, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const checkboxModel_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("hidden", checkboxModel_r1.hidden)("ngClass", ctx_r0.getClass("element", "control", checkboxModel_r1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", checkboxModel_r1.checked)("formControlName", checkboxModel_r1.id)("id", ctx_r0.getCheckboxId(checkboxModel_r1))("name", checkboxModel_r1.name)("required", checkboxModel_r1.required)("tabindex", checkboxModel_r1.tabIndex)("value", checkboxModel_r1.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getClass("element", "label", checkboxModel_r1))("innerHTML", checkboxModel_r1.label, ɵngcc0.ɵɵsanitizeHtml);
} }
export class DynamicNGBootstrapCheckboxGroupComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
    }
    getCheckboxId(model) {
        return this.layoutService.getElementId(model);
    }
    onCheckboxChange($event, model) {
        this.onChange($event);
        model.value = $event.target.checked;
    }
}
DynamicNGBootstrapCheckboxGroupComponent.ɵfac = function DynamicNGBootstrapCheckboxGroupComponent_Factory(t) { return new (t || DynamicNGBootstrapCheckboxGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };
DynamicNGBootstrapCheckboxGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicNGBootstrapCheckboxGroupComponent, selectors: [["dynamic-ng-bootstrap-checkbox-group"]], inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[3, "formGroup"], ["data-toggle", "buttons", 1, "btn-group", "btn-group-toggle", 3, "formGroupName", "id", "ngClass"], ["ngbButtonLabel", "", 3, "hidden", "ngClass", 4, "ngFor", "ngForOf"], ["ngbButtonLabel", "", 3, "hidden", "ngClass"], ["type", "checkbox", "ngbButton", "", 3, "checked", "formControlName", "id", "name", "required", "tabindex", "value", "blur", "change", "focus"], [3, "ngClass", "innerHTML"]], template: function DynamicNGBootstrapCheckboxGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, DynamicNGBootstrapCheckboxGroupComponent_label_2_Template, 3, 11, "label", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.group);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formGroupName", ctx.model.id)("id", ctx.id)("ngClass", ctx.getClass("element", "control"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.model.group);
    } }, directives: [ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc2.FormGroupName, ɵngcc3.NgClass, ɵngcc3.NgForOf, ɵngcc4.NgbButtonLabel, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.CheckboxRequiredValidator, ɵngcc4.NgbCheckBox, ɵngcc2.NgControlStatus, ɵngcc2.FormControlName], encapsulation: 2, changeDetection: 0 });
DynamicNGBootstrapCheckboxGroupComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService }
];
DynamicNGBootstrapCheckboxGroupComponent.propDecorators = {
    formLayout: [{ type: Input }],
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicNGBootstrapCheckboxGroupComponent, [{
        type: Component,
        args: [{
                selector: "dynamic-ng-bootstrap-checkbox-group",
                template: "<ng-container [formGroup]=\"group\">\n\n    <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\"\n         [formGroupName]=\"model.id\"\n         [id]=\"id\"\n         [ngClass]=\"getClass('element', 'control')\">\n\n        <label *ngFor=\"let checkboxModel of model.group\" ngbButtonLabel\n               [hidden]=\"checkboxModel.hidden\"\n               [ngClass]=\"getClass('element', 'control', checkboxModel)\">\n\n            <input type=\"checkbox\" ngbButton\n                   [checked]=\"checkboxModel.checked\"\n                   [formControlName]=\"checkboxModel.id\"\n                   [id]=\"getCheckboxId(checkboxModel)\"\n                   [name]=\"checkboxModel.name\"\n                   [required]=\"checkboxModel.required\"\n                   [tabindex]=\"checkboxModel.tabIndex\"\n                   [value]=\"checkboxModel.value\"\n                   (blur)=\"onBlur($event)\"\n                   (change)=\"onCheckboxChange($event, checkboxModel)\"\n                   (focus)=\"onFocus($event)\"/><span [ngClass]=\"getClass('element', 'label', checkboxModel)\"\n                                                    [innerHTML]=\"checkboxModel.label\"></span></label>\n    </div>\n\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{
            type: Output
        }], change: [{
            type: Output
        }], focus: [{
            type: Output
        }], formLayout: [{
            type: Input
        }], group: [{
            type: Input
        }], layout: [{
            type: Input
        }], model: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtY2hlY2tib3gtZ3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWZvcm1zL3VpLW5nLWJvb3RzdHJhcC9zcmMvbGliL2NoZWNrYm94LWdyb3VwL2R5bmFtaWMtbmctYm9vdHN0cmFwLWNoZWNrYm94LWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQ0gseUJBQXlCLEVBRXpCLDJCQUEyQixFQUUzQix3QkFBd0IsRUFDeEIsNEJBQTRCLEVBQy9CLE1BQU0sd0JBQXdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9oQyxNQUFNLE9BQU8sd0NBQXlDLFNBQVEsMkJBQTJCO0FBQ3pGLElBVUksWUFBc0IsYUFBdUMsRUFDdkMsaUJBQStDO0FBQ3pFLFFBQ1EsS0FBSyxDQUFDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQ2hELFFBSjBCLGtCQUFhLEdBQWIsYUFBYSxDQUEwQjtBQUFDLFFBQ3hDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBOEI7QUFBQyxRQUw1RCxTQUFJLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7QUFDM0QsUUFBYyxXQUFNLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7QUFDN0QsUUFBYyxVQUFLLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7QUFDNUQsSUFLSSxDQUFDO0FBQ0wsSUFDSSxhQUFhLENBQUMsS0FBMkI7QUFDN0MsUUFBUSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3RELElBQUksQ0FBQztBQUNMLElBQ0ksZ0JBQWdCLENBQUMsTUFBYSxFQUFFLEtBQTJCO0FBQy9ELFFBQ1EsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM5QixRQUFRLEtBQUssQ0FBQyxLQUFLLEdBQUksTUFBTSxDQUFDLE1BQTJCLENBQUMsT0FBTyxDQUFDO0FBQ2xFLElBQUksQ0FBQztBQUNMO29FQS9CQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHFDQUFxQyxrQkFDL0M7Ozs7O21CQUFtRTtNQUNuRSxlQUFlLEVBQUU7TUFBdUIsQ0FBQyxNQUFNO09BQ2xEOzs7OzsrVUFDSTtBQUFDO0FBQWtFLFlBVHBFLHdCQUF3QjtBQUMxQixZQUFFLDRCQUE0QjtBQUM5QjtBQUFHO0FBR2EseUJBTWIsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSyxxQkFDVixLQUFLO0FBQUssb0JBQ1YsS0FBSztBQUFLLG1CQUVWLE1BQU07QUFBSyxxQkFDWCxNQUFNO0FBQUssb0JBQ1gsTUFBTTtBQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQge1xuICAgIER5bmFtaWNDaGVja2JveEdyb3VwTW9kZWwsXG4gICAgRHluYW1pY0NoZWNrYm94TW9kZWwsXG4gICAgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50LCBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgIER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2Vcbn0gZnJvbSBcIkBuZy1keW5hbWljLWZvcm1zL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiZHluYW1pYy1uZy1ib290c3RyYXAtY2hlY2tib3gtZ3JvdXBcIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2R5bmFtaWMtbmctYm9vdHN0cmFwLWNoZWNrYm94LWdyb3VwLmNvbXBvbmVudC5odG1sXCIsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY05HQm9vdHN0cmFwQ2hlY2tib3hHcm91cENvbXBvbmVudCBleHRlbmRzIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCB7XG5cbiAgICBASW5wdXQoKSBmb3JtTGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBncm91cDogRm9ybUdyb3VwO1xuICAgIEBJbnB1dCgpIGxheW91dDogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0O1xuICAgIEBJbnB1dCgpIG1vZGVsOiBEeW5hbWljQ2hlY2tib3hHcm91cE1vZGVsO1xuXG4gICAgQE91dHB1dCgpIGJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBmb2N1czogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGF5b3V0U2VydmljZTogRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSkge1xuXG4gICAgICAgIHN1cGVyKGxheW91dFNlcnZpY2UsIHZhbGlkYXRpb25TZXJ2aWNlKTtcbiAgICB9XG5cbiAgICBnZXRDaGVja2JveElkKG1vZGVsOiBEeW5hbWljQ2hlY2tib3hNb2RlbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sYXlvdXRTZXJ2aWNlLmdldEVsZW1lbnRJZChtb2RlbCk7XG4gICAgfVxuXG4gICAgb25DaGVja2JveENoYW5nZSgkZXZlbnQ6IEV2ZW50LCBtb2RlbDogRHluYW1pY0NoZWNrYm94TW9kZWwpIHtcblxuICAgICAgICB0aGlzLm9uQ2hhbmdlKCRldmVudCk7XG4gICAgICAgIG1vZGVsLnZhbHVlID0gKCRldmVudC50YXJnZXQgYXMgSFRNTElucHV0RWxlbWVudCkuY2hlY2tlZDtcbiAgICB9XG59XG4iXX0=