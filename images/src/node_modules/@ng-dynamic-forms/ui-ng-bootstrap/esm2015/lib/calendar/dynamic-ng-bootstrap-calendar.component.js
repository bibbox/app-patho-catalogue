import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { NgbDatepicker, NgbDatepickerConfig } from "@ng-bootstrap/ng-bootstrap";
import { DynamicDatePickerModel, DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService } from "@ng-dynamic-forms/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ng-dynamic-forms/core';
import * as ɵngcc2 from '@ng-bootstrap/ng-bootstrap';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@angular/common';
export class DynamicNGBootstrapCalendarComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService, config) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.config = config;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicNGBootstrapCalendarComponent.ɵfac = function DynamicNGBootstrapCalendarComponent_Factory(t) { return new (t || DynamicNGBootstrapCalendarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgbDatepickerConfig)); };
DynamicNGBootstrapCalendarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicNGBootstrapCalendarComponent, selectors: [["dynamic-ng-bootstrap-calendar"]], viewQuery: function DynamicNGBootstrapCalendarComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(NgbDatepicker, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ngbCalendar = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 13, consts: [[3, "formGroup"], [3, "displayMonths", "firstDayOfWeek", "formControlName", "id", "maxDate", "minDate", "navigation", "ngClass", "outsideDays", "showWeekdays", "showWeekNumbers", "startDate", "select"]], template: function DynamicNGBootstrapCalendarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵelementStart(1, "ngb-datepicker", 1);
        ɵngcc0.ɵɵlistener("select", function DynamicNGBootstrapCalendarComponent_Template_ngb_datepicker_select_1_listener($event) { return ctx.onChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.group);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("displayMonths", ctx.model.getAdditional("displayMonths", ctx.config["displayMonths"]))("firstDayOfWeek", ctx.model.getAdditional("firstDayOfWeek", ctx.config["firstDayOfWeek"]))("formControlName", ctx.model.id)("id", ctx.id)("maxDate", ctx.model.max)("minDate", ctx.model.min)("navigation", ctx.model.getAdditional("navigation", ctx.config["navigation"]))("ngClass", ctx.getClass("element", "control"))("outsideDays", ctx.model.getAdditional("outsideDays", ctx.config["outsideDays"]))("showWeekdays", ctx.model.getAdditional("showWeekdays", ctx.config["showWeekdays"]))("showWeekNumbers", ctx.model.getAdditional("showWeekNumbers", ctx.config["showWeekNumbers"]))("startDate", ctx.model.focusedDate);
    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc2.NgbDatepicker, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass], encapsulation: 2, changeDetection: 0 });
DynamicNGBootstrapCalendarComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService },
    { type: NgbDatepickerConfig }
];
DynamicNGBootstrapCalendarComponent.propDecorators = {
    formLayout: [{ type: Input }],
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }],
    ngbCalendar: [{ type: ViewChild, args: [NgbDatepicker, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicNGBootstrapCalendarComponent, [{
        type: Component,
        args: [{
                selector: "dynamic-ng-bootstrap-calendar",
                template: "<ng-container [formGroup]=\"group\">\n\n    <ngb-datepicker [displayMonths]=\"model.getAdditional('displayMonths', config['displayMonths'])\"\n                    [firstDayOfWeek]=\"model.getAdditional('firstDayOfWeek', config['firstDayOfWeek'])\"\n                    [formControlName]=\"model.id\"\n                    [id]=\"id\"\n                    [maxDate]=\"model.max\"\n                    [minDate]=\"model.min\"\n                    [navigation]=\"model.getAdditional('navigation', config['navigation'])\"\n                    [ngClass]=\"getClass('element', 'control')\"\n                    [outsideDays]=\"model.getAdditional('outsideDays', config['outsideDays'])\"\n                    [showWeekdays]=\"model.getAdditional('showWeekdays', config['showWeekdays'])\"\n                    [showWeekNumbers]=\"model.getAdditional('showWeekNumbers', config['showWeekNumbers'])\"\n                    [startDate]=\"model.focusedDate\"\n                    (select)=\"onChange($event)\"></ngb-datepicker>\n\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }, { type: ɵngcc2.NgbDatepickerConfig }]; }, { blur: [{
            type: Output
        }], change: [{
            type: Output
        }], focus: [{
            type: Output
        }], formLayout: [{
            type: Input
        }], group: [{
            type: Input
        }], layout: [{
            type: Input
        }], model: [{
            type: Input
        }], ngbCalendar: [{
            type: ViewChild,
            args: [NgbDatepicker, { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtY2FsZW5kYXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWZvcm1zL3VpLW5nLWJvb3RzdHJhcC9zcmMvbGliL2NhbGVuZGFyL2R5bmFtaWMtbmctYm9vdHN0cmFwLWNhbGVuZGFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2hGLE9BQU8sRUFDSCxzQkFBc0IsRUFDdEIsMkJBQTJCLEVBRzNCLHdCQUF3QixFQUN4Qiw0QkFBNEIsRUFDL0IsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7O0FBT2hDLE1BQU0sT0FBTyxtQ0FBb0MsU0FBUSwyQkFBMkI7QUFDcEYsSUFZSSxZQUFzQixhQUF1QyxFQUN2QyxpQkFBK0MsRUFDbEQsTUFBMkI7QUFDbEQsUUFDUSxLQUFLLENBQUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFDaEQsUUFMMEIsa0JBQWEsR0FBYixhQUFhLENBQTBCO0FBQUMsUUFDeEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUE4QjtBQUFDLFFBQ25ELFdBQU0sR0FBTixNQUFNLENBQXFCO0FBQUMsUUFSckMsU0FBSSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzNELFFBQWMsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzdELFFBQWMsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzVELElBUUksQ0FBQztBQUNMOytEQXhCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLCtCQUErQixrQkFDekM7Ozs7Ozt1YkFBNkQsa0JBQzdELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGNBQ2xEOzs7Ozs7Ozs7OzZNQUNJO0FBQUM7QUFBNkQsWUFUL0Qsd0JBQXdCO0FBQzFCLFlBQUUsNEJBQTRCO0FBQzdCLFlBUnFCLG1CQUFtQjtBQUFHO0FBQUc7QUFFbkMseUJBZVQsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSyxxQkFDVixLQUFLO0FBQUssb0JBQ1YsS0FBSztBQUFLLG1CQUVWLE1BQU07QUFBSyxxQkFDWCxNQUFNO0FBQUssb0JBQ1gsTUFBTTtBQUFLLDBCQUVYLFNBQVMsU0FBQyxhQUFhLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO0FBQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgTmdiRGF0ZXBpY2tlciwgTmdiRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gXCJAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcFwiO1xuaW1wb3J0IHtcbiAgICBEeW5hbWljRGF0ZVBpY2tlck1vZGVsLFxuICAgIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCxcbiAgICBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgIER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2Vcbn0gZnJvbSBcIkBuZy1keW5hbWljLWZvcm1zL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiZHluYW1pYy1uZy1ib290c3RyYXAtY2FsZW5kYXJcIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2R5bmFtaWMtbmctYm9vdHN0cmFwLWNhbGVuZGFyLmNvbXBvbmVudC5odG1sXCIsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY05HQm9vdHN0cmFwQ2FsZW5kYXJDb21wb25lbnQgZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQge1xuXG4gICAgQElucHV0KCkgZm9ybUxheW91dDogRHluYW1pY0Zvcm1MYXlvdXQ7XG4gICAgQElucHV0KCkgZ3JvdXA6IEZvcm1Hcm91cDtcbiAgICBASW5wdXQoKSBsYXlvdXQ6IER5bmFtaWNGb3JtQ29udHJvbExheW91dDtcbiAgICBASW5wdXQoKSBtb2RlbDogRHluYW1pY0RhdGVQaWNrZXJNb2RlbDtcblxuICAgIEBPdXRwdXQoKSBibHVyOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgY2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgZm9jdXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgQFZpZXdDaGlsZChOZ2JEYXRlcGlja2VyLCB7c3RhdGljOiB0cnVlfSkgbmdiQ2FsZW5kYXI6IE5nYkRhdGVwaWNrZXI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGF5b3V0U2VydmljZTogRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICAgICAgICAgICAgICBwdWJsaWMgY29uZmlnOiBOZ2JEYXRlcGlja2VyQ29uZmlnKSB7XG5cbiAgICAgICAgc3VwZXIobGF5b3V0U2VydmljZSwgdmFsaWRhdGlvblNlcnZpY2UpO1xuICAgIH1cbn1cbiJdfQ==