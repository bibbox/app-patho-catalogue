import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { NgbDatepicker, NgbDatepickerConfig } from "@ng-bootstrap/ng-bootstrap";
import { DynamicDatePickerModel, DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService } from "@ng-dynamic-forms/core";
export class DynamicNGBootstrapDatePickerComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService, config) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.config = config;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.customEvent = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicNGBootstrapDatePickerComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-ng-bootstrap-datepicker",
                template: "<div [formGroup]=\"group\" class=\"input-group\">\n\n    <input ngbDatepicker class=\"form-control\" #datepicker=\"ngbDatepicker\"\n           [class.is-invalid]=\"showErrorMessages\"\n           [displayMonths]=\"model.getAdditional('displayMonths', config['displayMonths'])\"\n           [firstDayOfWeek]=\"model.getAdditional('firstDayOfWeek', config['firstDayOfWeek'])\"\n           [formControlName]=\"model.id\"\n           [id]=\"id\"\n           [maxDate]=\"model.max\"\n           [minDate]=\"model.min\"\n           [name]=\"model.name\"\n           [navigation]=\"model.getAdditional('navigation', config['navigation'])\"\n           [ngClass]=\"getClass('element', 'control')\"\n           [outsideDays]=\"model.getAdditional('outsideDays', config['outsideDays'])\"\n           [placeholder]=\"model.placeholder\"\n           [placement]=\"model.getAdditional('placement', 'bottom-left')\"\n           [showWeekdays]=\"model.getAdditional('showWeekdays', config['showWeekdays'])\"\n           [showWeekNumbers]=\"model.getAdditional('showWeekNumbers', config['showWeekNumbers'])\"\n           [startDate]=\"model.focusedDate\"\n           (blur)=\"onBlur($event)\"\n           (dateSelect)=\"onCustomEvent($event, 'dateSelect')\"\n           (closed)=\"onCustomEvent($event, 'closed')\"\n           (change)=\"onChange($event)\"\n           (focus)=\"onFocus($event)\">\n\n    <div class=\"input-group-append\">\n\n        <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"datepicker.toggle()\">\n\n            <img *ngIf=\"model.toggleIcon\" [src]=\"model.toggleIcon\" style=\"cursor: pointer;\"/>\n            <span *ngIf=\"model.toggleLabel\">{{ model.toggleLabel }}</span>\n\n        </button>\n\n    </div>\n\n</div>\n",
                changeDetection: ChangeDetectionStrategy.Default
            },] }
];
DynamicNGBootstrapDatePickerComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService },
    { type: NgbDatepickerConfig }
];
DynamicNGBootstrapDatePickerComponent.propDecorators = {
    formLayout: [{ type: Input }],
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    customEvent: [{ type: Output }],
    focus: [{ type: Output }],
    ngbDatePicker: [{ type: ViewChild, args: [NgbDatepicker,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWZvcm1zL3VpLW5nLWJvb3RzdHJhcC9zcmMvbGliL2RhdGVwaWNrZXIvZHluYW1pYy1uZy1ib290c3RyYXAtZGF0ZXBpY2tlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0csT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNoRixPQUFPLEVBQ0gsc0JBQXNCLEVBQ3RCLDJCQUEyQixFQUczQix3QkFBd0IsRUFDeEIsNEJBQTRCLEVBQy9CLE1BQU0sd0JBQXdCLENBQUM7QUFPaEMsTUFBTSxPQUFPLHFDQUFzQyxTQUFRLDJCQUEyQjtJQWNsRixZQUFzQixhQUF1QyxFQUN2QyxpQkFBK0MsRUFDbEQsTUFBMkI7UUFFMUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBSnRCLGtCQUFhLEdBQWIsYUFBYSxDQUEwQjtRQUN2QyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQThCO1FBQ2xELFdBQU0sR0FBTixNQUFNLENBQXFCO1FBVHBDLFNBQUksR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM3QyxXQUFNLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDL0MsZ0JBQVcsR0FBZ0QsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM5RSxVQUFLLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFTeEQsQ0FBQzs7O1lBeEJKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsaUNBQWlDO2dCQUMzQyx1dURBQStEO2dCQUMvRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsT0FBTzthQUNuRDs7O1lBUkcsd0JBQXdCO1lBQ3hCLDRCQUE0QjtZQVBSLG1CQUFtQjs7O3lCQWlCdEMsS0FBSztvQkFDTCxLQUFLO3FCQUNMLEtBQUs7b0JBQ0wsS0FBSzttQkFFTCxNQUFNO3FCQUNOLE1BQU07MEJBQ04sTUFBTTtvQkFDTixNQUFNOzRCQUVOLFNBQVMsU0FBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQgeyBOZ2JEYXRlcGlja2VyLCBOZ2JEYXRlcGlja2VyQ29uZmlnIH0gZnJvbSBcIkBuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwXCI7XG5pbXBvcnQge1xuICAgIER5bmFtaWNEYXRlUGlja2VyTW9kZWwsXG4gICAgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50LFxuICAgIER5bmFtaWNGb3JtQ29udHJvbEN1c3RvbUV2ZW50LCBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgIER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2Vcbn0gZnJvbSBcIkBuZy1keW5hbWljLWZvcm1zL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiZHluYW1pYy1uZy1ib290c3RyYXAtZGF0ZXBpY2tlclwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vZHluYW1pYy1uZy1ib290c3RyYXAtZGF0ZXBpY2tlci5jb21wb25lbnQuaHRtbFwiLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuRGVmYXVsdFxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljTkdCb290c3RyYXBEYXRlUGlja2VyQ29tcG9uZW50IGV4dGVuZHMgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIGZvcm1MYXlvdXQ6IER5bmFtaWNGb3JtTGF5b3V0O1xuICAgIEBJbnB1dCgpIGdyb3VwOiBGb3JtR3JvdXA7XG4gICAgQElucHV0KCkgbGF5b3V0OiBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQ7XG4gICAgQElucHV0KCkgbW9kZWw6IER5bmFtaWNEYXRlUGlja2VyTW9kZWw7XG5cbiAgICBAT3V0cHV0KCkgYmx1cjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgQE91dHB1dCgpIGNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgQE91dHB1dCgpIGN1c3RvbUV2ZW50OiBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sQ3VzdG9tRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBmb2N1czogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBAVmlld0NoaWxkKE5nYkRhdGVwaWNrZXIpIG5nYkRhdGVQaWNrZXI6IE5nYkRhdGVwaWNrZXI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGF5b3V0U2VydmljZTogRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICAgICAgICAgICAgICBwdWJsaWMgY29uZmlnOiBOZ2JEYXRlcGlja2VyQ29uZmlnKSB7XG5cbiAgICAgICAgc3VwZXIobGF5b3V0U2VydmljZSwgdmFsaWRhdGlvblNlcnZpY2UpO1xuICAgIH1cbn1cbiJdfQ==