import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { NgbDatepicker, NgbDatepickerConfig } from "@ng-bootstrap/ng-bootstrap";
import { DynamicDatePickerModel, DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService } from "@ng-dynamic-forms/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ng-dynamic-forms/core';
import * as ɵngcc2 from '@ng-bootstrap/ng-bootstrap';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@angular/common';

function DynamicNGBootstrapDatePickerComponent_img_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 7);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("src", ctx_r1.model.toggleIcon, ɵngcc0.ɵɵsanitizeUrl);
} }
function DynamicNGBootstrapDatePickerComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.model.toggleLabel);
} }
export class DynamicNGBootstrapDatePickerComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService, config) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.config = config;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.customEvent = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicNGBootstrapDatePickerComponent.ɵfac = function DynamicNGBootstrapDatePickerComponent_Factory(t) { return new (t || DynamicNGBootstrapDatePickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgbDatepickerConfig)); };
DynamicNGBootstrapDatePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicNGBootstrapDatePickerComponent, selectors: [["dynamic-ng-bootstrap-datepicker"]], viewQuery: function DynamicNGBootstrapDatePickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(NgbDatepicker, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ngbDatePicker = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", customEvent: "customEvent", focus: "focus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 20, consts: [[1, "input-group", 3, "formGroup"], ["ngbDatepicker", "", 1, "form-control", 3, "displayMonths", "firstDayOfWeek", "formControlName", "id", "maxDate", "minDate", "name", "navigation", "ngClass", "outsideDays", "placeholder", "placement", "showWeekdays", "showWeekNumbers", "startDate", "blur", "dateSelect", "closed", "change", "focus"], ["datepicker", "ngbDatepicker"], [1, "input-group-append"], ["type", "button", 1, "btn", "btn-outline-secondary", 3, "click"], ["style", "cursor: pointer;", 3, "src", 4, "ngIf"], [4, "ngIf"], [2, "cursor", "pointer", 3, "src"]], template: function DynamicNGBootstrapDatePickerComponent_Template(rf, ctx) { if (rf & 1) {
        const _r3 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
        ɵngcc0.ɵɵlistener("blur", function DynamicNGBootstrapDatePickerComponent_Template_input_blur_1_listener($event) { return ctx.onBlur($event); })("dateSelect", function DynamicNGBootstrapDatePickerComponent_Template_input_dateSelect_1_listener($event) { return ctx.onCustomEvent($event, "dateSelect"); })("closed", function DynamicNGBootstrapDatePickerComponent_Template_input_closed_1_listener($event) { return ctx.onCustomEvent($event, "closed"); })("change", function DynamicNGBootstrapDatePickerComponent_Template_input_change_1_listener($event) { return ctx.onChange($event); })("focus", function DynamicNGBootstrapDatePickerComponent_Template_input_focus_1_listener($event) { return ctx.onFocus($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "button", 4);
        ɵngcc0.ɵɵlistener("click", function DynamicNGBootstrapDatePickerComponent_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r3); const _r0 = ɵngcc0.ɵɵreference(2); return _r0.toggle(); });
        ɵngcc0.ɵɵtemplate(5, DynamicNGBootstrapDatePickerComponent_img_5_Template, 1, 1, "img", 5);
        ɵngcc0.ɵɵtemplate(6, DynamicNGBootstrapDatePickerComponent_span_6_Template, 2, 1, "span", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.group);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("is-invalid", ctx.showErrorMessages);
        ɵngcc0.ɵɵproperty("displayMonths", ctx.model.getAdditional("displayMonths", ctx.config["displayMonths"]))("firstDayOfWeek", ctx.model.getAdditional("firstDayOfWeek", ctx.config["firstDayOfWeek"]))("formControlName", ctx.model.id)("id", ctx.id)("maxDate", ctx.model.max)("minDate", ctx.model.min)("name", ctx.model.name)("navigation", ctx.model.getAdditional("navigation", ctx.config["navigation"]))("ngClass", ctx.getClass("element", "control"))("outsideDays", ctx.model.getAdditional("outsideDays", ctx.config["outsideDays"]))("placeholder", ctx.model.placeholder)("placement", ctx.model.getAdditional("placement", "bottom-left"))("showWeekdays", ctx.model.getAdditional("showWeekdays", ctx.config["showWeekdays"]))("showWeekNumbers", ctx.model.getAdditional("showWeekNumbers", ctx.config["showWeekNumbers"]))("startDate", ctx.model.focusedDate);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.model.toggleIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.model.toggleLabel);
    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc2.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc4.NgIf], encapsulation: 2 });
DynamicNGBootstrapDatePickerComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService },
    { type: NgbDatepickerConfig }
];
DynamicNGBootstrapDatePickerComponent.propDecorators = {
    formLayout: [{ type: Input }],
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    customEvent: [{ type: Output }],
    focus: [{ type: Output }],
    ngbDatePicker: [{ type: ViewChild, args: [NgbDatepicker,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicNGBootstrapDatePickerComponent, [{
        type: Component,
        args: [{
                selector: "dynamic-ng-bootstrap-datepicker",
                template: "<div [formGroup]=\"group\" class=\"input-group\">\n\n    <input ngbDatepicker class=\"form-control\" #datepicker=\"ngbDatepicker\"\n           [class.is-invalid]=\"showErrorMessages\"\n           [displayMonths]=\"model.getAdditional('displayMonths', config['displayMonths'])\"\n           [firstDayOfWeek]=\"model.getAdditional('firstDayOfWeek', config['firstDayOfWeek'])\"\n           [formControlName]=\"model.id\"\n           [id]=\"id\"\n           [maxDate]=\"model.max\"\n           [minDate]=\"model.min\"\n           [name]=\"model.name\"\n           [navigation]=\"model.getAdditional('navigation', config['navigation'])\"\n           [ngClass]=\"getClass('element', 'control')\"\n           [outsideDays]=\"model.getAdditional('outsideDays', config['outsideDays'])\"\n           [placeholder]=\"model.placeholder\"\n           [placement]=\"model.getAdditional('placement', 'bottom-left')\"\n           [showWeekdays]=\"model.getAdditional('showWeekdays', config['showWeekdays'])\"\n           [showWeekNumbers]=\"model.getAdditional('showWeekNumbers', config['showWeekNumbers'])\"\n           [startDate]=\"model.focusedDate\"\n           (blur)=\"onBlur($event)\"\n           (dateSelect)=\"onCustomEvent($event, 'dateSelect')\"\n           (closed)=\"onCustomEvent($event, 'closed')\"\n           (change)=\"onChange($event)\"\n           (focus)=\"onFocus($event)\">\n\n    <div class=\"input-group-append\">\n\n        <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"datepicker.toggle()\">\n\n            <img *ngIf=\"model.toggleIcon\" [src]=\"model.toggleIcon\" style=\"cursor: pointer;\"/>\n            <span *ngIf=\"model.toggleLabel\">{{ model.toggleLabel }}</span>\n\n        </button>\n\n    </div>\n\n</div>\n",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }, { type: ɵngcc2.NgbDatepickerConfig }]; }, { blur: [{
            type: Output
        }], change: [{
            type: Output
        }], customEvent: [{
            type: Output
        }], focus: [{
            type: Output
        }], formLayout: [{
            type: Input
        }], group: [{
            type: Input
        }], layout: [{
            type: Input
        }], model: [{
            type: Input
        }], ngbDatePicker: [{
            type: ViewChild,
            args: [NgbDatepicker]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWR5bmFtaWMtZm9ybXMvdWktbmctYm9vdHN0cmFwL3NyYy9saWIvZGF0ZXBpY2tlci9keW5hbWljLW5nLWJvb3RzdHJhcC1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2hGLE9BQU8sRUFDSCxzQkFBc0IsRUFDdEIsMkJBQTJCLEVBRzNCLHdCQUF3QixFQUN4Qiw0QkFBNEIsRUFDL0IsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9oQyxNQUFNLE9BQU8scUNBQXNDLFNBQVEsMkJBQTJCO0FBQ3RGLElBYUksWUFBc0IsYUFBdUMsRUFDdkMsaUJBQStDLEVBQ2xELE1BQTJCO0FBQ2xELFFBQ1EsS0FBSyxDQUFDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQ2hELFFBTDBCLGtCQUFhLEdBQWIsYUFBYSxDQUEwQjtBQUFDLFFBQ3hDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBOEI7QUFBQyxRQUNuRCxXQUFNLEdBQU4sTUFBTSxDQUFxQjtBQUFDLFFBVHJDLFNBQUksR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUMzRCxRQUFjLFdBQU0sR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUM3RCxRQUFjLGdCQUFXLEdBQWdELElBQUksWUFBWSxFQUFFLENBQUM7QUFDNUYsUUFBYyxVQUFLLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7QUFDNUQsSUFRSSxDQUFDO0FBQ0w7aUVBekJDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsaUNBQWlDLGtCQUMzQzs7Ozs7Ozs7OzsrRkFBK0Qsa0JBQy9ELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxPQUFPLGNBQ25EOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dPQUNJO0FBQUM7QUFBK0QsWUFUakUsd0JBQXdCO0FBQzFCLFlBQUUsNEJBQTRCO0FBQzdCLFlBUnFCLG1CQUFtQjtBQUFHO0FBQUc7QUFFakMseUJBZVgsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSyxxQkFDVixLQUFLO0FBQUssb0JBQ1YsS0FBSztBQUFLLG1CQUVWLE1BQU07QUFBSyxxQkFDWCxNQUFNO0FBQUssMEJBQ1gsTUFBTTtBQUFLLG9CQUNYLE1BQU07QUFBSyw0QkFFWCxTQUFTLFNBQUMsYUFBYTtBQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgTmdiRGF0ZXBpY2tlciwgTmdiRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gXCJAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcFwiO1xuaW1wb3J0IHtcbiAgICBEeW5hbWljRGF0ZVBpY2tlck1vZGVsLFxuICAgIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCxcbiAgICBEeW5hbWljRm9ybUNvbnRyb2xDdXN0b21FdmVudCwgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0LFxuICAgIER5bmFtaWNGb3JtTGF5b3V0LFxuICAgIER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSxcbiAgICBEeW5hbWljRm9ybVZhbGlkYXRpb25TZXJ2aWNlXG59IGZyb20gXCJAbmctZHluYW1pYy1mb3Jtcy9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcImR5bmFtaWMtbmctYm9vdHN0cmFwLWRhdGVwaWNrZXJcIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2R5bmFtaWMtbmctYm9vdHN0cmFwLWRhdGVwaWNrZXIuY29tcG9uZW50Lmh0bWxcIixcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LkRlZmF1bHRcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY05HQm9vdHN0cmFwRGF0ZVBpY2tlckNvbXBvbmVudCBleHRlbmRzIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCB7XG5cbiAgICBASW5wdXQoKSBmb3JtTGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBncm91cDogRm9ybUdyb3VwO1xuICAgIEBJbnB1dCgpIGxheW91dDogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0O1xuICAgIEBJbnB1dCgpIG1vZGVsOiBEeW5hbWljRGF0ZVBpY2tlck1vZGVsO1xuXG4gICAgQE91dHB1dCgpIGJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjdXN0b21FdmVudDogRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEN1c3RvbUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgZm9jdXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgQFZpZXdDaGlsZChOZ2JEYXRlcGlja2VyKSBuZ2JEYXRlUGlja2VyOiBOZ2JEYXRlcGlja2VyO1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGxheW91dFNlcnZpY2U6IER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSxcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgdmFsaWRhdGlvblNlcnZpY2U6IER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHVibGljIGNvbmZpZzogTmdiRGF0ZXBpY2tlckNvbmZpZykge1xuXG4gICAgICAgIHN1cGVyKGxheW91dFNlcnZpY2UsIHZhbGlkYXRpb25TZXJ2aWNlKTtcbiAgICB9XG59XG4iXX0=