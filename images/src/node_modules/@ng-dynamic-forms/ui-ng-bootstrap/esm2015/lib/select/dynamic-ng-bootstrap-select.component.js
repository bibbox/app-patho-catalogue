import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService, DynamicSelectModel } from "@ng-dynamic-forms/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ng-dynamic-forms/core';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/common';

function DynamicNGBootstrapSelectComponent_option_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("disabled", option_r1.disabled)("ngValue", option_r1.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(option_r1.label);
} }
export class DynamicNGBootstrapSelectComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicNGBootstrapSelectComponent.ɵfac = function DynamicNGBootstrapSelectComponent_Factory(t) { return new (t || DynamicNGBootstrapSelectComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };
DynamicNGBootstrapSelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicNGBootstrapSelectComponent, selectors: [["dynamic-ng-bootstrap-select"]], inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 13, consts: [[3, "formGroup"], [1, "form-control", 3, "compareWith", "formControlName", "id", "name", "ngClass", "required", "tabindex", "blur", "change", "focus"], [3, "disabled", "ngValue", 4, "ngFor", "ngForOf"], [3, "disabled", "ngValue"]], template: function DynamicNGBootstrapSelectComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵelementStart(1, "select", 1);
        ɵngcc0.ɵɵlistener("blur", function DynamicNGBootstrapSelectComponent_Template_select_blur_1_listener($event) { return ctx.onBlur($event); })("change", function DynamicNGBootstrapSelectComponent_Template_select_change_1_listener($event) { return ctx.onChange($event); })("focus", function DynamicNGBootstrapSelectComponent_Template_select_focus_1_listener($event) { return ctx.onFocus($event); });
        ɵngcc0.ɵɵtemplate(2, DynamicNGBootstrapSelectComponent_option_2_Template, 2, 3, "option", 2);
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.group);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("is-invalid", ctx.showErrorMessages);
        ɵngcc0.ɵɵproperty("compareWith", ctx.model.compareWithFn)("formControlName", ctx.model.id)("id", ctx.id)("name", ctx.model.name)("ngClass", ctx.getClass("element", "control"))("required", ctx.model.required)("tabindex", ctx.model.tabIndex);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(3, 11, ctx.model.options$));
    } }, directives: [ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc2.SelectControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlName, ɵngcc3.NgClass, ɵngcc2.RequiredValidator, ɵngcc3.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x], pipes: [ɵngcc3.AsyncPipe], encapsulation: 2 });
DynamicNGBootstrapSelectComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService }
];
DynamicNGBootstrapSelectComponent.propDecorators = {
    formLayout: [{ type: Input }],
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicNGBootstrapSelectComponent, [{
        type: Component,
        args: [{
                selector: "dynamic-ng-bootstrap-select",
                template: "<ng-container [formGroup]=\"group\">\n\n    <select class=\"form-control\"\n            [class.is-invalid]=\"showErrorMessages\"\n            [compareWith]=\"model.compareWithFn\"\n            [formControlName]=\"model.id\"\n            [id]=\"id\"\n            [name]=\"model.name\"\n            [ngClass]=\"getClass('element', 'control')\"\n            [required]=\"model.required\"\n            [tabindex]=\"model.tabIndex\"\n            (blur)=\"onBlur($event)\"\n            (change)=\"onChange($event)\"\n            (focus)=\"onFocus($event)\">\n\n        <option *ngFor=\"let option of model.options$ | async\"\n                [disabled]=\"option.disabled\"\n                [ngValue]=\"option.value\">{{ option.label }}</option>\n\n    </select>\n\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{
            type: Output
        }], change: [{
            type: Output
        }], focus: [{
            type: Output
        }], formLayout: [{
            type: Input
        }], group: [{
            type: Input
        }], layout: [{
            type: Input
        }], model: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZHluYW1pYy1mb3Jtcy91aS1uZy1ib290c3RyYXAvc3JjL2xpYi9zZWxlY3QvZHluYW1pYy1uZy1ib290c3RyYXAtc2VsZWN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQ0gsMkJBQTJCLEVBRTNCLHdCQUF3QixFQUN4Qiw0QkFBNEIsRUFDNUIsa0JBQWtCLEVBQ3JCLE1BQU0sd0JBQXdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPaEMsTUFBTSxPQUFPLGlDQUFrQyxTQUFRLDJCQUEyQjtBQUNsRixJQVVJLFlBQXNCLGFBQXVDLEVBQ3ZDLGlCQUErQztBQUN6RSxRQUNRLEtBQUssQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQUNoRCxRQUowQixrQkFBYSxHQUFiLGFBQWEsQ0FBMEI7QUFBQyxRQUN4QyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQThCO0FBQUMsUUFMNUQsU0FBSSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzNELFFBQWMsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzdELFFBQWMsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzVELElBS0ksQ0FBQztBQUNMOzZEQXJCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLDZCQUE2QixrQkFDdkM7MnBCQUEyRCxrQkFDM0Q7Q0FBZSxFQUFFLHVCQUF1QixDQUFDLE9BQU87RUFDbkQ7Ozs7Ozs7Ozs7Ozs7MFVBQ0k7QUFBQztBQUEyRCxZQVY3RCx3QkFBd0I7QUFDMUIsWUFBRSw0QkFBNEI7QUFDL0I7QUFBRztBQUdKLHlCQU9LLEtBQUs7QUFBSyxvQkFDVixLQUFLO0FBQUsscUJBQ1YsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSyxtQkFFVixNQUFNO0FBQUsscUJBQ1gsTUFBTTtBQUFLLG9CQUNYLE1BQU07QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHtcbiAgICBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQsIER5bmFtaWNGb3JtQ29udHJvbExheW91dCxcbiAgICBEeW5hbWljRm9ybUxheW91dCxcbiAgICBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsXG4gICAgRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICBEeW5hbWljU2VsZWN0TW9kZWxcbn0gZnJvbSBcIkBuZy1keW5hbWljLWZvcm1zL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiZHluYW1pYy1uZy1ib290c3RyYXAtc2VsZWN0XCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW5nLWJvb3RzdHJhcC1zZWxlY3QuY29tcG9uZW50Lmh0bWxcIixcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LkRlZmF1bHRcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY05HQm9vdHN0cmFwU2VsZWN0Q29tcG9uZW50IGV4dGVuZHMgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIGZvcm1MYXlvdXQ6IER5bmFtaWNGb3JtTGF5b3V0O1xuICAgIEBJbnB1dCgpIGdyb3VwOiBGb3JtR3JvdXA7XG4gICAgQElucHV0KCkgbGF5b3V0OiBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQ7XG4gICAgQElucHV0KCkgbW9kZWw6IER5bmFtaWNTZWxlY3RNb2RlbDxzdHJpbmc+O1xuXG4gICAgQE91dHB1dCgpIGJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBmb2N1czogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGF5b3V0U2VydmljZTogRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSkge1xuXG4gICAgICAgIHN1cGVyKGxheW91dFNlcnZpY2UsIHZhbGlkYXRpb25TZXJ2aWNlKTtcbiAgICB9XG59XG4iXX0=