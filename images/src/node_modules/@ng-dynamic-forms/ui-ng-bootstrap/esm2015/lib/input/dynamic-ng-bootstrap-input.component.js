import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService, DynamicInputModel } from "@ng-dynamic-forms/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ng-dynamic-forms/core';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from 'angular2-text-mask';

function DynamicNGBootstrapInputComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelement(1, "span", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r0.model.prefix, ɵngcc0.ɵɵsanitizeHtml);
} }
function DynamicNGBootstrapInputComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelement(1, "span", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r1.model.suffix, ɵngcc0.ɵɵsanitizeHtml);
} }
function DynamicNGBootstrapInputComponent_datalist_4_option_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "option", 10);
} if (rf & 2) {
    const option_r4 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", option_r4);
} }
function DynamicNGBootstrapInputComponent_datalist_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "datalist", 8);
    ɵngcc0.ɵɵtemplate(1, DynamicNGBootstrapInputComponent_datalist_4_option_1_Template, 1, 1, "option", 9);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("id", ctx_r2.model.listId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r2.model.list$));
} }
const _c0 = function (a0, a1) { return { mask: a0, showMask: a1 }; };
export class DynamicNGBootstrapInputComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicNGBootstrapInputComponent.ɵfac = function DynamicNGBootstrapInputComponent_Factory(t) { return new (t || DynamicNGBootstrapInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };
DynamicNGBootstrapInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicNGBootstrapInputComponent, selectors: [["dynamic-ng-bootstrap-input"]], inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 37, consts: [[3, "formGroup"], ["class", "input-group-prepend", 4, "ngIf"], [3, "autocomplete", "autofocus", "dynamicList", "formControlName", "id", "maxlength", "minlength", "name", "ngClass", "pattern", "placeholder", "readonly", "required", "spellcheck", "tabindex", "textMask", "type", "blur", "change", "focus"], ["class", "input-group-append", 4, "ngIf"], [3, "id", 4, "ngIf"], [1, "input-group-prepend"], [1, "input-group-text", 3, "innerHTML"], [1, "input-group-append"], [3, "id"], [3, "value", 4, "ngFor", "ngForOf"], [3, "value"]], template: function DynamicNGBootstrapInputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DynamicNGBootstrapInputComponent_div_1_Template, 2, 1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "input", 2);
        ɵngcc0.ɵɵlistener("blur", function DynamicNGBootstrapInputComponent_Template_input_blur_2_listener($event) { return ctx.onBlur($event); })("change", function DynamicNGBootstrapInputComponent_Template_input_change_2_listener($event) { return ctx.onChange($event); })("focus", function DynamicNGBootstrapInputComponent_Template_input_focus_2_listener($event) { return ctx.onFocus($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, DynamicNGBootstrapInputComponent_div_3_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(4, DynamicNGBootstrapInputComponent_datalist_4_Template, 3, 4, "datalist", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("input-group", ctx.model.prefix || ctx.model.suffix);
        ɵngcc0.ɵɵproperty("formGroup", ctx.group);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.model.prefix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("form-control", ctx.model.inputType !== "file")("form-control-file", ctx.model.inputType === "file")("is-invalid", ctx.showErrorMessages);
        ɵngcc0.ɵɵproperty("autocomplete", ctx.model.autoComplete)("autofocus", ctx.model.autoFocus)("dynamicList", ctx.model.listId)("formControlName", ctx.model.id)("id", ctx.id)("maxlength", ctx.model.maxLength)("minlength", ctx.model.minLength)("name", ctx.model.name)("ngClass", ctx.getClass("element", "control"))("pattern", ctx.model.pattern)("placeholder", ctx.model.placeholder)("readonly", ctx.model.readOnly)("required", ctx.model.required)("spellcheck", ctx.model.spellCheck)("tabindex", ctx.model.tabIndex)("textMask", ɵngcc0.ɵɵpureFunction2(34, _c0, ctx.model.mask || false, ctx.model.mask && !ctx.model.placeholder))("type", ctx.model.inputType);
        ɵngcc0.ɵɵattribute("accept", ctx.model.accept)("max", ctx.model.max)("min", ctx.model.min)("multiple", ctx.model.multiple)("step", ctx.model.step);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.model.suffix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.model.hasList);
    } }, directives: [ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc3.NgIf, ɵngcc2.DefaultValueAccessor, ɵngcc1.DynamicListDirective, ɵngcc2.NgControlStatus, ɵngcc2.FormControlName, ɵngcc2.MaxLengthValidator, ɵngcc2.MinLengthValidator, ɵngcc3.NgClass, ɵngcc2.PatternValidator, ɵngcc2.RequiredValidator, ɵngcc4.MaskedInputDirective, ɵngcc3.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x], pipes: [ɵngcc3.AsyncPipe], encapsulation: 2 });
DynamicNGBootstrapInputComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService }
];
DynamicNGBootstrapInputComponent.propDecorators = {
    formLayout: [{ type: Input }],
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicNGBootstrapInputComponent, [{
        type: Component,
        args: [{
                selector: "dynamic-ng-bootstrap-input",
                template: "<div [formGroup]=\"group\" [class.input-group]=\"model.prefix || model.suffix\">\n\n    <div *ngIf=\"model.prefix\" class=\"input-group-prepend\">\n        <span class=\"input-group-text\" [innerHTML]=\"model.prefix\"></span>\n    </div>\n\n    <input [attr.accept]=\"model.accept\"\n           [attr.max]=\"model.max\"\n           [attr.min]=\"model.min\"\n           [attr.multiple]=\"model.multiple\"\n           [attr.step]=\"model.step\"\n           [autocomplete]=\"model.autoComplete\"\n           [autofocus]=\"model.autoFocus\"\n           [class.form-control]=\"model.inputType !== 'file'\"\n           [class.form-control-file]=\"model.inputType === 'file'\"\n           [class.is-invalid]=\"showErrorMessages\"\n           [dynamicList]=\"model.listId\"\n           [formControlName]=\"model.id\"\n           [id]=\"id\"\n           [maxlength]=\"model.maxLength\"\n           [minlength]=\"model.minLength\"\n           [name]=\"model.name\"\n           [ngClass]=\"getClass('element', 'control')\"\n           [pattern]=\"model.pattern\"\n           [placeholder]=\"model.placeholder\"\n           [readonly]=\"model.readOnly\"\n           [required]=\"model.required\"\n           [spellcheck]=\"model.spellCheck\"\n           [tabindex]=\"model.tabIndex\"\n           [textMask]=\"{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}\"\n           [type]=\"model.inputType\"\n           (blur)=\"onBlur($event)\"\n           (change)=\"onChange($event)\"\n           (focus)=\"onFocus($event)\"/>\n\n    <div *ngIf=\"model.suffix\" class=\"input-group-append\">\n        <span class=\"input-group-text\" [innerHTML]=\"model.suffix\"></span>\n    </div>\n\n    <datalist *ngIf=\"model.hasList\" [id]=\"model.listId\">\n\n        <option *ngFor=\"let option of model.list$ | async\" [value]=\"option\">\n\n    </datalist>\n\n</div>\n",
                changeDetection: ChangeDetectionStrategy.Default
            }]
    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{
            type: Output
        }], change: [{
            type: Output
        }], focus: [{
            type: Output
        }], formLayout: [{
            type: Input
        }], group: [{
            type: Input
        }], layout: [{
            type: Input
        }], model: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWZvcm1zL3VpLW5nLWJvb3RzdHJhcC9zcmMvbGliL2lucHV0L2R5bmFtaWMtbmctYm9vdHN0cmFwLWlucHV0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQ0gsMkJBQTJCLEVBRTNCLHdCQUF3QixFQUN4Qiw0QkFBNEIsRUFDNUIsaUJBQWlCLEVBQ3BCLE1BQU0sd0JBQXdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPaEMsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLDJCQUEyQjtBQUNqRixJQVVJLFlBQXNCLGFBQXVDLEVBQ3ZDLGlCQUErQztBQUN6RSxRQUNRLEtBQUssQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQUNoRCxRQUowQixrQkFBYSxHQUFiLGFBQWEsQ0FBMEI7QUFBQyxRQUN4QyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQThCO0FBQUMsUUFMNUQsU0FBSSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzNELFFBQWMsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzdELFFBQWMsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzVELElBS0ksQ0FBQztBQUNMOzREQXJCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLDRCQUE0QixrQkFDdEM7Ozs7Ozs7OzJEQUEwRCxrQkFDMUQsZUFBZSxFQUFFO1lBQXVCLENBQUMsT0FBTztHQUNuRDs7Ozs7Ozs7Ozs7OzswZEFDSTtBQUFDO0FBQTBELFlBVjVELHdCQUF3QjtBQUMxQixZQUFFLDRCQUE0QjtBQUMvQjtBQUFHO0FBR0oseUJBT0ssS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSyxxQkFDVixLQUFLO0FBQUssb0JBQ1YsS0FBSztBQUFLLG1CQUVWLE1BQU07QUFBSyxxQkFDWCxNQUFNO0FBQUssb0JBQ1gsTUFBTTtBQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQge1xuICAgIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCwgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0LFxuICAgIER5bmFtaWNGb3JtTGF5b3V0LFxuICAgIER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSxcbiAgICBEeW5hbWljRm9ybVZhbGlkYXRpb25TZXJ2aWNlLFxuICAgIER5bmFtaWNJbnB1dE1vZGVsXG59IGZyb20gXCJAbmctZHluYW1pYy1mb3Jtcy9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcImR5bmFtaWMtbmctYm9vdHN0cmFwLWlucHV0XCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW5nLWJvb3RzdHJhcC1pbnB1dC5jb21wb25lbnQuaHRtbFwiLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuRGVmYXVsdFxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljTkdCb290c3RyYXBJbnB1dENvbXBvbmVudCBleHRlbmRzIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCB7XG5cbiAgICBASW5wdXQoKSBmb3JtTGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBncm91cDogRm9ybUdyb3VwO1xuICAgIEBJbnB1dCgpIGxheW91dDogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0O1xuICAgIEBJbnB1dCgpIG1vZGVsOiBEeW5hbWljSW5wdXRNb2RlbDtcblxuICAgIEBPdXRwdXQoKSBibHVyOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgY2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgZm9jdXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGxheW91dFNlcnZpY2U6IER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSxcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgdmFsaWRhdGlvblNlcnZpY2U6IER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UpIHtcblxuICAgICAgICBzdXBlcihsYXlvdXRTZXJ2aWNlLCB2YWxpZGF0aW9uU2VydmljZSk7XG4gICAgfVxufVxuIl19