import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { NgbTimepicker, NgbTimepickerConfig } from "@ng-bootstrap/ng-bootstrap";
import { DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService, DynamicTimePickerModel } from "@ng-dynamic-forms/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ng-dynamic-forms/core';
import * as ɵngcc2 from '@ng-bootstrap/ng-bootstrap';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@angular/common';
export class DynamicNGBootstrapTimePickerComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService, config) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.config = config;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicNGBootstrapTimePickerComponent.ɵfac = function DynamicNGBootstrapTimePickerComponent_Factory(t) { return new (t || DynamicNGBootstrapTimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgbTimepickerConfig)); };
DynamicNGBootstrapTimePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicNGBootstrapTimePickerComponent, selectors: [["dynamic-ng-bootstrap-timepicker"]], viewQuery: function DynamicNGBootstrapTimePickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(NgbTimepicker, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ngbTimePicker = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 11, consts: [[3, "formGroup"], [3, "id", "formControlName", "hourStep", "meridian", "minuteStep", "ngClass", "seconds", "secondStep", "size", "spinners"]], template: function DynamicNGBootstrapTimePickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵelement(1, "ngb-timepicker", 1);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.group);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.id)("formControlName", ctx.model.id)("hourStep", ctx.model.getAdditional("hourStep", ctx.config["hourStep"]))("meridian", ctx.model.meridian)("minuteStep", ctx.model.getAdditional("minuteStep", ctx.config["minuteStep"]))("ngClass", ctx.getClass("element", "control"))("seconds", ctx.model.showSeconds)("secondStep", ctx.model.getAdditional("secondStep", ctx.config["secondStep"]))("size", ctx.model.getAdditional("size", ctx.config["size"]))("spinners", ctx.model.getAdditional("spinners", ctx.config["spinners"]));
    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc2.NgbTimepicker, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass], encapsulation: 2, changeDetection: 0 });
DynamicNGBootstrapTimePickerComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService },
    { type: NgbTimepickerConfig }
];
DynamicNGBootstrapTimePickerComponent.propDecorators = {
    formLayout: [{ type: Input }],
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }],
    ngbTimePicker: [{ type: ViewChild, args: [NgbTimepicker, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicNGBootstrapTimePickerComponent, [{
        type: Component,
        args: [{
                selector: "dynamic-ng-bootstrap-timepicker",
                template: "<ng-container [formGroup]=\"group\">\n\n    <ngb-timepicker [id]=\"id\"\n                    [formControlName]=\"model.id\"\n                    [hourStep]=\"model.getAdditional('hourStep', config['hourStep'])\"\n                    [meridian]=\"model.meridian\"\n                    [minuteStep]=\"model.getAdditional('minuteStep', config['minuteStep'])\"\n                    [ngClass]=\"getClass('element', 'control')\"\n                    [seconds]=\"model.showSeconds\"\n                    [secondStep]=\"model.getAdditional('secondStep', config['secondStep'])\"\n                    [size]=\"model.getAdditional('size', config['size'])\"\n                    [spinners]=\"model.getAdditional('spinners', config['spinners'])\"></ngb-timepicker>\n\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }, { type: ɵngcc2.NgbTimepickerConfig }]; }, { blur: [{
            type: Output
        }], change: [{
            type: Output
        }], focus: [{
            type: Output
        }], formLayout: [{
            type: Input
        }], group: [{
            type: Input
        }], layout: [{
            type: Input
        }], model: [{
            type: Input
        }], ngbTimePicker: [{
            type: ViewChild,
            args: [NgbTimepicker, { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtdGltZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWR5bmFtaWMtZm9ybXMvdWktbmctYm9vdHN0cmFwL3NyYy9saWIvdGltZXBpY2tlci9keW5hbWljLW5nLWJvb3RzdHJhcC10aW1lcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2hGLE9BQU8sRUFDSCwyQkFBMkIsRUFFM0Isd0JBQXdCLEVBQ3hCLDRCQUE0QixFQUM1QixzQkFBc0IsRUFDekIsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7O0FBT2hDLE1BQU0sT0FBTyxxQ0FBc0MsU0FBUSwyQkFBMkI7QUFDdEYsSUFZSSxZQUFzQixhQUF1QyxFQUN2QyxpQkFBK0MsRUFDbEQsTUFBMkI7QUFDbEQsUUFDUSxLQUFLLENBQUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFDaEQsUUFMMEIsa0JBQWEsR0FBYixhQUFhLENBQTBCO0FBQUMsUUFDeEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUE4QjtBQUFDLFFBQ25ELFdBQU0sR0FBTixNQUFNLENBQXFCO0FBQUMsUUFSckMsU0FBSSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzNELFFBQWMsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzdELFFBQWMsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzVELElBUUksQ0FBQztBQUNMO2lFQXhCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLGlDQUFpQyxrQkFDM0M7Ozs7OztzS0FBK0Qsa0JBQy9ELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGNBQ2xEOzs7Ozs7Ozs2TUFDSTtBQUFDO0FBQStELFlBVmpFLHdCQUF3QjtBQUMxQixZQUFFLDRCQUE0QjtBQUM5QixZQU5zQixtQkFBbUI7QUFBRztBQUFHO0FBRWpDLHlCQWNYLEtBQUs7QUFBSyxvQkFDVixLQUFLO0FBQUsscUJBQ1YsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSyxtQkFFVixNQUFNO0FBQUsscUJBQ1gsTUFBTTtBQUFLLG9CQUNYLE1BQU07QUFBSyw0QkFFWCxTQUFTLFNBQUMsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtBQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IE5nYlRpbWVwaWNrZXIsIE5nYlRpbWVwaWNrZXJDb25maWcgfSBmcm9tIFwiQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXBcIjtcbmltcG9ydCB7XG4gICAgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50LCBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgIER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UsXG4gICAgRHluYW1pY1RpbWVQaWNrZXJNb2RlbFxufSBmcm9tIFwiQG5nLWR5bmFtaWMtZm9ybXMvY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJkeW5hbWljLW5nLWJvb3RzdHJhcC10aW1lcGlja2VyXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW5nLWJvb3RzdHJhcC10aW1lcGlja2VyLmNvbXBvbmVudC5odG1sXCIsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY05HQm9vdHN0cmFwVGltZVBpY2tlckNvbXBvbmVudCBleHRlbmRzIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCB7XG5cbiAgICBASW5wdXQoKSBmb3JtTGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBncm91cDogRm9ybUdyb3VwO1xuICAgIEBJbnB1dCgpIGxheW91dDogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0O1xuICAgIEBJbnB1dCgpIG1vZGVsOiBEeW5hbWljVGltZVBpY2tlck1vZGVsO1xuXG4gICAgQE91dHB1dCgpIGJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBmb2N1czogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBAVmlld0NoaWxkKE5nYlRpbWVwaWNrZXIsIHsgc3RhdGljOiB0cnVlIH0pIG5nYlRpbWVQaWNrZXI6IE5nYlRpbWVwaWNrZXI7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGF5b3V0U2VydmljZTogRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICAgICAgICAgICAgICBwdWJsaWMgY29uZmlnOiBOZ2JUaW1lcGlja2VyQ29uZmlnKSB7XG5cbiAgICAgICAgc3VwZXIobGF5b3V0U2VydmljZSwgdmFsaWRhdGlvblNlcnZpY2UpO1xuICAgIH1cbn1cbiJdfQ==