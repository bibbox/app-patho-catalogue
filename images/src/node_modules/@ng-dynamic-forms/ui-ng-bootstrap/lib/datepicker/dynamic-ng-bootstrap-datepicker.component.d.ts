import { EventEmitter } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { NgbDatepicker, NgbDatepickerConfig } from "@ng-bootstrap/ng-bootstrap";
import { DynamicDatePickerModel, DynamicFormControlComponent, DynamicFormControlCustomEvent, DynamicFormControlLayout, DynamicFormLayout, DynamicFormLayoutService, DynamicFormValidationService } from "@ng-dynamic-forms/core";
import * as ɵngcc0 from '@angular/core';
export declare class DynamicNGBootstrapDatePickerComponent extends DynamicFormControlComponent {
    protected layoutService: DynamicFormLayoutService;
    protected validationService: DynamicFormValidationService;
    config: NgbDatepickerConfig;
    formLayout: DynamicFormLayout;
    group: FormGroup;
    layout: DynamicFormControlLayout;
    model: DynamicDatePickerModel;
    blur: EventEmitter<any>;
    change: EventEmitter<any>;
    customEvent: EventEmitter<DynamicFormControlCustomEvent>;
    focus: EventEmitter<any>;
    ngbDatePicker: NgbDatepicker;
    constructor(layoutService: DynamicFormLayoutService, validationService: DynamicFormValidationService, config: NgbDatepickerConfig);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DynamicNGBootstrapDatePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DynamicNGBootstrapDatePickerComponent, "dynamic-ng-bootstrap-datepicker", never, { "formLayout": "formLayout"; "group": "group"; "layout": "layout"; "model": "model"; }, { "blur": "blur"; "change": "change"; "customEvent": "customEvent"; "focus": "focus"; }, never, never>;
}

//# sourceMappingURL=dynamic-ng-bootstrap-datepicker.component.d.ts.map