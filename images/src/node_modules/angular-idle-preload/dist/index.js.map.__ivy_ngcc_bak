{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,sCAOuB;AACvB,6BAAwB;AAEvB;;GAEG;AACS,QAAA,qBAAqB,GAAG,IAAI,qBAAc,CAAS,uBAAuB,CAAC,CAAC;AAExF;;;;GAIG;AACJ,uBAA8B,IAAY;IACxC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO,UAAC,EAAE,IAAK,OAAA,UAAU,CAAC,EAAE,CAAC,EAAd,CAAc,CAAC;KAC/B;IACD,IAAI,GAAG,GAAQ,MAAM,CAAC;IACtB,IAAI,GAAG,CAAC,mBAAmB,EAAE;QAC3B,OAAO,UAAC,EAAE,IAAK,OAAA,GAAG,CAAC,mBAAmB,CAAC,EAAE,CAAC,EAA3B,CAA2B,CAAC;KAC5C;IACD,OAAO,UAAC,EAAE,IAAK,OAAA,IAAI,CAAC,iBAAiB,CAAC,cAAM,OAAA,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAtB,CAAsB,CAAC,EAApD,CAAoD,CAAC;AACtE,CAAC;AATD,sCASC;AAED;IAEC;;OAEG;IACF,qBAAoB,OAAe,EAAyC,mBAAwB;QAAhF,YAAO,GAAP,OAAO,CAAQ;QAAyC,wBAAmB,GAAnB,mBAAmB,CAAK;IAAG,CAAC;IAEzG;;OAEG;IACF,6BAAO,GAAP,UAAQ,KAAoB,EAAE,EAAO,CAAC,0BAA0B;QAC9D,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QAC7B,OAAO,SAAE,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;;gBAbF,iBAAU;;;;gBA9BT,aAAM;gDAmCgC,aAAM,SAAC,6BAAqB;;IAUpE,kBAAC;CAAA,AAfD,IAeC;AAdY,kCAAW;AAgBxB;;GAEG;AACU,QAAA,sBAAsB,GAAU;IAC3C,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,CAAE,aAAM,EAAE,6BAAqB,CAAE,EAAE;CACzF,CAAC;AAEW,QAAA,+BAA+B,GAAU;IACpD,EAAE,OAAO,EAAE,6BAAqB,EAAE,UAAU,EAAE,aAAa,EAAE,IAAI,EAAE,CAAE,aAAM,CAAE,EAAE;CAChF,CAAC;AAMF;IAAA;IAwBA,CAAC;IApBA;;OAEG;IACK,yBAAO,GAAd,UAAe,MAA8B;QAA9B,uBAAA,EAAA,WAA8B;QAC3C,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EACJ,CAAC,MAAM,CAAC,mBAAmB,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,uCAA+B,CAAC,QAC7E,8BAAsB,CAC1B;SACF,CAAC;IACJ,CAAC;IAEF;;OAEG;IACK,8BAAY,GAAnB;QACE,OAAO,WAAW,CAAC;IACrB,CAAC;;gBAtBF,eAAQ,SAAC;gBACR,kBAAkB;iBACnB;;IAsBD,wBAAC;CAAA,AAxBD,IAwBC;AArBY,8CAAiB","sourcesContent":["/*\n * @PatrickJS\n */\n\nimport {\n  NgZone,\n  NgModule,\n  ModuleWithProviders,\n  Inject,\n  InjectionToken,\n  Injectable\n} from '@angular/core';\nimport {of} from \"rxjs\";\n\n /*\n  * token to requestIdleCallback\n  */\nexport const REQUEST_IDLE_CALLBACK = new InjectionToken<string>('REQUEST_IDLE_CALLBACK');\n\n /*\n  * Private API.\n  * please use @angularclass/request-idle-callback if you want\n  * to use `__requestIdle` this without providers\n  */\nexport function __requestIdle(zone: NgZone) {\n  if (typeof window === 'undefined') {\n    return (fn) => setTimeout(fn);\n  }\n  let win: any = window;\n  if (win.requestIdleCallback) {\n    return (fn) => win.requestIdleCallback(fn);\n  }\n  return (fn) => zone.runOutsideAngular(() => win.setTimeout(fn, 10));\n}\n\n@Injectable()\nexport class IdlePreload /*implements PreloadingStrategy*/ {\n /*\n  * include zone to run outside of zone.js\n  */\n  constructor(private _ngZone: NgZone, @Inject(REQUEST_IDLE_CALLBACK) private requestIdleCallback: any) {}\n\n /*\n  * fire off preloading async modules\n  */\n  preload(route: /*Route*/ any, fn: any /* () => Observable<any>*/ ): any/* Observable<any> */ {\n    this.requestIdleCallback(fn);\n    return of(null);\n  }\n\n}\n\n/*\n * raw providers\n */\nexport const IDLE_PRELOAD_PROVIDERS: any[] = [\n  { provide: IdlePreload, useClass: IdlePreload, deps: [ NgZone, REQUEST_IDLE_CALLBACK ] }\n];\n\nexport const REQUEST_IDLE_CALLBACK_PROVIDERS: any[] = [\n  { provide: REQUEST_IDLE_CALLBACK, useFactory: __requestIdle, deps: [ NgZone ] }\n];\n\nexport interface IdlePreloadConfig {\n  requestIdleCallback?: boolean;\n}\n\n@NgModule({\n  // because Angular\n})\nexport class IdlePreloadModule {\n /*\n  * forRoot() to allow providers only be created once\n  */\n  static forRoot(config: IdlePreloadConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: IdlePreloadModule,\n      providers: [\n        ...(config.requestIdleCallback === false ? [] : REQUEST_IDLE_CALLBACK_PROVIDERS),\n        ...IDLE_PRELOAD_PROVIDERS\n      ]\n    };\n  }\n\n /*\n  * alias for reference to IdlePreload token\n  */\n  static IdleStrategy() {\n    return IdlePreload;\n  }\n\n}\n"]}