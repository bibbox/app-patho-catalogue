{"version":3,"file":"angulartics2-intercom.umd.js","sources":["../../../../src/lib/providers/intercom/intercom.ts","../../../../src/lib/providers/intercom/angulartics2-intercom.ts"],"names":["Injectable","Angulartics2"],"mappings":";;;;;;;QASE,8BACU,YAA0B;AACnC,YAFD,iBAOC;AACH,YAPY,iBAAY,GAAZ,YAAY,CAAc;AACtC,YACI,IAAI,CAAC,YAAY,CAAC,iBAAiB;AACvC,iBAAO,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;AACnD,YAAI,IAAI,CAAC,YAAY,CAAC,qBAAqB;AAC3C,iBAAO,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;AACnD,SAAG;AACH,QACE,4CAAa,GAAb;AAAc,YAAd,iBAOC;AACH,YAPI,IAAI,CAAC,YAAY,CAAC,SAAS;AAC/B,iBAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;AACpD,iBAAO,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;AAChD,YAAI,IAAI,CAAC,YAAY,CAAC,UAAU;AAChC,iBAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;AACpD,iBAAO,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,GAAA,CAAC,CAAC;AACjE,SAAG;AAEH,QAAE,wCAAS,GAAT,UAAU,IAAY;AACxB,YAAI,IAAI;AACR,gBAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;AAClC,oBAAQ,GAAG,EAAE,IAAI;AACjB,iBAAO,CAAC,CAAC;AACT,aAAK;AAAC,YAAA,OAAO,CAAC,EAAE;AAChB,gBAAM,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;AAC1C,oBAAQ,MAAM,CAAC,CAAC;AAChB,iBAAO;AACP,aAAK;AACL,SAAG;AAEH,QAAE,yCAAU,GAAV,UAAW,MAAc,EAAE,UAAe;AAC5C,YAAI,IAAI;AACR,gBAAM,QAAQ,CAAC,YAAY,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;AACjD,aAAK;AAAC,YAAA,OAAO,CAAC,EAAE;AAChB,gBAAM,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;AAC1C,oBAAQ,MAAM,CAAC,CAAC;AAChB,iBAAO;AACP,aAAK;AACL,SAAG;AAEH,QAAE,gDAAiB,GAAjB,UAAkB,UAAe;AACnC,YAAI,IAAI;AACR,gBAAM,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AACpD,oBAAQ,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC;AAC/C,iBAAO;AACP,gBACM,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AACnC,aAAK;AAAC,YAAA,OAAO,CAAC,EAAE;AAChB,gBAAM,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;AAC1C,oBAAQ,MAAM,CAAC,CAAC;AAChB,iBAAO;AACP,aAAK;AACL,SAAG;;;;;6EACH;AAAC;AACmC;AAAU,iOAxDrC;wDADRA,xDACS;IADC,SAAC,EAAE,UAAU,EAAE,MAAM,jCAIT,gBARdC,eAAY;CAIa,DAJV;AAAU;AAAC,ICFnC;AACA;AAEA;AACO;AAAC;AAC6B;AAAC;AAAmE;AAAC;AAAM","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var Intercom: any;\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2Intercom {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      Intercom('trackEvent', action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      if (properties.userId && !properties.user_id) {\n        properties.user_id = properties.userId;\n      }\n\n      Intercom('boot', properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './intercom';\n"]}