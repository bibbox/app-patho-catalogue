{"version":3,"file":"angulartics2-mixpanel.umd.js","sources":["../../../../src/lib/providers/mixpanel/mixpanel.ts","../../../../src/lib/providers/mixpanel/angulartics2-mixpanel.ts"],"names":["Injectable","Angulartics2"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var mixpanel: any;\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2Mixpanel {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x) => this.setUserPropertiesOnce(x));\n    this.angulartics2.setSuperProperties\n      .subscribe((x) => this.setSuperProperties(x));\n    this.angulartics2.setSuperPropertiesOnce\n      .subscribe((x) => this.setSuperPropertiesOnce(x));\n    this.angulartics2.setAlias\n      .subscribe((x) => this.setAlias(x));\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    try {\n      mixpanel.track('Page Viewed', { page: path });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      mixpanel.track(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      mixpanel.identify(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      mixpanel.people.set(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserPropertiesOnce(properties: any) {\n    try {\n      mixpanel.people.set_once(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setSuperProperties(properties: any) {\n    try {\n      mixpanel.register(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setSuperPropertiesOnce(properties: any) {\n    try {\n      mixpanel.register_once(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setAlias(alias: any) {\n    try {\n      mixpanel.alias(alias);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './mixpanel';\n"]}