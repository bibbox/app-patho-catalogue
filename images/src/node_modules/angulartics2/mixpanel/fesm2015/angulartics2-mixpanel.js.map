{"version":3,"file":"angulartics2-mixpanel.js","sources":["../../../../src/lib/providers/mixpanel/mixpanel.ts","../../../../src/lib/providers/mixpanel/angulartics2-mixpanel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var mixpanel: any;\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2Mixpanel {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x) => this.setUserPropertiesOnce(x));\n    this.angulartics2.setSuperProperties\n      .subscribe((x) => this.setSuperProperties(x));\n    this.angulartics2.setSuperPropertiesOnce\n      .subscribe((x) => this.setSuperPropertiesOnce(x));\n    this.angulartics2.setAlias\n      .subscribe((x) => this.setAlias(x));\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    try {\n      mixpanel.track('Page Viewed', { page: path });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      mixpanel.track(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      mixpanel.identify(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      mixpanel.people.set(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserPropertiesOnce(properties: any) {\n    try {\n      mixpanel.people.set_once(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setSuperProperties(properties: any) {\n    try {\n      mixpanel.register(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setSuperPropertiesOnce(properties: any) {\n    try {\n      mixpanel.register_once(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setAlias(alias: any) {\n    try {\n      mixpanel.alias(alias);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './mixpanel';\n"]}