{"version":3,"file":"angulartics2.js","sources":["../../../src/lib/core/angulartics2-config.ts","../../../src/lib/core/angulartics2-token.ts","../../../src/lib/core/routerless.ts","../../../src/lib/core/angulartics2-core.ts","../../../src/lib/core/angular-router.ts","../../../src/lib/core/angulartics2On.ts","../../../src/lib/core/angulartics2.module.ts","../../../src/lib/core/angulartics2.ts"],"names":[],"mappings":"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","sourcesContent":["export interface GoogleAnalyticsSettings {\n  /** array of additional account names (only works for analyticsjs) */\n  additionalAccountNames: string[];\n  userId: any;\n  /** see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport */\n  transport: string;\n  anonymizeIp: boolean;\n}\n\nexport interface AppInsightsSettings {\n  userId: string;\n}\n\nexport interface GoogleTagManagerSettings {\n  userId: any;\n}\n\nexport interface GoogleGlobalSiteTagSettings {\n  trackingIds: any;\n  userId?: any;\n  anonymizeIp?: boolean;\n  customMap?: { [key: string]: string };\n}\n\nexport interface PageTrackingSettings {\n  autoTrackVirtualPages: boolean;\n  basePath: string;\n  excludedRoutes: (string | RegExp)[];\n  /** drop ids from url `/sections/123/pages/456` -> `/sections/pages` */\n  clearIds: boolean;\n  /** drop contents of url after hash marker `/callback#authcode=1234` -> `/callback` */\n  clearHash: boolean;\n  /** drop query params from url `/sections/123/pages?param=456&param2=789` -> `/sections/123/pages` */\n  clearQueryParams: boolean;\n  /** used with clearIds, define the matcher to clear url parts */\n  idsRegExp: RegExp;\n}\n\nexport interface Angulartics2Settings {\n  pageTracking: Partial<PageTrackingSettings>;\n  /** Disable page tracking */\n  developerMode: boolean;\n  ga: Partial<GoogleAnalyticsSettings>;\n  appInsights: Partial<AppInsightsSettings>;\n  gtm: Partial<GoogleTagManagerSettings>;\n  gst: Partial<GoogleGlobalSiteTagSettings>;\n}\n\nexport class DefaultConfig implements Angulartics2Settings {\n  pageTracking = {\n    autoTrackVirtualPages: true,\n    basePath: '',\n    excludedRoutes: [],\n    clearIds: false,\n    clearHash: false,\n    clearQueryParams: false,\n    idsRegExp: /^\\d+$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/,\n  };\n  developerMode = false;\n  ga = {};\n  appInsights = {};\n  gtm = {};\n  gst = {};\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { Angulartics2Settings } from './angulartics2-config';\n\nexport interface Angulartics2Token {\n  settings: Partial<Angulartics2Settings>;\n}\n\nexport const ANGULARTICS2_TOKEN = new InjectionToken<Angulartics2Token>('ANGULARTICS2');\n","import { BehaviorSubject,  Observable } from 'rxjs';\n\nimport { Angulartics2Settings } from './angulartics2-config';\n\nexport interface TrackNavigationEnd {\n  url: string;\n}\n\nexport class RouterlessTracking {\n  trackLocation(settings: Angulartics2Settings): Observable<TrackNavigationEnd> {\n    return new BehaviorSubject<TrackNavigationEnd>({ url: '/' });\n  }\n  prepareExternalUrl(url: string): string {\n    return url;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { MonoTypeOperatorFunction, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Angulartics2Settings, DefaultConfig } from './angulartics2-config';\nimport { EventTrack, PageTrack, UserTimings } from './angulartics2-interfaces';\nimport { Angulartics2Token, ANGULARTICS2_TOKEN } from './angulartics2-token';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2 {\n  settings: Angulartics2Settings;\n\n  pageTrack = new ReplaySubject<Partial<PageTrack>>(10);\n  eventTrack = new ReplaySubject<Partial<EventTrack>>(10);\n  exceptionTrack = new ReplaySubject<any>(10);\n  setAlias = new ReplaySubject<string>(10);\n  setUsername = new ReplaySubject<{ userId: string | number } | string>(10);\n  setUserProperties = new ReplaySubject<any>(10);\n  setUserPropertiesOnce = new ReplaySubject<any>(10);\n  setSuperProperties = new ReplaySubject<any>(10);\n  setSuperPropertiesOnce = new ReplaySubject<any>(10);\n  userTimings = new ReplaySubject<UserTimings>(10);\n\n  constructor(\n    private tracker: RouterlessTracking,\n    @Inject(ANGULARTICS2_TOKEN) setup: Angulartics2Token,\n  ) {\n    const defaultConfig = new DefaultConfig();\n    this.settings = { ...defaultConfig, ...setup.settings };\n    this.settings.pageTracking = {\n      ...defaultConfig.pageTracking,\n      ...setup.settings.pageTracking,\n    };\n    this.tracker\n      .trackLocation(this.settings)\n      .subscribe((event: TrackNavigationEnd) =>\n        this.trackUrlChange(event.url),\n      );\n  }\n\n  /** filters all events when developer mode is true */\n  filterDeveloperMode<T>(): MonoTypeOperatorFunction<T> {\n    return filter((value, index) => !this.settings.developerMode);\n  }\n\n  protected trackUrlChange(url: string) {\n    if (this.settings.pageTracking.autoTrackVirtualPages && !this.matchesExcludedRoute(url)) {\n      const clearedUrl = this.clearUrl(url);\n      let path: string;\n      if (this.settings.pageTracking.basePath.length) {\n        path = this.settings.pageTracking.basePath + clearedUrl;\n      } else {\n        path = this.tracker.prepareExternalUrl(clearedUrl);\n      }\n      this.pageTrack.next({ path });\n    }\n  }\n\n  /**\n   * Use string literals or regular expressions to exclude routes\n   * from automatic pageview tracking.\n   *\n   * @param url location\n   */\n  protected matchesExcludedRoute(url: string): boolean {\n    for (const excludedRoute of this.settings.pageTracking.excludedRoutes) {\n      const matchesRegex = excludedRoute instanceof RegExp && excludedRoute.test(url);\n      if (matchesRegex || url.indexOf(excludedRoute as string) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Removes id's from tracked route.\n   *  EX: `/project/12981/feature` becomes `/project/feature`\n   *\n   * @param url current page path\n   */\n  protected clearUrl(url: string): string {\n    if (this.settings.pageTracking.clearIds || this.settings.pageTracking.clearQueryParams ||\n      this.settings.pageTracking.clearHash) {\n      return url\n        .split('/')\n        .map(part => this.settings.pageTracking.clearQueryParams ? part.split('?')[0] : part)\n        .map(part => this.settings.pageTracking.clearHash ? part.split('#')[0] : part)\n        .filter(part => !this.settings.pageTracking.clearIds || !part.match(this.settings.pageTracking.idsRegExp))\n        .join('/');\n    }\n    return url;\n  }\n}\n","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { delay, filter, map } from 'rxjs/operators';\n\nimport { Observable } from 'rxjs';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n/**\n * Track Route changes for applications using Angular's\n * default router\n *\n * @link https://angular.io/api/router/Router\n */\n@Injectable({ providedIn: 'root' })\nexport class AngularRouterTracking implements RouterlessTracking {\n  constructor(\n    private router: Router,\n    private location: Location,\n  ) {}\n\n  trackLocation(settings): Observable<TrackNavigationEnd> {\n    return this.router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      filter(() => !settings.developerMode),\n      map((e: NavigationEnd) => {\n        return { url: e.urlAfterRedirects };\n      }),\n      delay(0),\n    );\n  }\n\n  prepareExternalUrl(url: string): string {\n    return this.location.prepareExternalUrl(url);\n  }\n}\n","import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Input,\n  NgModule,\n  Renderer2,\n} from '@angular/core';\nimport { Angulartics2 } from './angulartics2-core';\n\n@Directive({ selector: '[angulartics2On]' })\nexport class Angulartics2On implements AfterContentInit {\n  // tslint:disable-next-line:no-input-rename\n  @Input('angulartics2On') angulartics2On: string;\n  @Input() angularticsAction: string;\n  @Input() angularticsCategory: string;\n  @Input() angularticsLabel: string;\n  @Input() angularticsValue: string;\n  @Input() angularticsProperties: any = {};\n\n  constructor(\n    private elRef: ElementRef,\n    private angulartics2: Angulartics2,\n    private renderer: Renderer2\n  ) { }\n\n  ngAfterContentInit() {\n    this.renderer.listen(\n      this.elRef.nativeElement,\n      this.angulartics2On || 'click',\n      (event: Event) => this.eventTrack(event),\n    );\n  }\n\n  eventTrack(event: Event) {\n    const action = this.angularticsAction; // || this.inferEventName();\n    const properties: any = {\n      ...this.angularticsProperties,\n      eventType: event.type,\n    };\n\n    if (this.angularticsCategory) {\n      properties.category = this.angularticsCategory;\n    }\n    if (this.angularticsLabel) {\n      properties.label = this.angularticsLabel;\n    }\n    if (this.angularticsValue) {\n      properties.value = this.angularticsValue;\n    }\n\n    this.angulartics2.eventTrack.next({\n      action,\n      properties,\n    });\n  }\n\n  /*private isCommand() {\n    return ['a:', 'button:', 'button:button', 'button:submit', 'input:button', 'input:submit'].indexOf(\n      getDOM().tagName(this.el).toLowerCase() + ':' + (getDOM().type(this.el) || '')) >= 0;\n  }\n\n  private inferEventName() {\n    if (this.isCommand()) return getDOM().getText(this.el) || getDOM().getValue(this.el);\n    return getDOM().getProperty(this.el, 'id') || getDOM().getProperty(this.el, 'name') || getDOM().tagName(this.el);\n  }*/\n}\n\n@NgModule({\n  declarations: [Angulartics2On],\n  exports: [Angulartics2On],\n})\nexport class Angulartics2OnModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AngularRouterTracking } from './angular-router';\nimport { Angulartics2Settings } from './angulartics2-config';\nimport { Angulartics2 } from './angulartics2-core';\nimport { ANGULARTICS2_TOKEN } from './angulartics2-token';\nimport { Angulartics2On, Angulartics2OnModule } from './angulartics2On';\nimport { RouterlessTracking } from './routerless';\n\n@NgModule({\n  imports: [Angulartics2OnModule],\n  exports: [Angulartics2On],\n})\nexport class Angulartics2Module {\n  static forRoot(\n    settings: Partial<Angulartics2Settings> = {},\n  ): ModuleWithProviders<Angulartics2Module> {\n    return {\n      ngModule: Angulartics2Module,\n      providers: [\n        { provide: ANGULARTICS2_TOKEN, useValue: { settings } },\n        { provide: RouterlessTracking, useClass: AngularRouterTracking },\n        Angulartics2,\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}