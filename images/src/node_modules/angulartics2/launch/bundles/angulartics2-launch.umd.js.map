{"version":3,"file":"angulartics2-launch.umd.js","sources":["../../../../src/lib/providers/launch/launch.ts","../../../../src/lib/providers/launch/angulartics2-launch.ts"],"names":["Injectable","Angulartics2"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare const _satellite: any;\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2LaunchByAdobe {\n  payload: any = {};\n  constructor(\n    protected angulartics2: Angulartics2,\n  ) {\n    if ('undefined' === typeof _satellite) {\n      console.warn('Launch not found!');\n    }\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  setUsername(userId: string | boolean) {\n    if ('undefined' !== typeof userId && userId) {\n      this.payload.userId = userId;\n    }\n  }\n\n  setUserProperties(properties: any) {\n    if ('undefined' !== typeof properties && properties) {\n      this.payload.properties = properties;\n    }\n  }\n\n  startTracking() {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    this.payload = this.payload || {};\n    this.payload.path = path;\n\n    if ('undefined' !== typeof _satellite && _satellite) {\n      _satellite.track('pageTrack', this.payload);\n    }\n  }\n\n  /**\n   * @param action associated with the event\n   * @param properties associated with the event\n   */\n  eventTrack(action: string, properties: any) {\n    properties = properties || {};\n\n    // add properties to payload\n    this.payload.action = action;\n    this.payload.eventProperties = properties;\n\n    if ('undefined' !== typeof _satellite && _satellite) {\n      _satellite.track('eventTrack', this.payload);\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './launch';\n"]}