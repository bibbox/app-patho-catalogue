{"version":3,"file":"angulartics2-gst.js","sources":["../../../../src/lib/providers/gst/gst.ts","../../../../src/lib/providers/gst/angulartics2-gst.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2, GoogleGlobalSiteTagSettings, UserTimings } from 'angulartics2';\nimport { EventGst, UserTimingsGst } from './gst-interfaces';\n\ndeclare var gtag: any;\ndeclare var ga: any;\n\nexport class GoogleGlobalSiteTagDefaults implements GoogleGlobalSiteTagSettings {\n  trackingIds: string[] = [];\n\n  constructor() {\n    if (typeof ga !== 'undefined' && ga) {\n      // See: https://developers.google.com/analytics/devguides/collection/analyticsjs/ga-object-methods-reference\n      ga(() => {\n        ga.getAll().forEach((tracker: any) => {\n          const id = tracker.get('trackingId');\n          // If set both in forRoot and HTML page, we want to avoid duplicates\n          if (id !== undefined && this.trackingIds.indexOf(id) === -1) {\n            this.trackingIds.push(id);\n          }\n        });\n      });\n    }\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2GoogleGlobalSiteTag {\n  private dimensionsAndMetrics: { [key: string]: any } = {};\n\n  constructor(protected angulartics2: Angulartics2) {\n    const defaults = new GoogleGlobalSiteTagDefaults();\n    // Set the default settings for this module\n    this.angulartics2.settings.gst = { ...defaults, ...this.angulartics2.settings.gst };\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.exceptionTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.exceptionTrack(x));\n    this.angulartics2.userTimings\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe(x => this.userTimings(this.convertTimings(x)));\n    this.angulartics2.setUsername\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  /**\n   * Manually track page view, see:\n   *\n   * https://developers.google.com/analytics/devguides/collection/gtagjs/single-page-applications#tracking_virtual_pageviews\n   *\n   * @param path relative url\n   */\n  pageTrack(path: string) {\n    if (typeof gtag !== 'undefined' && gtag) {\n      const params: any = {\n        page_path: path,\n        page_location: window.location.protocol + '//' + window.location.host + path,\n        ...this.dimensionsAndMetrics\n      };\n\n      // Custom map must be reset with all config to stay valid.\n\n      if (this.angulartics2.settings.gst.customMap) {\n        params.custom_map = this.angulartics2.settings.gst.customMap;\n      }\n      if (this.angulartics2.settings.gst.userId) {\n        params.user_id = this.angulartics2.settings.gst.userId;\n      }\n      if (this.angulartics2.settings.gst.anonymizeIp) {\n        params.anonymize_ip = this.angulartics2.settings.gst.anonymizeIp;\n      }\n\n      for (const id of this.angulartics2.settings.gst.trackingIds) {\n        gtag('config', id, params);\n      }\n    }\n  }\n\n  /**\n   * Send interactions to gtag, i.e. for event tracking in Google Analytics. See:\n   *\n   * https://developers.google.com/analytics/devguides/collection/gtagjs/events\n   *\n   * @param action associated with the event\n   */\n  eventTrack(action: string, properties: Partial<EventGst> = {}) {\n    this.eventTrackInternal(action, {\n      event_category: properties.category || 'interaction',\n      event_label: properties.label,\n      value: properties.value,\n      non_interaction: properties.noninteraction,\n      ...properties.gstCustom\n    });\n  }\n\n  /**\n   * Exception Track Event in GST. See:\n   *\n   * https://developers.google.com/analytics/devguides/collection/gtagjs/exceptions\n   *\n   */\n  exceptionTrack(properties: any) {\n    // TODO: make interface\n    //  @param {Object} properties\n    //  @param {string} [properties.description]\n    //  @param {boolean} [properties.fatal]\n    if (properties.fatal === undefined) {\n      console.log('No \"fatal\" provided, sending with fatal=true');\n      properties.fatal = true;\n    }\n\n    properties.exDescription = properties.event ? properties.event.stack : properties.description;\n\n    this.eventTrack('exception', {\n      gstCustom: {\n        description: properties.exDescription,\n        fatal: properties.fatal,\n        ...properties.gstCustom\n      }\n    });\n  }\n\n  /**\n   * User Timings Event in GST.\n   *\n   * @param properties Comprised of the mandatory fields:\n   *  - name (string)\n   *  - value (number - integer)\n   * Properties can also have the optional fields:\n   *  - category (string)\n   *  - label (string)\n   *\n   * @link https://developers.google.com/analytics/devguides/collection/gtagjs/user-timings\n   */\n  userTimings(properties: UserTimingsGst) {\n    if (!properties) {\n      console.error('User timings - \"properties\" parameter is required to be set.');\n      return;\n    }\n\n    this.eventTrackInternal('timing_complete', {\n      name: properties.name,\n      value: properties.value,\n      event_category: properties.category,\n      event_label: properties.label\n    });\n  }\n\n  private convertTimings(properties: UserTimings): UserTimingsGst {\n    return {\n      name: properties.timingVar,\n      value: properties.timingValue,\n      category: properties.timingCategory,\n      label: properties.timingLabel\n    };\n  }\n\n  setUsername(userId: string | { userId: string | number }) {\n    this.angulartics2.settings.gst.userId = userId;\n    if (typeof gtag !== 'undefined' && gtag) {\n      gtag('set', { user_id: typeof userId === 'string' || !userId ? userId : userId.userId });\n    }\n  }\n\n  setUserProperties(properties: any) {\n    this.setDimensionsAndMetrics(properties);\n  }\n\n  private setDimensionsAndMetrics(properties: { [key: string]: any }) {\n    // We want the dimensions and metrics to accumulate, so we merge with previous value\n    this.dimensionsAndMetrics = {\n      ...this.dimensionsAndMetrics,\n      ...properties\n    };\n\n    // Remove properties that are null or undefined\n    Object.keys(this.dimensionsAndMetrics).forEach(key => {\n      const val = this.dimensionsAndMetrics[key];\n      if (val === undefined || val === null) {\n        delete this.dimensionsAndMetrics[key];\n      }\n    });\n\n    if (typeof gtag !== 'undefined' && gtag) {\n      gtag('set', this.dimensionsAndMetrics);\n    }\n  }\n\n  private eventTrackInternal(action: string, properties: any = {}) {\n    this.cleanProperties(properties);\n    if (typeof gtag !== 'undefined' && gtag) {\n      gtag('event', action, properties);\n    }\n  }\n\n  private cleanProperties(properties: { [key: string]: any }): void {\n    // GA requires that eventValue be an non-negative integer, see:\n    // https://developers.google.com/analytics/devguides/collection/gtagjs/events\n    if (properties.value) {\n      const parsed = parseInt(properties.value, 10);\n      properties.value = isNaN(parsed) ? 0 : parsed;\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './gst';\n"]}