/**
 * @fileoverview added by tsickle
 * Generated from: lib/sortablejs.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { GLOBALS } from './globals';
import { SortablejsDirective } from './sortablejs.directive';
import * as ɵngcc0 from '@angular/core';
export class SortablejsModule {
    /**
     * @param {?} globalOptions
     * @return {?}
     */
    static forRoot(globalOptions) {
        return {
            ngModule: SortablejsModule,
            providers: [
                { provide: GLOBALS, useValue: globalOptions },
            ],
        };
    }
}
SortablejsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SortablejsModule });
SortablejsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SortablejsModule_Factory(t) { return new (t || SortablejsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SortablejsModule, { declarations: function () { return [SortablejsDirective]; }, exports: function () { return [SortablejsDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SortablejsModule, [{
        type: NgModule,
        args: [{
                declarations: [SortablejsDirective],
                exports: [SortablejsDirective]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGFibGVqcy5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL1VzZXJzL21zaC9Eb2N1bWVudHMvY29kZS9naXRodWIvbmd4LXNvcnRhYmxlanMvcHJvamVjdHMvbmd4LXNvcnRhYmxlanMvc3JjL2xpYi9zb3J0YWJsZWpzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDbEMsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7O0FBTzNELE1BQU0sT0FBTyxnQkFBZ0I7QUFDN0I7QUFDTztBQUFnQztBQUFtQjtBQUFRLElBQXpELE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBc0I7QUFBSSxRQUM5QyxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsZ0JBQWdCO0FBQ2hDLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFDO0FBQ25ELGFBQU87QUFDUCxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSDs0Q0FkQyxRQUFRLFNBQUM7RUFDUixZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxrQkFDbkMsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUMsZUFDL0I7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7R0xPQkFMU30gZnJvbSAnLi9nbG9iYWxzJztcbmltcG9ydCB7U29ydGFibGVqc0RpcmVjdGl2ZX0gZnJvbSAnLi9zb3J0YWJsZWpzLmRpcmVjdGl2ZSc7XG5pbXBvcnQge09wdGlvbnN9IGZyb20gJ3NvcnRhYmxlanMnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtTb3J0YWJsZWpzRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW1NvcnRhYmxlanNEaXJlY3RpdmVdLFxufSlcbmV4cG9ydCBjbGFzcyBTb3J0YWJsZWpzTW9kdWxlIHtcblxuICBwdWJsaWMgc3RhdGljIGZvclJvb3QoZ2xvYmFsT3B0aW9uczogT3B0aW9ucyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U29ydGFibGVqc01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogU29ydGFibGVqc01vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7cHJvdmlkZTogR0xPQkFMUywgdXNlVmFsdWU6IGdsb2JhbE9wdGlvbnN9LFxuICAgICAgXSxcbiAgICB9O1xuICB9XG5cbn1cbiJdfQ==