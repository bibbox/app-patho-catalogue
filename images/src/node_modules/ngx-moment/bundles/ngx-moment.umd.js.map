{"version":3,"file":"ngx-moment.umd.js","sources":["../../../src/add.pipe.ts","../../../src/calendar.pipe.ts","../../../src/date-format.pipe.ts","../../../src/difference.pipe.ts","../../../src/moment-options.ts","../../../src/duration.pipe.ts","../../../src/from-unix.pipe.ts","../../../src/parse.pipe.ts","../../../src/from-utc.pipe.ts","../../../src/is-after.pipe.ts","../../../src/is-before.pipe.ts","../../../src/local.pipe.ts","../../../src/locale.pipe.ts","../../../src/parse-zone.pipe.ts","../../../src/subtract.pipe.ts","../../../src/time-ago.pipe.ts","../../../src/utc.pipe.ts","../../../src/moment.module.ts","../../../src/ngx-moment.ts"],"names":["Pipe","momentConstructor","moment.isMoment","EventEmitter","ChangeDetectorRef","NgZone","InjectionToken","moment.duration","moment.relativeTimeThreshold","Optional","Inject","moment.unix","moment.utc","moment.parseZone","moment.isDate","moment.locale","NgModule"],"mappings":"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","sourcesContent":["/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amAdd' })\nexport class AddPipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    amount: moment.DurationInputArg1,\n    unit?: moment.DurationInputArg2,\n  ): any {\n    if (\n      typeof amount === 'undefined' ||\n      (typeof amount === 'number' && typeof unit === 'undefined')\n    ) {\n      throw new Error('AddPipe: missing required arguments');\n    }\n    return momentConstructor(value).add(amount, unit);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport {\n  Pipe,\n  ChangeDetectorRef,\n  PipeTransform,\n  EventEmitter,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport * as moment from 'moment';\nimport { Subscription } from 'rxjs';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amCalendar', pure: false })\nexport class CalendarPipe implements PipeTransform, OnDestroy {\n  /**\n   * Internal reference counter, so we can clean up when no instances are in use\n   */\n  private static refs = 0;\n\n  private static timer: number | null = null;\n  private static midnight: EventEmitter<Date> | null = null;\n\n  private midnightSub: Subscription;\n\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\n    // using a single static timer for all instances of this pipe for performance reasons\n    CalendarPipe.initTimer(ngZone);\n\n    CalendarPipe.refs++;\n\n    // values such as Today will need to be replaced with Yesterday after midnight,\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\n      this.ngZone.run(() => this.cdRef.markForCheck());\n    });\n  }\n\n  transform(value: moment.MomentInput, ...args: any[]): any {\n    let formats: any = null;\n    let referenceTime: any = null;\n\n    for (let i = 0, len = args.length; i < len; i++) {\n      if (args[i] !== null) {\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\n          formats = args[i];\n        } else {\n          referenceTime = momentConstructor(args[i]);\n        }\n      }\n    }\n\n    return momentConstructor(value).calendar(referenceTime, formats);\n  }\n\n  ngOnDestroy(): void {\n    if (CalendarPipe.refs > 0) {\n      CalendarPipe.refs--;\n    }\n\n    if (CalendarPipe.refs === 0) {\n      CalendarPipe.removeTimer();\n    }\n\n    this.midnightSub.unsubscribe();\n  }\n\n  private static initTimer(ngZone: NgZone) {\n    // initialize the timer\n    if (!CalendarPipe.midnight) {\n      CalendarPipe.midnight = new EventEmitter<Date>();\n      if (typeof window !== 'undefined') {\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\n          return window.setTimeout(() => {\n            // emit the current date\n            CalendarPipe.midnight.emit(new Date());\n\n            // refresh the timer\n            CalendarPipe.removeTimer();\n            CalendarPipe.initTimer(ngZone);\n          }, timeToUpdate);\n        });\n      }\n    }\n  }\n\n  private static removeTimer() {\n    if (CalendarPipe.timer) {\n      window.clearTimeout(CalendarPipe.timer);\n      CalendarPipe.timer = null;\n      CalendarPipe.midnight = null;\n    }\n  }\n\n  private static _getMillisecondsUntilUpdate() {\n    const now = momentConstructor();\n    const tomorrow = momentConstructor().startOf('day').add(1, 'days');\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\n    return timeToMidnight + 1000; // 1 second after midnight\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amDateFormat' })\nexport class DateFormatPipe implements PipeTransform {\n  transform(value: moment.MomentInput, ...args: any[]): string {\n    if (!value) {\n      return '';\n    }\n    return momentConstructor(value).format(args[0]);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amDifference' })\nexport class DifferencePipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    otherValue: moment.MomentInput,\n    unit?: moment.unitOfTime.Diff,\n    precision?: boolean,\n  ): number {\n    const date = momentConstructor(value);\n    const date2 = otherValue !== null ? momentConstructor(otherValue) : momentConstructor();\n\n    return date.diff(date2, unit, precision);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NGX_MOMENT_OPTIONS: InjectionToken<NgxMomentOptions> = new InjectionToken<\n  NgxMomentOptions\n>('NGX_MOMENT_OPTIONS');\n\nexport interface NgxMomentOptions {\n  /**\n   * relativeTimeThresholdOptions\n   * @description Provides the `relativeTimeThreshold` units allowing a pipe to set the `moment.relativeTimeThreshold` values.\n   * The `key` is a unit defined as one of `ss`, `s`, `m`, `h`, `d`, `M`.\n   * @see https://momentjs.com/docs/#/customization/relative-time-threshold/\n   * @example by default more than 45 seconds is considered a minute, more than 22 hours is considered a day and so on.\n   * So settings the unit 'm' to `59` will adjust the `relativeTimeThreshold` and consider more than 59 minutes\n   * to be an hour (default is `45 minutes`)\n   */\n  relativeTimeThresholdOptions: { [key: string]: number };\n}\n","import * as moment from 'moment';\n\nimport { Inject, Optional, Pipe, PipeTransform } from '@angular/core';\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\n\n@Pipe({ name: 'amDuration' })\nexport class DurationPipe implements PipeTransform {\n  allowedUnits: Array<string> = ['ss', 's', 'm', 'h', 'd', 'M'];\n\n  constructor(@Optional() @Inject(NGX_MOMENT_OPTIONS) momentOptions?: NgxMomentOptions) {\n    this._applyOptions(momentOptions);\n  }\n\n  transform(value: moment.DurationInputArg1, ...args: string[]): string {\n    if (typeof args === 'undefined' || args.length !== 1) {\n      throw new Error('DurationPipe: missing required time unit argument');\n    }\n    return moment.duration(value, args[0] as moment.unitOfTime.DurationConstructor).humanize();\n  }\n\n  private _applyOptions(momentOptions: NgxMomentOptions): void {\n    if (!momentOptions) {\n      return;\n    }\n\n    if (!!momentOptions.relativeTimeThresholdOptions) {\n      const units: Array<string> = Object.keys(momentOptions.relativeTimeThresholdOptions);\n      const filteredUnits: Array<string> = units.filter(\n        (unit) => this.allowedUnits.indexOf(unit) !== -1,\n      );\n      filteredUnits.forEach((unit) => {\n        moment.relativeTimeThreshold(unit, momentOptions.relativeTimeThresholdOptions[unit]);\n      });\n    }\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({ name: 'amFromUnix' })\nexport class FromUnixPipe implements PipeTransform {\n  transform(value: number | string, ...args: string[]): any {\n    return typeof value === 'string' ? moment.unix(parseInt(value, 10)) : moment.unix(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amParse' })\nexport class ParsePipe implements PipeTransform {\n  transform(value: moment.MomentInput, formats: string | string[]): moment.Moment {\n    return momentConstructor(value, formats);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({ name: 'amFromUtc' })\nexport class FromUtcPipe implements PipeTransform {\n  transform(value: moment.MomentInput, formats?: string | string[], ...args: string[]): any {\n    return formats ? moment.utc(value, formats) : moment.utc(value);\n  }\n}\n","import * as moment from 'moment';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nconst momentConstructor = moment;\n\n@Pipe({\n  name: 'amIsAfter',\n})\nexport class IsAfterPipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    otherValue: moment.MomentInput,\n    unit?: moment.unitOfTime.StartOf,\n  ): boolean {\n    return momentConstructor(value).isAfter(momentConstructor(otherValue), unit);\n  }\n}\n","import * as moment from 'moment';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nconst momentConstructor = moment;\n\n@Pipe({\n  name: 'amIsBefore',\n})\nexport class IsBeforePipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    otherValue: moment.MomentInput,\n    unit?: moment.unitOfTime.StartOf,\n  ): boolean {\n    return momentConstructor(value).isBefore(momentConstructor(otherValue), unit);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amLocal' })\nexport class LocalTimePipe implements PipeTransform {\n  transform(value: moment.MomentInput): moment.Moment {\n    return momentConstructor(value).local();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n// See https://github.com/ng-packagr/ng-packagr/issues/217 for why this is needed:\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amLocale' })\nexport class LocalePipe implements PipeTransform {\n  transform(value: moment.MomentInput, locale: string): moment.Moment {\n    return momentConstructor(value).locale(locale);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({ name: 'amParseZone' })\nexport class ParseZonePipe implements PipeTransform {\n  transform(value: moment.MomentInput): moment.Moment {\n    return moment.parseZone(value);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amSubtract' })\nexport class SubtractPipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    amount: moment.DurationInputArg1,\n    unit?: moment.DurationInputArg2,\n  ): any {\n    if (\n      typeof amount === 'undefined' ||\n      (typeof amount === 'number' && typeof unit === 'undefined')\n    ) {\n      throw new Error('SubtractPipe: missing required arguments');\n    }\n    return momentConstructor(value).subtract(amount, unit);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amTimeAgo', pure: false })\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\n  private currentTimer: number | null;\n\n  private lastTime: Number;\n  private lastValue: moment.MomentInput;\n  private lastOmitSuffix: boolean;\n  private lastLocale?: string;\n  private lastText: string;\n  private formatFn: (m: moment.Moment) => string;\n\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {}\n\n  format(m: moment.Moment) {\n    return m.from(momentConstructor(), this.lastOmitSuffix);\n  }\n\n  transform(\n    value: moment.MomentInput,\n    omitSuffix?: boolean,\n    formatFn?: (m: moment.Moment) => string,\n  ): string {\n    if (this.hasChanged(value, omitSuffix)) {\n      this.lastTime = this.getTime(value);\n      this.lastValue = value;\n      this.lastOmitSuffix = omitSuffix;\n      this.lastLocale = this.getLocale(value);\n      this.formatFn = formatFn || this.format.bind(this);\n      this.removeTimer();\n      this.createTimer();\n      this.lastText = this.formatFn(momentConstructor(value));\n    } else {\n      this.createTimer();\n    }\n\n    return this.lastText;\n  }\n\n  ngOnDestroy(): void {\n    this.removeTimer();\n  }\n\n  private createTimer() {\n    if (this.currentTimer) {\n      return;\n    }\n\n    const momentInstance = momentConstructor(this.lastValue);\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\n\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\n      if (typeof window !== 'undefined') {\n        return window.setTimeout(() => {\n          this.lastText = this.formatFn(momentConstructor(this.lastValue));\n\n          this.currentTimer = null;\n          this.ngZone.run(() => this.cdRef.markForCheck());\n        }, timeToUpdate);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  private removeTimer() {\n    if (this.currentTimer) {\n      window.clearTimeout(this.currentTimer);\n      this.currentTimer = null;\n    }\n  }\n\n  private getSecondsUntilUpdate(momentInstance: moment.Moment) {\n    const howOld = Math.abs(momentConstructor().diff(momentInstance, 'minute'));\n    if (howOld < 1) {\n      return 1;\n    } else if (howOld < 60) {\n      return 30;\n    } else if (howOld < 180) {\n      return 300;\n    } else {\n      return 3600;\n    }\n  }\n\n  private hasChanged(value: moment.MomentInput, omitSuffix?: boolean): boolean {\n    return (\n      this.getTime(value) !== this.lastTime ||\n      this.getLocale(value) !== this.lastLocale ||\n      omitSuffix !== this.lastOmitSuffix\n    );\n  }\n\n  private getTime(value: moment.MomentInput): number {\n    if (moment.isDate(value)) {\n      return value.getTime();\n    } else if (moment.isMoment(value)) {\n      return value.valueOf();\n    } else {\n      return momentConstructor(value).valueOf();\n    }\n  }\n\n  private getLocale(value: moment.MomentInput): string | null {\n    return moment.isMoment(value) ? value.locale() : moment.locale();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\nconst momentConstructor = moment;\n\n@Pipe({ name: 'amUtc' })\nexport class UtcPipe implements PipeTransform {\n  transform(value: moment.MomentInput): moment.Moment {\n    return momentConstructor(value).utc();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\n\nimport { AddPipe } from './add.pipe';\nimport { CalendarPipe } from './calendar.pipe';\nimport { DateFormatPipe } from './date-format.pipe';\nimport { DifferencePipe } from './difference.pipe';\nimport { DurationPipe } from './duration.pipe';\nimport { FromUnixPipe } from './from-unix.pipe';\nimport { FromUtcPipe } from './from-utc.pipe';\nimport { IsAfterPipe } from './is-after.pipe';\nimport { IsBeforePipe } from './is-before.pipe';\nimport { LocalTimePipe } from './local.pipe';\nimport { LocalePipe } from './locale.pipe';\nimport { ParsePipe } from './parse.pipe';\nimport { ParseZonePipe } from './parse-zone.pipe';\nimport { SubtractPipe } from './subtract.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { UtcPipe } from './utc.pipe';\n\nconst ANGULAR_MOMENT_PIPES = [\n  AddPipe,\n  CalendarPipe,\n  DateFormatPipe,\n  DifferencePipe,\n  DurationPipe,\n  FromUnixPipe,\n  ParsePipe,\n  SubtractPipe,\n  TimeAgoPipe,\n  UtcPipe,\n  FromUtcPipe,\n  LocalTimePipe,\n  LocalePipe,\n  ParseZonePipe,\n  IsBeforePipe,\n  IsAfterPipe,\n];\n\n@NgModule({\n  declarations: ANGULAR_MOMENT_PIPES,\n  exports: ANGULAR_MOMENT_PIPES,\n})\nexport class MomentModule {\n  static forRoot(options?: NgxMomentOptions): ModuleWithProviders<MomentModule> {\n    return {\n      ngModule: MomentModule,\n      providers: [\n        {\n          provide: NGX_MOMENT_OPTIONS,\n          useValue: {\n            ...options,\n          },\n        },\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}