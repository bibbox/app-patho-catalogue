/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */
import { Pipe } from '@angular/core';
import * as moment from 'moment';
import * as ɵngcc0 from '@angular/core';
const momentConstructor = moment;
export class AddPipe {
    transform(value, amount, unit) {
        if (typeof amount === 'undefined' ||
            (typeof amount === 'number' && typeof unit === 'undefined')) {
            throw new Error('AddPipe: missing required arguments');
        }
        return momentConstructor(value).add(amount, unit);
    }
}
AddPipe.ɵfac = function AddPipe_Factory(t) { return new (t || AddPipe)(); };
AddPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "amAdd", type: AddPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AddPipe, [{
        type: Pipe,
        args: [{ name: 'amAdd' }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLnBpcGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxLQUFLLE1BQU0sTUFBTSxRQUFRLENBQUMsakNBQWpDLE9BQU8sS0FBSyxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBRWpDLE1BQU0saUJBQWlCLEdBQUcsTUFBTSxDQUFDLENBR2pDLE1BQU07TUFBTyxPQUFPLE9BQ2xCLFNBQVMsQ0FDUCw5QkFMSixNQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQztDQUtKLEVBQ3pCLE1BQWdDLEVBQ2hDLElBQStCLGZBSm5DLE1BQU0sT0FBTyxPQUFPO0lBTWhCLElBQ0UsT0FBTyxNQUFNLEtBQUssMUJBUEQsSUFDckIsU0FBUyxDQUNQLEtBQXlCLEVBQ3pCLE1BQWdDLEVBQ2hDLElBQStCO0FBR0EsZ0JBQzdCLENBQUMsT0FBTyxNQUFNLEtBQUssUUFBUTtFQUFJLE9BQU8sSUFBSSxLQUFLLFdBQVcsQ0FBQyxFQUMzRCxoQ0FETixZQUFNLENBQUMsT0FBTyxNQUFNLEtBQUssUUFBUSxJQUFJLE9BQU8sSUFBSSxLQUFLLFdBQVcsQ0FBQyxFQUMzRDtZQUNBLE1BQU0sSUFBSSxLQUFLLENBQUMscUNBQXFDLENBQUMsQ0FBQyxuRUFBN0QsWUFBTSxNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7U0FDeEQsVEFBTCxTQUFLO1FBQ0QsT0FBTyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLDFEQUF0RCxRQUFJLE9BQU8saUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNwRCxDQUFDLExBQUgsSUFBRSxDQUFDO0FBQ0g7bUNBZkMsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSw5QkFBdEIsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRTs7Ozs7O0FBUEEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBuZ3gtbW9tZW50IChjKSAyMDE1LCAyMDE2IFVyaSBTaGFrZWQgLyBNSVQgTGljZW5jZSAqL1xuXG5pbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBtb21lbnQgZnJvbSAnbW9tZW50JztcblxuY29uc3QgbW9tZW50Q29uc3RydWN0b3IgPSBtb21lbnQ7XG5cbkBQaXBlKHsgbmFtZTogJ2FtQWRkJyB9KVxuZXhwb3J0IGNsYXNzIEFkZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKFxuICAgIHZhbHVlOiBtb21lbnQuTW9tZW50SW5wdXQsXG4gICAgYW1vdW50OiBtb21lbnQuRHVyYXRpb25JbnB1dEFyZzEsXG4gICAgdW5pdD86IG1vbWVudC5EdXJhdGlvbklucHV0QXJnMixcbiAgKTogYW55IHtcbiAgICBpZiAoXG4gICAgICB0eXBlb2YgYW1vdW50ID09PSAndW5kZWZpbmVkJyB8fFxuICAgICAgKHR5cGVvZiBhbW91bnQgPT09ICdudW1iZXInICYmIHR5cGVvZiB1bml0ID09PSAndW5kZWZpbmVkJylcbiAgICApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWRkUGlwZTogbWlzc2luZyByZXF1aXJlZCBhcmd1bWVudHMnKTtcbiAgICB9XG4gICAgcmV0dXJuIG1vbWVudENvbnN0cnVjdG9yKHZhbHVlKS5hZGQoYW1vdW50LCB1bml0KTtcbiAgfVxufVxuIl19