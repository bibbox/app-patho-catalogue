"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var helper_1 = require("./helper");
exports.default = (function (service) {
    var e_1, _a, e_2, _b;
    var mockName = "" + (service && service.constructor ? service.constructor.name : 'unknown');
    var value = {};
    var methods = helper_1.default.extractMethodsFromPrototype(service);
    try {
        for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {
            var method = methods_1_1.value;
            helper_1.default.mock(value, method, mockName);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (methods_1_1 && !methods_1_1.done && (_a = methods_1.return)) _a.call(methods_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    var properties = helper_1.default.extractPropertiesFromPrototype(service);
    try {
        for (var properties_1 = __values(properties), properties_1_1 = properties_1.next(); !properties_1_1.done; properties_1_1 = properties_1.next()) {
            var property = properties_1_1.value;
            helper_1.default.mock(value, property, 'get', mockName);
            helper_1.default.mock(value, property, 'set', mockName);
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (properties_1_1 && !properties_1_1.done && (_b = properties_1.return)) _b.call(properties_1);
        }
        finally { if (e_2) throw e_2.error; }
    }
    if (typeof value === 'object' && typeof service === 'object') {
        Object.setPrototypeOf(value, service);
    }
    return value;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLmNyZWF0ZS1tb2NrLWZyb20tcHJvdG90eXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL21vY2stc2VydmljZS9oZWxwZXIuY3JlYXRlLW1vY2stZnJvbS1wcm90b3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLG1DQUF5QztBQUd6QyxtQkFBZSxVQUFDLE9BQVk7O0lBQzFCLElBQU0sUUFBUSxHQUFHLE1BQUcsT0FBTyxJQUFJLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUUsQ0FBQztJQUM1RixJQUFNLEtBQUssR0FBUSxFQUFFLENBQUM7SUFFdEIsSUFBTSxPQUFPLEdBQUcsZ0JBQWlCLENBQUMsMkJBQTJCLENBQUMsT0FBTyxDQUFDLENBQUM7O1FBQ3ZFLEtBQXFCLElBQUEsWUFBQSxTQUFBLE9BQU8sQ0FBQSxnQ0FBQSxxREFBRTtZQUF6QixJQUFNLE1BQU0sb0JBQUE7WUFDZixnQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztTQUNqRDs7Ozs7Ozs7O0lBRUQsSUFBTSxVQUFVLEdBQUcsZ0JBQWlCLENBQUMsOEJBQThCLENBQUMsT0FBTyxDQUFDLENBQUM7O1FBQzdFLEtBQXVCLElBQUEsZUFBQSxTQUFBLFVBQVUsQ0FBQSxzQ0FBQSw4REFBRTtZQUE5QixJQUFNLFFBQVEsdUJBQUE7WUFDakIsZ0JBQWlCLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ3pELGdCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztTQUMxRDs7Ozs7Ozs7O0lBRUQsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1FBQzVELE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0tBQ3ZDO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9ja1NlcnZpY2VIZWxwZXIgZnJvbSAnLi9oZWxwZXInO1xuaW1wb3J0IHsgTW9ja2VkRnVuY3Rpb24gfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgKHNlcnZpY2U6IGFueSk6IHsgW2tleSBpbiBrZXlvZiBhbnldOiBNb2NrZWRGdW5jdGlvbiB9ID0+IHtcbiAgY29uc3QgbW9ja05hbWUgPSBgJHtzZXJ2aWNlICYmIHNlcnZpY2UuY29uc3RydWN0b3IgPyBzZXJ2aWNlLmNvbnN0cnVjdG9yLm5hbWUgOiAndW5rbm93bid9YDtcbiAgY29uc3QgdmFsdWU6IGFueSA9IHt9O1xuXG4gIGNvbnN0IG1ldGhvZHMgPSBtb2NrU2VydmljZUhlbHBlci5leHRyYWN0TWV0aG9kc0Zyb21Qcm90b3R5cGUoc2VydmljZSk7XG4gIGZvciAoY29uc3QgbWV0aG9kIG9mIG1ldGhvZHMpIHtcbiAgICBtb2NrU2VydmljZUhlbHBlci5tb2NrKHZhbHVlLCBtZXRob2QsIG1vY2tOYW1lKTtcbiAgfVxuXG4gIGNvbnN0IHByb3BlcnRpZXMgPSBtb2NrU2VydmljZUhlbHBlci5leHRyYWN0UHJvcGVydGllc0Zyb21Qcm90b3R5cGUoc2VydmljZSk7XG4gIGZvciAoY29uc3QgcHJvcGVydHkgb2YgcHJvcGVydGllcykge1xuICAgIG1vY2tTZXJ2aWNlSGVscGVyLm1vY2sodmFsdWUsIHByb3BlcnR5LCAnZ2V0JywgbW9ja05hbWUpO1xuICAgIG1vY2tTZXJ2aWNlSGVscGVyLm1vY2sodmFsdWUsIHByb3BlcnR5LCAnc2V0JywgbW9ja05hbWUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHNlcnZpY2UgPT09ICdvYmplY3QnKSB7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHZhbHVlLCBzZXJ2aWNlKTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn07XG4iXX0=