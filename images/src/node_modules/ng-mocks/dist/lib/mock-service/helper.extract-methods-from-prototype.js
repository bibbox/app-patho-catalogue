"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = (function (service) {
    var e_1, _a;
    var result = [];
    var prototype = service;
    while (prototype && Object.getPrototypeOf(prototype) !== null) {
        try {
            for (var _b = (e_1 = void 0, __values(Object.getOwnPropertyNames(prototype))), _c = _b.next(); !_c.done; _c = _b.next()) {
                var method = _c.value;
                if (method === 'constructor') {
                    continue;
                }
                var descriptor = Object.getOwnPropertyDescriptor(prototype, method);
                var isGetterSetter = descriptor && (descriptor.get || descriptor.set);
                if (isGetterSetter || result.indexOf(method) !== -1) {
                    continue;
                }
                result.push(method);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        prototype = Object.getPrototypeOf(prototype);
    }
    return result;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLmV4dHJhY3QtbWV0aG9kcy1mcm9tLXByb3RvdHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9tb2NrLXNlcnZpY2UvaGVscGVyLmV4dHJhY3QtbWV0aG9kcy1mcm9tLXByb3RvdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsbUJBQWUsVUFBSSxPQUFVOztJQUMzQixJQUFNLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFDNUIsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDO0lBQ3hCLE9BQU8sU0FBUyxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLEtBQUssSUFBSSxFQUFFOztZQUM3RCxLQUFxQixJQUFBLG9CQUFBLFNBQUEsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxDQUFBLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQXZELElBQU0sTUFBTSxXQUFBO2dCQUNmLElBQUssTUFBYyxLQUFLLGFBQWEsRUFBRTtvQkFDckMsU0FBUztpQkFDVjtnQkFFRCxJQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsd0JBQXdCLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUN0RSxJQUFNLGNBQWMsR0FBRyxVQUFVLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDeEUsSUFBSSxjQUFjLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtvQkFDbkQsU0FBUztpQkFDVjtnQkFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3JCOzs7Ozs7Ozs7UUFDRCxTQUFTLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUM5QztJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IDxUPihzZXJ2aWNlOiBUKTogc3RyaW5nW10gPT4ge1xuICBjb25zdCByZXN1bHQ6IHN0cmluZ1tdID0gW107XG4gIGxldCBwcm90b3R5cGUgPSBzZXJ2aWNlO1xuICB3aGlsZSAocHJvdG90eXBlICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90b3R5cGUpICE9PSBudWxsKSB7XG4gICAgZm9yIChjb25zdCBtZXRob2Qgb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvdG90eXBlKSkge1xuICAgICAgaWYgKChtZXRob2QgYXMgYW55KSA9PT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocHJvdG90eXBlLCBtZXRob2QpO1xuICAgICAgY29uc3QgaXNHZXR0ZXJTZXR0ZXIgPSBkZXNjcmlwdG9yICYmIChkZXNjcmlwdG9yLmdldCB8fCBkZXNjcmlwdG9yLnNldCk7XG4gICAgICBpZiAoaXNHZXR0ZXJTZXR0ZXIgfHwgcmVzdWx0LmluZGV4T2YobWV0aG9kKSAhPT0gLTEpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXN1bHQucHVzaChtZXRob2QpO1xuICAgIH1cbiAgICBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG90eXBlKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiJdfQ==