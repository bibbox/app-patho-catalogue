import { MockedComponent } from '../mock-component/types';
import { MockedDirective } from '../mock-directive/types';
import { MockedModule } from '../mock-module/types';
import { MockedPipe } from '../mock-pipe/types';
import { Type } from './core.types';
/**
 * Returns a def of a mock module based on a mock module or a source module.
 *
 * @see https://github.com/ike18t/ng-mocks#getmockedngdefof
 */
export declare function getMockedNgDefOf<T>(declaration: Type<T>, type: 'm'): Type<MockedModule<T>>;
/**
 * Returns a def of a mock component based on a mock component or a source component.
 *
 * @see https://github.com/ike18t/ng-mocks#getmockedngdefof
 */
export declare function getMockedNgDefOf<T>(declaration: Type<T>, type: 'c'): Type<MockedComponent<T>>;
/**
 * Returns a def of a mock directive based on a mock directive or a source directive.
 *
 * @see https://github.com/ike18t/ng-mocks#getmockedngdefof
 */
export declare function getMockedNgDefOf<T>(declaration: Type<T>, type: 'd'): Type<MockedDirective<T>>;
/**
 * Returns a def of a mock pipe based on a mock pipe or a source pipe.
 *
 * @see https://github.com/ike18t/ng-mocks#getmockedngdefof
 */
export declare function getMockedNgDefOf<T>(declaration: Type<T>, type: 'p'): Type<MockedPipe<T>>;
/**
 * Returns a def of a mock class based on a mock class or a source class decorated by a ng type.
 *
 * @see https://github.com/ike18t/ng-mocks#getmockedngdefof
 */
export declare function getMockedNgDefOf(declaration: Type<any>): Type<any>;
