"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var helper_1 = require("../mock-service/helper");
exports.default = (function (instance, override, style) {
    var e_1, _a;
    if (typeof override === 'string') {
        return helper_1.default.mock(instance, override, style);
    }
    try {
        for (var _b = __values(Object.getOwnPropertyNames(override)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            var def = Object.getOwnPropertyDescriptor(override, key);
            /* istanbul ignore else */
            if (def) {
                Object.defineProperty(instance, key, def);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return instance;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuc3R1Yi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9tb2NrLWhlbHBlci9tb2NrLWhlbHBlci5zdHViLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxpREFBdUQ7QUFHdkQsbUJBQWUsVUFBcUIsUUFBYSxFQUFFLFFBQWEsRUFBRSxLQUFxQjs7SUFDckYsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7UUFDaEMsT0FBTyxnQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMxRDs7UUFDRCxLQUFrQixJQUFBLEtBQUEsU0FBQSxNQUFNLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7WUFBbkQsSUFBTSxHQUFHLFdBQUE7WUFDWixJQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsd0JBQXdCLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQzNELDBCQUEwQjtZQUMxQixJQUFJLEdBQUcsRUFBRTtnQkFDUCxNQUFNLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7YUFDM0M7U0FDRjs7Ozs7Ozs7O0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vY2tTZXJ2aWNlSGVscGVyIGZyb20gJy4uL21vY2stc2VydmljZS9oZWxwZXInO1xuaW1wb3J0IHsgTW9ja2VkRnVuY3Rpb24gfSBmcm9tICcuLi9tb2NrLXNlcnZpY2UvdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCA8VCA9IE1vY2tlZEZ1bmN0aW9uPihpbnN0YW5jZTogYW55LCBvdmVycmlkZTogYW55LCBzdHlsZT86ICdnZXQnIHwgJ3NldCcpOiBUID0+IHtcbiAgaWYgKHR5cGVvZiBvdmVycmlkZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbW9ja1NlcnZpY2VIZWxwZXIubW9jayhpbnN0YW5jZSwgb3ZlcnJpZGUsIHN0eWxlKTtcbiAgfVxuICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvdmVycmlkZSkpIHtcbiAgICBjb25zdCBkZWYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG92ZXJyaWRlLCBrZXkpO1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKGRlZikge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGluc3RhbmNlLCBrZXksIGRlZik7XG4gICAgfVxuICB9XG4gIHJldHVybiBpbnN0YW5jZTtcbn07XG4iXX0=