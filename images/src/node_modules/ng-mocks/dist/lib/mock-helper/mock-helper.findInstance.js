"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var func_get_source_of_mock_1 = require("../common/func.get-source-of-mock");
var func_get_last_fixture_1 = require("./func.get-last-fixture");
var mock_helper_findInstances_1 = require("./mock-helper.findInstances");
var defaultNotFoundValue = {}; // simulating Symbol
exports.default = (function () {
    var _a;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var el = typeof args[0] !== 'object' ? undefined : args[0].debugElement ? args[0].debugElement : args[0];
    var sel = el ? args[1] : args[0];
    var notFoundValue = el && args.length === 3 ? args[2] : !el && args.length === 2 ? args[1] : defaultNotFoundValue;
    var debugElement = el || ((_a = func_get_last_fixture_1.default()) === null || _a === void 0 ? void 0 : _a.debugElement);
    var result = mock_helper_findInstances_1.default(debugElement, func_get_source_of_mock_1.getSourceOfMock(sel));
    if (result.length) {
        return result[0];
    }
    if (notFoundValue !== defaultNotFoundValue) {
        return notFoundValue;
    }
    throw new Error("Cannot find an instance via ngMocks.findInstance(" + sel.name + ")");
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuZmluZEluc3RhbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL21vY2staGVscGVyL21vY2staGVscGVyLmZpbmRJbnN0YW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDZFQUFvRTtBQUdwRSxpRUFBcUQ7QUFDckQseUVBQXdEO0FBRXhELElBQU0sb0JBQW9CLEdBQUcsRUFBRSxDQUFDLENBQUMsb0JBQW9CO0FBRXJELG1CQUFlOztJQUFJLGNBQWM7U0FBZCxVQUFjLEVBQWQscUJBQWMsRUFBZCxJQUFjO1FBQWQseUJBQWM7O0lBQy9CLElBQU0sRUFBRSxHQUNOLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEcsSUFBTSxHQUFHLEdBQWMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5QyxJQUFNLGFBQWEsR0FDakIsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixDQUFDO0lBRWhHLElBQU0sWUFBWSxHQUFHLEVBQUUsV0FBSSwrQkFBYyxFQUFFLDBDQUFFLFlBQVksQ0FBQSxDQUFDO0lBRTFELElBQU0sTUFBTSxHQUFHLG1DQUFhLENBQUMsWUFBWSxFQUFFLHlDQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNqRSxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQUU7UUFDakIsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEI7SUFDRCxJQUFJLGFBQWEsS0FBSyxvQkFBb0IsRUFBRTtRQUMxQyxPQUFPLGFBQWEsQ0FBQztLQUN0QjtJQUNELE1BQU0sSUFBSSxLQUFLLENBQUMsc0RBQW9ELEdBQUcsQ0FBQyxJQUFJLE1BQUcsQ0FBQyxDQUFDO0FBQ25GLENBQUMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGUgfSBmcm9tICcuLi9jb21tb24vY29yZS50eXBlcyc7XG5pbXBvcnQgeyBnZXRTb3VyY2VPZk1vY2sgfSBmcm9tICcuLi9jb21tb24vZnVuYy5nZXQtc291cmNlLW9mLW1vY2snO1xuaW1wb3J0IHsgTW9ja2VkRGVidWdFbGVtZW50IH0gZnJvbSAnLi4vbW9jay1yZW5kZXIvdHlwZXMnO1xuXG5pbXBvcnQgZ2V0TGFzdEZpeHR1cmUgZnJvbSAnLi9mdW5jLmdldC1sYXN0LWZpeHR1cmUnO1xuaW1wb3J0IGZpbmRJbnN0YW5jZXMgZnJvbSAnLi9tb2NrLWhlbHBlci5maW5kSW5zdGFuY2VzJztcblxuY29uc3QgZGVmYXVsdE5vdEZvdW5kVmFsdWUgPSB7fTsgLy8gc2ltdWxhdGluZyBTeW1ib2xcblxuZXhwb3J0IGRlZmF1bHQgPFQ+KC4uLmFyZ3M6IGFueVtdKSA9PiB7XG4gIGNvbnN0IGVsOiB1bmRlZmluZWQgfCBNb2NrZWREZWJ1Z0VsZW1lbnQgPVxuICAgIHR5cGVvZiBhcmdzWzBdICE9PSAnb2JqZWN0JyA/IHVuZGVmaW5lZCA6IGFyZ3NbMF0uZGVidWdFbGVtZW50ID8gYXJnc1swXS5kZWJ1Z0VsZW1lbnQgOiBhcmdzWzBdO1xuICBjb25zdCBzZWw6IFR5cGU8YW55PiA9IGVsID8gYXJnc1sxXSA6IGFyZ3NbMF07XG4gIGNvbnN0IG5vdEZvdW5kVmFsdWU6IGFueSA9XG4gICAgZWwgJiYgYXJncy5sZW5ndGggPT09IDMgPyBhcmdzWzJdIDogIWVsICYmIGFyZ3MubGVuZ3RoID09PSAyID8gYXJnc1sxXSA6IGRlZmF1bHROb3RGb3VuZFZhbHVlO1xuXG4gIGNvbnN0IGRlYnVnRWxlbWVudCA9IGVsIHx8IGdldExhc3RGaXh0dXJlKCk/LmRlYnVnRWxlbWVudDtcblxuICBjb25zdCByZXN1bHQgPSBmaW5kSW5zdGFuY2VzKGRlYnVnRWxlbWVudCwgZ2V0U291cmNlT2ZNb2NrKHNlbCkpO1xuICBpZiAocmVzdWx0Lmxlbmd0aCkge1xuICAgIHJldHVybiByZXN1bHRbMF07XG4gIH1cbiAgaWYgKG5vdEZvdW5kVmFsdWUgIT09IGRlZmF1bHROb3RGb3VuZFZhbHVlKSB7XG4gICAgcmV0dXJuIG5vdEZvdW5kVmFsdWU7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZmluZCBhbiBpbnN0YW5jZSB2aWEgbmdNb2Nrcy5maW5kSW5zdGFuY2UoJHtzZWwubmFtZX0pYCk7XG59O1xuIl19