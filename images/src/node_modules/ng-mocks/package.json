{
  "name": "ng-mocks",
  "version": "10.5.4",
  "description": "A library creating angular mock components, directives, pipes, services, providers and modules in unit tests, which also includes shallow rendering and precise stubs to dump child dependencies.",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "npm run clean && tsc",
    "build:all": "npm run lint && npm run build && npm run test",
    "i:a": "npm run i:a5 & npm run i:a6 & npm run i:a7 & npm run i:a8 & npm run i:a9 & npm run i:a10 & npm run i:a11 & wait",
    "i:a5": "npm run i:a5es5 && npm run i:a5es2015",
    "i:a5es5": "cd e2e/a5es5 && npm install --silent --quiet --no-progress",
    "i:a5es2015": "cd e2e/a5es2015 && npm install --silent --quiet --no-progress",
    "i:a6": "cd e2e/a6 && npm install --silent --quiet --no-progress",
    "i:a7": "cd e2e/a7 && npm install --silent --quiet --no-progress",
    "i:a8": "cd e2e/a8 && npm install --silent --quiet --no-progress",
    "i:a9": "cd e2e/a9 && npm install --silent --quiet --no-progress",
    "i:a10": "cd e2e/a10 && npm install --silent --quiet --no-progress",
    "i:a11": "cd e2e/a11 && npm install --silent --quiet --no-progress",
    "s:a": "npm run s:a5 & npm run s:a6 & npm run s:a7 & npm run s:a8 & npm run s:a9 & npm run s:a10 & npm run s:a11 & wait",
    "s:a5": "npm run s:a5es5 && npm run s:a5es2015",
    "s:a5es5": "P=e2e/a5es5/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "s:a5es2015": "P=e2e/a5es2015/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "s:a6": "P=e2e/a6/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "s:a7": "P=e2e/a7/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "s:a8": "P=e2e/a8/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "s:a9": "P=e2e/a9/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "s:a10": "P=e2e/a10/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "s:a11": "P=e2e/a11/node_modules/ng-mocks && rm -Rf $P && mkdir -p $P && cp -R dist $P && cp package.json $P",
    "clear:a": "npm run clear:a5 & npm run clear:a6 & npm run clear:a7 & npm run clear:a8 & npm run clear:a9 & npm run clear:a10 & npm run clear:a11 & wait",
    "clear:a5": "npm run clear:a5es5 && npm run clear:a5es2015",
    "clear:a5es5": "rm -Rf e2e/a5es5/node_modules/ng-mocks && rm -Rf e2e/a5es5/test",
    "clear:a5es2015": "rm -Rf e2e/a5es2015/node_modules/ng-mocks && rm -Rf e2e/a5es2015/test",
    "clear:a6": "rm -Rf e2e/a6/node_modules/ng-mocks && rm -Rf e2e/a6/test",
    "clear:a7": "rm -Rf e2e/a7/node_modules/ng-mocks && rm -Rf e2e/a7/test",
    "clear:a8": "rm -Rf e2e/a8/node_modules/ng-mocks && rm -Rf e2e/a8/test",
    "clear:a9": "rm -Rf e2e/a9/node_modules/ng-mocks && rm -Rf e2e/a9/test",
    "clear:a10": "rm -Rf e2e/a10/node_modules/ng-mocks && rm -Rf e2e/a10/test",
    "clear:a11": "rm -Rf e2e/a11/node_modules/ng-mocks && rm -Rf e2e/a11/test",
    "s:test:a": "npm run s:test:a5 & npm run s:test:a6 & npm run s:test:a7 & npm run s:test:a8 & npm run s:test:a9 & npm run s:test:a10 & npm run s:test:a11 & wait",
    "s:test:a5": "npm run s:test:a5es5 && npm run s:test:a5es2015",
    "s:test:a5es5": "P=e2e/a5es5/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P && rm $P/examples/TestRoutingGuard/test.spec.ts && rm $P/examples/TestRoutingResolver/test.spec.ts",
    "s:test:a5es2015": "P=e2e/a5es2015/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P && rm $P/examples/TestRoutingGuard/test.spec.ts && rm $P/examples/TestRoutingResolver/test.spec.ts",
    "s:test:a6": "P=e2e/a6/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P",
    "s:test:a7": "P=e2e/a7/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P",
    "s:test:a8": "P=e2e/a8/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P",
    "s:test:a9": "P=e2e/a9/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P",
    "s:test:a10": "P=e2e/a10/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P",
    "s:test:a11": "P=e2e/a11/src/test && rm -Rf $P && mkdir -p $P && cp -R tests $P && cp -R examples $P",
    "e2e": "npm run build && npm run i:a && npm run clear:a && npm run s:a && npm run s:test:a && npm run test:a",
    "clean": "rm -rf dist test-reports tmp",
    "commit": "npx git-cz",
    "lint": "tslint --project tsconfig.json",
    "lint:fix": "tslint --project tsconfig.json --fix",
    "prettier:repo": "prettier --write \"**/*.*\"",
    "prettier:check": "prettier -c \"**/*.*\"",
    "prettier:stage": "pretty-quick --staged",
    "release": "export $(cat .env) && semantic-release",
    "test": "karma start",
    "test:debug": "npm run test:watch -- --browsers=Chrome",
    "test:watch": "karma start --auto-watch --single-run=false",
    "test:a": "npm run test:a5 && npm run test:a6 && npm run test:a7 &&npm run test:a8 && npm run test:a9 && npm run test:a10 && npm run test:a11",
    "test:a5": "npm run test:a5es5 && npm run test:a5es2015",
    "test:a5es5": "cd e2e/a5es5 && npm run test",
    "test:a5es2015": "cd e2e/a5es2015 && npm run test",
    "test:a6": "cd e2e/a6 && npm run test",
    "test:a7": "cd e2e/a7 && npm run test",
    "test:a8": "cd e2e/a8 && npm run test",
    "test:a9": "cd e2e/a9 && npm run test",
    "test:a10": "cd e2e/a10 && npm run test",
    "test:a11": "cd e2e/a11 && npm run test"
  },
  "repository": {
    "type": "git",
    "url": "github.com:ike18t/ng-mocks.git"
  },
  "keywords": [
    "angular unit tests",
    "angular testing",
    "mock component",
    "mock directive",
    "mock pipe",
    "mock provider",
    "mock service",
    "shallow render",
    "shallow rendering",
    "an angular test example",
    "mocking TestBed how to",
    "stub child dependency",
    "stubbing",
    "dumb",
    "create mock dummy child copies"
  ],
  "author": {
    "name": "Isaac Datlof",
    "email": "ike18t@gmail.com",
    "url": "https://github.com/ike18t"
  },
  "contributors": [
    {
      "name": "MG.",
      "email": "m@sudo.eu",
      "url": "https://sudo.eu"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ike18t/ng-mocks/issues"
  },
  "homepage": "https://github.com/ike18t/ng-mocks#readme",
  "peerDependencies": {
    "@angular/compiler": ">=5.x <=11.x",
    "@angular/core": ">=5.x <=11.x",
    "@angular/forms": ">=5.x <=11.x",
    "@angular/platform-browser": ">=5.x <=11.x"
  },
  "devDependencies": {
    "@angular/animations": "^10.2.0",
    "@angular/common": "^10.2.0",
    "@angular/compiler": "^10.2.0",
    "@angular/core": "^10.2.0",
    "@angular/forms": "^10.2.0",
    "@angular/platform-browser": "^10.2.0",
    "@angular/platform-browser-dynamic": "^10.2.0",
    "@angular/router": "^10.2.0",
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/exec": "^5.0.0",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/github": "^7.1.1",
    "@types/core-js": "^2.5.3",
    "@types/jasmine": "2.8.9",
    "@types/jest": "^22.2.3",
    "@types/node": "^10.17.27",
    "codecov": "^3.8.1",
    "core-js": "^2.6.11",
    "coveralls": "^3.1.0",
    "husky": "^4.3.0",
    "jasmine-ts": "~0.2.1",
    "karma": "^5.2.3",
    "karma-chrome-launcher": "^3.1.0",
    "karma-coverage": "^2.0.3",
    "karma-ie-launcher": "^1.0.0",
    "karma-jasmine": "^1.1.2",
    "karma-junit-reporter": "^2.0.1",
    "karma-typescript": "^5.2.0",
    "lint-staged": "^10.4.2",
    "prettier": "^2.1.2",
    "puppeteer": "~5.4.0",
    "rxjs": "~6.5.5",
    "semantic-release": "^17.2.1",
    "tslib": "^2.0.3",
    "tslint": "~6.1.3",
    "tslint-jasmine-rules": "^1.6.1",
    "typescript": "~3.9.7",
    "zone.js": "~0.10.3"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged && npm run lint",
      "post-commit": "git update-index --again"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  }
}
